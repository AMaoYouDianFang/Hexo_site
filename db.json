{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/tricks/navs/index.html","path":"tricks/navs/index.html","modified":0,"renderable":0},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/back-to-top.css","path":"css/back-to-top.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/fonts.css","path":"css/fonts.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/insight.css","path":"css/insight.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/progressbar.css","path":"css/progressbar.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/search.css","path":"css/search.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/fonts/4iCs6KVjbNBYlgoKfw72.woff2","path":"fonts/4iCs6KVjbNBYlgoKfw72.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/fonts/HI_SiYsKILxRpg3hIP6sJ7fM7PqlPevW.woff2","path":"fonts/HI_SiYsKILxRpg3hIP6sJ7fM7PqlPevW.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/fonts/HI_SiYsKILxRpg3hIP6sJ7fM7PqlMOvWjMY.woff2","path":"fonts/HI_SiYsKILxRpg3hIP6sJ7fM7PqlMOvWjMY.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/fight.png","path":"images/fight.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/thumbnail.svg","path":"images/thumbnail.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/ypy.png","path":"images/ypy.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/back-to-top.js","path":"js/back-to-top.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/clock.js","path":"js/clock.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/night.js","path":"js/night.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/universe.js","path":"js/universe.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/display.jpg","path":"images/display.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/postImg/network-protocol-map.gif","path":"postImg/network-protocol-map.gif","modified":0,"renderable":1},{"_id":"source/tricks/navs/assets/css/nav.css","path":"tricks/navs/assets/css/nav.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/xenon-forms.css","path":"tricks/navs/assets/css/xenon-forms.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/favicon.png","path":"tricks/navs/assets/images/favicon.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logo-collapsed@2x.png","path":"tricks/navs/assets/images/logo-collapsed@2x.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logo@2x.png","path":"tricks/navs/assets/images/logo@2x.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logo_dark@2x.png","path":"tricks/navs/assets/images/logo_dark@2x.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/qqgroup_webstack2.jpg","path":"tricks/navs/assets/images/qqgroup_webstack2.jpg","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/bootstrap.min.js","path":"tricks/navs/assets/js/bootstrap.min.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/joinable.js","path":"tricks/navs/assets/js/joinable.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/lozad.js","path":"tricks/navs/assets/js/lozad.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/resizeable.js","path":"tricks/navs/assets/js/resizeable.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/xenon-custom.js","path":"tricks/navs/assets/js/xenon-custom.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/xenon-api.js","path":"tricks/navs/assets/js/xenon-api.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/xenon-toggles.js","path":"tricks/navs/assets/js/xenon-toggles.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/qqgroup_webstack.jpg","path":"tricks/navs/assets/images/qqgroup_webstack.jpg","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/webstack_banner_cn.png","path":"tricks/navs/assets/images/webstack_banner_cn.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/wechat_viggo.jpg","path":"tricks/navs/assets/images/wechat_viggo.jpg","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/TweenMax.min.js","path":"tricks/navs/assets/js/TweenMax.min.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/js/jquery-1.11.1.min.js","path":"tricks/navs/assets/js/jquery-1.11.1.min.js","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/xenon-components.css","path":"tricks/navs/assets/css/xenon-components.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/flags/flag-cn.png","path":"tricks/navs/assets/images/flags/flag-cn.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/flags/flag-us.png","path":"tricks/navs/assets/images/flags/flag-us.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/365PSD.png","path":"tricks/navs/assets/images/logos/365PSD.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/36kr.png","path":"tricks/navs/assets/images/logos/36kr.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/3dsmax.png","path":"tricks/navs/assets/images/logos/3dsmax.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/500d.png","path":"tricks/navs/assets/images/logos/500d.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/55mm.png","path":"tricks/navs/assets/images/logos/55mm.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/90sheji.png","path":"tricks/navs/assets/images/logos/90sheji.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/ADOBEXDCC.png","path":"tricks/navs/assets/images/logos/ADOBEXDCC.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/AdobeAfterEffectsCC.png","path":"tricks/navs/assets/images/logos/AdobeAfterEffectsCC.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/AdobeColorCC.png","path":"tricks/navs/assets/images/logos/AdobeColorCC.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/AffinityDesigner.png","path":"tricks/navs/assets/images/logos/AffinityDesigner.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/AirbnbDesign.png","path":"tricks/navs/assets/images/logos/AirbnbDesign.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Android9patch.png","path":"tricks/navs/assets/images/logos/Android9patch.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/AndroidNiceties.png","path":"tricks/navs/assets/images/logos/AndroidNiceties.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/AwesomeSketchPlugins.png","path":"tricks/navs/assets/images/logos/AwesomeSketchPlugins.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/BWG.png","path":"tricks/navs/assets/images/logos/BWG.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/CSSDesignAwards.png","path":"tricks/navs/assets/images/logos/CSSDesignAwards.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/CollectUI.png","path":"tricks/navs/assets/images/logos/CollectUI.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Coolest.png","path":"tricks/navs/assets/images/logos/Coolest.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Designmodo.png","path":"tricks/navs/assets/images/logos/Designmodo.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Dunnnk.png","path":"tricks/navs/assets/images/logos/Dunnnk.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Ecommercefolio.png","path":"tricks/navs/assets/images/logos/Ecommercefolio.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Ezgif.png","path":"tricks/navs/assets/images/logos/Ezgif.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/FacebookDesign.png","path":"tricks/navs/assets/images/logos/FacebookDesign.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/FindIcons.png","path":"tricks/navs/assets/images/logos/FindIcons.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Fondertype.png","path":"tricks/navs/assets/images/logos/Fondertype.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/FontM.png","path":"tricks/navs/assets/images/logos/FontM.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Fribbble.png","path":"tricks/navs/assets/images/logos/Fribbble.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/GoogleDesign.png","path":"tricks/navs/assets/images/logos/GoogleDesign.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/INDESIGN .png","path":"tricks/navs/assets/images/logos/INDESIGN .png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/IcoMoonApp.png","path":"tricks/navs/assets/images/logos/IcoMoonApp.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Iconfinder.png","path":"tricks/navs/assets/images/logos/Iconfinder.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Illustrator.png","path":"tricks/navs/assets/images/logos/Illustrator.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/InstantLogoSearch.png","path":"tricks/navs/assets/images/logos/InstantLogoSearch.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/JDC.png","path":"tricks/navs/assets/images/logos/JDC.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Lapa.png","path":"tricks/navs/assets/images/logos/Lapa.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Material_Design.png","path":"tricks/navs/assets/images/logos/Material_Design.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Materialicons.png","path":"tricks/navs/assets/images/logos/Materialicons.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Medialoot.png","path":"tricks/navs/assets/images/logos/Medialoot.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/MockupZone.png","path":"tricks/navs/assets/images/logos/MockupZone.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/MuseCC.png","path":"tricks/navs/assets/images/logos/MuseCC.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/MyFonts.png","path":"tricks/navs/assets/images/logos/MyFonts.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/NEXT.png","path":"tricks/navs/assets/images/logos/NEXT.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/OnlineWebFonts.png","path":"tricks/navs/assets/images/logos/OnlineWebFonts.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/PhotoshopLady.png","path":"tricks/navs/assets/images/logos/PhotoshopLady.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/PrincipleRepo.png","path":"tricks/navs/assets/images/logos/PrincipleRepo.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Pttrns.png","path":"tricks/navs/assets/images/logos/Pttrns.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/ReallyGoodUX.png","path":"tricks/navs/assets/images/logos/ReallyGoodUX.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/SiteSee.png","path":"tricks/navs/assets/images/logos/SiteSee.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/Sketch.png","path":"tricks/navs/assets/images/logos/Sketch.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/SketchMeasure.png","path":"tricks/navs/assets/images/logos/SketchMeasure.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/SplitShire.png","path":"tricks/navs/assets/images/logos/SplitShire.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/StockSnap.png","path":"tricks/navs/assets/images/logos/StockSnap.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/UICloud.png","path":"tricks/navs/assets/images/logos/UICloud.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/UrbanFonts.png","path":"tricks/navs/assets/images/logos/UrbanFonts.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/WebInspiration.png","path":"tricks/navs/assets/images/logos/WebInspiration.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/abstractfonts.png","path":"tricks/navs/assets/images/logos/abstractfonts.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/albumarium.png","path":"tricks/navs/assets/images/logos/albumarium.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/aliued.png","path":"tricks/navs/assets/images/logos/aliued.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/aliuedcn.png","path":"tricks/navs/assets/images/logos/aliuedcn.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/aliyun.png","path":"tricks/navs/assets/images/logos/aliyun.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/anyway.png","path":"tricks/navs/assets/images/logos/anyway.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/appinn.png","path":"tricks/navs/assets/images/logos/appinn.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/awesome_design_systems.png","path":"tricks/navs/assets/images/logos/awesome_design_systems.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/awwwards.png","path":"tricks/navs/assets/images/logos/awwwards.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/behance.png","path":"tricks/navs/assets/images/logos/behance.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/blender.png","path":"tricks/navs/assets/images/logos/blender.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/boxesandarrows.png","path":"tricks/navs/assets/images/logos/boxesandarrows.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/cdc.png","path":"tricks/navs/assets/images/logos/cdc.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/chanpin100.png","path":"tricks/navs/assets/images/logos/chanpin100.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/cinema4d.png","path":"tricks/navs/assets/images/logos/cinema4d.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/colorhunt.png","path":"tricks/navs/assets/images/logos/colorhunt.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/coolors.png","path":"tricks/navs/assets/images/logos/coolors.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/csspeeper.png","path":"tricks/navs/assets/images/logos/csspeeper.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/ctrip.png","path":"tricks/navs/assets/images/logos/ctrip.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/dafont.png","path":"tricks/navs/assets/images/logos/dafont.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/default.png","path":"tricks/navs/assets/images/logos/default.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/designguidelines.png","path":"tricks/navs/assets/images/logos/designguidelines.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/designmunk.png","path":"tricks/navs/assets/images/logos/designmunk.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/digitaling.png","path":"tricks/navs/assets/images/logos/digitaling.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/doyoudo.png","path":"tricks/navs/assets/images/logos/doyoudo.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/dribbble.png","path":"tricks/navs/assets/images/logos/dribbble.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/easyicon.png","path":"tricks/navs/assets/images/logos/easyicon.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/eico.png","path":"tricks/navs/assets/images/logos/eico.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/euxbaidu.png","path":"tricks/navs/assets/images/logos/euxbaidu.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/figma.png","path":"tricks/navs/assets/images/logos/figma.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/flaticon.png","path":"tricks/navs/assets/images/logos/flaticon.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/flatuicolorpicker.png","path":"tricks/navs/assets/images/logos/flatuicolorpicker.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/flatuicolors.png","path":"tricks/navs/assets/images/logos/flatuicolors.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/flinto.png","path":"tricks/navs/assets/images/logos/flinto.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/fontawesomeicon.png","path":"tricks/navs/assets/images/logos/fontawesomeicon.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/fontex.png","path":"tricks/navs/assets/images/logos/fontex.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/fonts2u.png","path":"tricks/navs/assets/images/logos/fonts2u.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/fontsquirrel.png","path":"tricks/navs/assets/images/logos/fontsquirrel.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/forgraphictm.png","path":"tricks/navs/assets/images/logos/forgraphictm.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/framer.png","path":"tricks/navs/assets/images/logos/framer.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/freebiesbug.png","path":"tricks/navs/assets/images/logos/freebiesbug.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/freebiesupply.png","path":"tricks/navs/assets/images/logos/freebiesupply.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/freenaturestock.png","path":"tricks/navs/assets/images/logos/freenaturestock.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/freepik.png","path":"tricks/navs/assets/images/logos/freepik.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/fwa.png","path":"tricks/navs/assets/images/logos/fwa.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/gaoding.png","path":"tricks/navs/assets/images/logos/gaoding.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/google.png","path":"tricks/navs/assets/images/logos/google.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/googlefont.png","path":"tricks/navs/assets/images/logos/googlefont.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/goqr.png","path":"tricks/navs/assets/images/logos/goqr.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/grabient.png","path":"tricks/navs/assets/images/logos/grabient.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/gradients.png","path":"tricks/navs/assets/images/logos/gradients.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/graphberry.png","path":"tricks/navs/assets/images/logos/graphberry.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/gratisography.png","path":"tricks/navs/assets/images/logos/gratisography.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/gtn9.png","path":"tricks/navs/assets/images/logos/gtn9.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/hdwallpapers.png","path":"tricks/navs/assets/images/logos/hdwallpapers.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/huaban.png","path":"tricks/navs/assets/images/logos/huaban.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/human_interface_guidelines.png","path":"tricks/navs/assets/images/logos/human_interface_guidelines.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/iconarchive.png","path":"tricks/navs/assets/images/logos/iconarchive.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/iconfont.png","path":"tricks/navs/assets/images/logos/iconfont.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/iconmonstr.png","path":"tricks/navs/assets/images/logos/iconmonstr.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/iconsfeed.png","path":"tricks/navs/assets/images/logos/iconsfeed.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/imcreator.png","path":"tricks/navs/assets/images/logos/imcreator.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/imooc.png","path":"tricks/navs/assets/images/logos/imooc.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/insight.png","path":"tricks/navs/assets/images/logos/insight.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/ionicons.png","path":"tricks/navs/assets/images/logos/ionicons.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/invisionapp.png","path":"tricks/navs/assets/images/logos/invisionapp.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/iosicongallery.png","path":"tricks/navs/assets/images/logos/iosicongallery.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/isorepublic.png","path":"tricks/navs/assets/images/logos/isorepublic.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/isux.png","path":"tricks/navs/assets/images/logos/isux.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/iyunying.png","path":"tricks/navs/assets/images/logos/iyunying.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/jeshoots.png","path":"tricks/navs/assets/images/logos/jeshoots.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/khroma.png","path":"tricks/navs/assets/images/logos/khroma.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/klart.png","path":"tricks/navs/assets/images/logos/klart.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/lanrentuku.png","path":"tricks/navs/assets/images/logos/lanrentuku.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/leiphone.png","path":"tricks/navs/assets/images/logos/leiphone.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/librestock.png","path":"tricks/navs/assets/images/logos/librestock.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/lieyunwang.png","path":"tricks/navs/assets/images/logos/lieyunwang.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/lifeofpix.png","path":"tricks/navs/assets/images/logos/lifeofpix.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/liqi.png","path":"tricks/navs/assets/images/logos/liqi.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/littlebigdetails.png","path":"tricks/navs/assets/images/logos/littlebigdetails.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/losttype.png","path":"tricks/navs/assets/images/logos/losttype.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/lstore.png","path":"tricks/navs/assets/images/logos/lstore.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/magdeleine.png","path":"tricks/navs/assets/images/logos/magdeleine.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/marvelapp.png","path":"tricks/navs/assets/images/logos/marvelapp.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/medium.png","path":"tricks/navs/assets/images/logos/medium.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/mmtstock.png","path":"tricks/navs/assets/images/logos/mmtstock.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/mockupworld.png","path":"tricks/navs/assets/images/logos/mockupworld.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/mustsee.png","path":"tricks/navs/assets/images/logos/mustsee.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/mxd.png","path":"tricks/navs/assets/images/logos/mxd.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/myphotopack.png","path":"tricks/navs/assets/images/logos/myphotopack.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/navnav.png","path":"tricks/navs/assets/images/logos/navnav.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/negativespace.png","path":"tricks/navs/assets/images/logos/negativespace.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/niaogebiji.png","path":"tricks/navs/assets/images/logos/niaogebiji.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/niceui.png","path":"tricks/navs/assets/images/logos/niceui.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/nipic.png","path":"tricks/navs/assets/images/logos/nipic.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/nngroup.png","path":"tricks/navs/assets/images/logos/nngroup.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/notaselfie.png","path":"tricks/navs/assets/images/logos/notaselfie.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/officeplus.png","path":"tricks/navs/assets/images/logos/officeplus.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/pages.png","path":"tricks/navs/assets/images/logos/pages.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/papers.png","path":"tricks/navs/assets/images/logos/papers.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/photoshop.png","path":"tricks/navs/assets/images/logos/photoshop.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/photoshopetiquette.png","path":"tricks/navs/assets/images/logos/photoshopetiquette.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/pinterest.png","path":"tricks/navs/assets/images/logos/pinterest.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/pixabay.png","path":"tricks/navs/assets/images/logos/pixabay.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/pixeden.png","path":"tricks/navs/assets/images/logos/pixeden.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/pmcaff.png","path":"tricks/navs/assets/images/logos/pmcaff.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/pptmind.png","path":"tricks/navs/assets/images/logos/pptmind.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/pptplus.png","path":"tricks/navs/assets/images/logos/pptplus.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/principle.png","path":"tricks/navs/assets/images/logos/principle.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/producthunt.png","path":"tricks/navs/assets/images/logos/producthunt.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/protopie.png","path":"tricks/navs/assets/images/logos/protopie.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/psefan.png","path":"tricks/navs/assets/images/logos/psefan.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/publicdomainarchive.png","path":"tricks/navs/assets/images/logos/publicdomainarchive.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/qianku.png","path":"tricks/navs/assets/images/logos/qianku.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/qiantu.png","path":"tricks/navs/assets/images/logos/qiantu.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/reeoo.png","path":"tricks/navs/assets/images/logos/reeoo.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sccnn.png","path":"tricks/navs/assets/images/logos/sccnn.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/screensizes.png","path":"tricks/navs/assets/images/logos/screensizes.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sicangziti.png","path":"tricks/navs/assets/images/logos/sicangziti.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/simplelineicons.png","path":"tricks/navs/assets/images/logos/simplelineicons.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/siteInspire.png","path":"tricks/navs/assets/images/logos/siteInspire.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sizzy.png","path":"tricks/navs/assets/images/logos/sizzy.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sketchIm.png","path":"tricks/navs/assets/images/logos/sketchIm.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sketchapp.png","path":"tricks/navs/assets/images/logos/sketchapp.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sketchappsources.png","path":"tricks/navs/assets/images/logos/sketchappsources.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sketchcasts.png","path":"tricks/navs/assets/images/logos/sketchcasts.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sketchcn.png","path":"tricks/navs/assets/images/logos/sketchcn.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/skitterphoto.png","path":"tricks/navs/assets/images/logos/skitterphoto.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sketchhunt.png","path":"tricks/navs/assets/images/logos/sketchhunt.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/smashingmagazine.png","path":"tricks/navs/assets/images/logos/smashingmagazine.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sousucai.png","path":"tricks/navs/assets/images/logos/sousucai.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/ss-kexueshangwang.png","path":"tricks/navs/assets/images/logos/ss-kexueshangwang.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/sspai.png","path":"tricks/navs/assets/images/logos/sspai.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/stokpic.png","path":"tricks/navs/assets/images/logos/stokpic.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/svgomg.png","path":"tricks/navs/assets/images/logos/svgomg.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/tgideas.png","path":"tricks/navs/assets/images/logos/tgideas.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/thedayscolor.png","path":"tricks/navs/assets/images/logos/thedayscolor.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/thestocks.png","path":"tricks/navs/assets/images/logos/thestocks.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/threed.png","path":"tricks/navs/assets/images/logos/threed.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/tinypng.png","path":"tricks/navs/assets/images/logos/tinypng.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/today.png","path":"tricks/navs/assets/images/logos/today.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/tretars.png","path":"tricks/navs/assets/images/logos/tretars.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/trianglify.png","path":"tricks/navs/assets/images/logos/trianglify.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/typekit.png","path":"tricks/navs/assets/images/logos/typekit.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uedbaidu.png","path":"tricks/navs/assets/images/logos/uedbaidu.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uedc.png","path":"tricks/navs/assets/images/logos/uedc.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/ui8.png","path":"tricks/navs/assets/images/logos/ui8.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uicn.png","path":"tricks/navs/assets/images/logos/uicn.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uigradients.png","path":"tricks/navs/assets/images/logos/uigradients.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uigreat.png","path":"tricks/navs/assets/images/logos/uigreat.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uikitme.png","path":"tricks/navs/assets/images/logos/uikitme.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uisdc.png","path":"tricks/navs/assets/images/logos/uisdc.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uiuigreat.png","path":"tricks/navs/assets/images/logos/uiuigreat.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/unsplash.png","path":"tricks/navs/assets/images/logos/unsplash.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uplabs.png","path":"tricks/navs/assets/images/logos/uplabs.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/usepanda.png","path":"tricks/navs/assets/images/logos/usepanda.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uxcoffee.png","path":"tricks/navs/assets/images/logos/uxcoffee.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uxdesignweekly.png","path":"tricks/navs/assets/images/logos/uxdesignweekly.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/uxren.png","path":"tricks/navs/assets/images/logos/uxren.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/vanschneider.png","path":"tricks/navs/assets/images/logos/vanschneider.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/viggoz.png","path":"tricks/navs/assets/images/logos/viggoz.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/visualhunt.png","path":"tricks/navs/assets/images/logos/visualhunt.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/wallhalla.png","path":"tricks/navs/assets/images/logos/wallhalla.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/wappalyzer.png","path":"tricks/navs/assets/images/logos/wappalyzer.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/web_ui_tutorial.png","path":"tricks/navs/assets/images/logos/web_ui_tutorial.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/webdesignledger.png","path":"tricks/navs/assets/images/logos/webdesignledger.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/webgradients.png","path":"tricks/navs/assets/images/logos/webgradients.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/worldvectorlogo.png","path":"tricks/navs/assets/images/logos/worldvectorlogo.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/woshipm.png","path":"tricks/navs/assets/images/logos/woshipm.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/wotu.png","path":"tricks/navs/assets/images/logos/wotu.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/xituqu.png","path":"tricks/navs/assets/images/logos/xituqu.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/xiyou.png","path":"tricks/navs/assets/images/logos/xiyou.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/yineng.png","path":"tricks/navs/assets/images/logos/yineng.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/youtube.png","path":"tricks/navs/assets/images/logos/youtube.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/ypppt.png","path":"tricks/navs/assets/images/logos/ypppt.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/yrucd.png","path":"tricks/navs/assets/images/logos/yrucd.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/zaodula.png","path":"tricks/navs/assets/images/logos/zaodula.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/zcool.png","path":"tricks/navs/assets/images/logos/zcool.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/zheshu.png","path":"tricks/navs/assets/images/logos/zheshu.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/logos/ziticq.png","path":"tricks/navs/assets/images/logos/ziticq.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/index.html","path":"tricks/navs/assets/index.html","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/bootstrap.css","path":"tricks/navs/assets/css/bootstrap.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.eot","path":"tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.eot","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.ttf","path":"tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.ttf","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.woff","path":"tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.woff","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/xenon-core.css","path":"tricks/navs/assets/css/xenon-core.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/xenon-skins.css","path":"tricks/navs/assets/css/xenon-skins.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.svg","path":"tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.svg","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/animation.css","path":"tricks/navs/assets/css/fonts/elusive/css/animation.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive-codes.css","path":"tricks/navs/assets/css/fonts/elusive/css/elusive-codes.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive-ie7-codes.css","path":"tricks/navs/assets/css/fonts/elusive/css/elusive-ie7-codes.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive-ie7.css","path":"tricks/navs/assets/css/fonts/elusive/css/elusive-ie7.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive.css","path":"tricks/navs/assets/css/fonts/elusive/css/elusive.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/font/elusive.eot","path":"tricks/navs/assets/css/fonts/elusive/font/elusive.eot","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/font/elusive.ttf","path":"tricks/navs/assets/css/fonts/elusive/font/elusive.ttf","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/font/elusive.woff","path":"tricks/navs/assets/css/fonts/elusive/font/elusive.woff","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/css/font-awesome.css","path":"tricks/navs/assets/css/fonts/fontawesome/css/font-awesome.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/css/font-awesome.min.css","path":"tricks/navs/assets/css/fonts/fontawesome/css/font-awesome.min.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.eot","path":"tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/animation.css","path":"tricks/navs/assets/css/fonts/linecons/css/animation.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons-codes.css","path":"tricks/navs/assets/css/fonts/linecons/css/linecons-codes.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons-ie7-codes.css","path":"tricks/navs/assets/css/fonts/linecons/css/linecons-ie7-codes.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons-ie7.css","path":"tricks/navs/assets/css/fonts/linecons/css/linecons-ie7.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons.css","path":"tricks/navs/assets/css/fonts/linecons/css/linecons.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/font/linecons.eot","path":"tricks/navs/assets/css/fonts/linecons/font/linecons.eot","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/font/linecons.svg","path":"tricks/navs/assets/css/fonts/linecons/font/linecons.svg","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/font/linecons.ttf","path":"tricks/navs/assets/css/fonts/linecons/font/linecons.ttf","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/font/linecons.woff","path":"tricks/navs/assets/css/fonts/linecons/font/linecons.woff","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/animation.css","path":"tricks/navs/assets/css/fonts/meteocons/css/animation.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons-codes.css","path":"tricks/navs/assets/css/fonts/meteocons/css/meteocons-codes.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons-embedded.css","path":"tricks/navs/assets/css/fonts/meteocons/css/meteocons-embedded.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons-ie7-codes.css","path":"tricks/navs/assets/css/fonts/meteocons/css/meteocons-ie7-codes.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons-ie7.css","path":"tricks/navs/assets/css/fonts/meteocons/css/meteocons-ie7.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons.css","path":"tricks/navs/assets/css/fonts/meteocons/css/meteocons.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/font/meteocons.eot","path":"tricks/navs/assets/css/fonts/meteocons/font/meteocons.eot","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/font/meteocons.svg","path":"tricks/navs/assets/css/fonts/meteocons/font/meteocons.svg","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/font/meteocons.ttf","path":"tricks/navs/assets/css/fonts/meteocons/font/meteocons.ttf","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/font/meteocons.woff","path":"tricks/navs/assets/css/fonts/meteocons/font/meteocons.woff","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/font/elusive.svg","path":"tricks/navs/assets/css/fonts/elusive/font/elusive.svg","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/FontAwesome.otf","path":"tricks/navs/assets/css/fonts/fontawesome/fonts/FontAwesome.otf","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.ttf","path":"tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.woff","path":"tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons-embedded.css","path":"tricks/navs/assets/css/fonts/linecons/css/linecons-embedded.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive-embedded.css","path":"tricks/navs/assets/css/fonts/elusive/css/elusive-embedded.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/webstack_icon_producthunt.png","path":"tricks/navs/assets/images/webstack_icon_producthunt.png","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.svg","path":"tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/css/xenon.css","path":"tricks/navs/assets/css/xenon.css","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/images/preview.gif","path":"tricks/navs/assets/images/preview.gif","modified":0,"renderable":0},{"_id":"source/tricks/navs/assets/webstack_logos.sketch","path":"tricks/navs/assets/webstack_logos.sketch","modified":0,"renderable":0},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/jitwxs_avatar.jpg","path":"avatars/jitwxs_avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/dp2px_avatar.png","path":"avatars/dp2px_avatar.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/liuyao-blog-avatar.jpg","path":"avatars/liuyao-blog-avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/yafine_avatar.jpg","path":"avatars/yafine_avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/avatar.jpg","path":"avatars/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/aye_avatar.jpg","path":"avatars/aye_avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/geekinns_avatar.jpg","path":"avatars/geekinns_avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/geekinns_avatar.png","path":"avatars/geekinns_avatar.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/CloudCver_avatar.jpg","path":"avatars/CloudCver_avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/fight.png","path":"avatars/fight.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"d0bcd830a1c0d28514bd9202ea586ee7fea4046b","modified":1582205541405},{"_id":"source/robots.txt","hash":"e83ccaf0d18af3e483954e84f57ba2530330a67f","modified":1584358551745},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/LICENSE","hash":"41f72cd544612bc4589c924c776422b800a4eff7","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/README.md","hash":"c351bc76d3b4a138989c50f57bd3c52fa95eaa56","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/_config.yml","hash":"c08f4e6f8ef6cb0c27ff28fdcad1a56dd3380e80","modified":1584150878426},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/package.json","hash":"78a1650be5d9882a88b1d6d00b46f5181fd3cb29","modified":1582779161594},{"_id":"source/_posts/Cplex_OPL-program.md","hash":"46e85fb2375c76a05a12d885e8b5f3f8b4981f1a","modified":1583502242824},{"_id":"source/_posts/Icarus-record.md","hash":"b84a67515bd63625407431ab5f1384cd93c75d24","modified":1584164502490},{"_id":"source/_posts/JavaSE01.md","hash":"bc6176d1b238e0be5c2406c5bc83a3d7f38205e0","modified":1583503108637},{"_id":"source/_posts/JavaSE02.md","hash":"72820c3275ff173f07aade0558f01b6e3518e0ce","modified":1583502523716},{"_id":"source/_posts/JavaSE03.md","hash":"cebae03dccc866f1828f3c1144f976921cb60240","modified":1583502537170},{"_id":"source/_posts/JavaSE04.md","hash":"e8dc62e84871da5a8cd0749856097bcd0752a622","modified":1583502570352},{"_id":"source/_posts/JavaSE05.md","hash":"8d289f81f91cccc63a66ffa373fbf776aa2580c3","modified":1583502850787},{"_id":"source/_posts/JavaSE06.md","hash":"50b027076716f98e4f739296dac91aada2ade415","modified":1583501964950},{"_id":"source/_posts/JavaSE07.md","hash":"891a0f32e59c4a19202bc9a2f3795464846ae9cb","modified":1583934139390},{"_id":"source/_posts/JavaSE08.md","hash":"833efbed7542db405ab46139f3e1c007cc28767c","modified":1584365186570},{"_id":"source/_posts/computer-network-basic.md","hash":"1e6440f00acde86a948151905bbc47299bbee062","modified":1583845487654},{"_id":"source/_posts/hello-world.md","hash":"b635145cc1f91a84f38d9f79ebc1ab28207fb894","modified":1583502388403},{"_id":"source/_posts/pancreas.md","hash":"7edb4df490a07ab692ca6d02e05dcb4b4d5c3bc5","modified":1583804230651},{"_id":"source/_posts/self-use-software.md","hash":"c0bac1ae7cdf3044452c1b7b2b764386512ab432","modified":1583566522242},{"_id":"source/_posts/test.md","hash":"d84e5a42a19666822f5d9f1b1a5b99cc6c23f546","modified":1584890255966},{"_id":"source/about/index.md","hash":"ce3b52d07374089300380607506e9cc57569c4e4","modified":1583720979006},{"_id":"source/gallery/index.md","hash":"6b5e47782c19ff9fbdb6f23e93f665ae601b08b3","modified":1584164177225},{"_id":"source/links/index.md","hash":"f94de9d08f33e13d4b5e5f02da11b41c50cd4799","modified":1584975305254},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/.github/ISSUE_TEMPLATE.md","hash":"6b17b84116938367757928087a09dcb8489d06f6","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/en.yml","hash":"d6d9a1ee999fb2b42bf5faa3fa3bfd4852a56451","modified":1583157922828},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/de.yml","hash":"79d769768780b9a72eb256ab61f217b8bdebf85b","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/es.yml","hash":"2e59e579d393c881dcbb885516d93eeaf469cec2","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/fr.yml","hash":"0017f93a5d491a9c0e55911cdc35316762c5a94e","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/id.yml","hash":"92d2d19a62a17b6e99f82a014309bbf6c13c9ae8","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/ja.yml","hash":"6eed7771de2353d71b720c6e605cceb3f230b12e","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/pl.yml","hash":"43f5447c38c9be2e1f5ce6181a0f97eeb437b059","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/ko.yml","hash":"e7ac736b604429adedd67f3ca6043201eff7b23b","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/pt-BR.yml","hash":"bcf5bc81ca855d26bbc3b3bfabc7d84429e74b85","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/ru.yml","hash":"ba8b4f7d77eb1d1e28aa1f9107bd0bbbdc4cba99","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/tr.yml","hash":"eff1c0b3d5c4b328f6dd74a195ff378c898f4d29","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/vn.yml","hash":"6d9f4fabca711a6cb0a0efd72aa75c3641beb4a6","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/zh-CN.yml","hash":"804f6a1edee49bb6a5ecb8e9d14d3e93eaca37c0","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/languages/zh-TW.yml","hash":"6ff978a0c4c11e996925e1a912a1d805f4680a6c","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/archive.ejs","hash":"2527527eaf3e757ab476325f691d2e2e0ff9c2d5","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/categories.ejs","hash":"29d304f2b95a04fbc5e7529f9bdce9648e3545ef","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/category.ejs","hash":"58aa84f75193b978b2072f29dbb84ed8279574b9","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/index.ejs","hash":"8ab440868f721bb7256ab9f2be96996850b0cf44","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/layout.ejs","hash":"5acc1978f3a980f285093f8602d1f592242da94d","modified":1582524628627},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/page.ejs","hash":"ebf120d46074f67ea25a231d2f7a64fd1e751904","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/post.ejs","hash":"ebf120d46074f67ea25a231d2f7a64fd1e751904","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/tag.ejs","hash":"45eb077f2ac86f5c8090cb1a2361eed56a368e95","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/tags.ejs","hash":"0c527c6b72386f11c18e8aa5249be8c601e69906","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/scripts/index.js","hash":"40839db58041e31eb06d428a91869b0789277e7e","modified":1579052706000},{"_id":"source/tricks/navs/index.html","hash":"157e13cc336a75b51b715cbe3f70e622c4efc53c","modified":1580435672000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/common/ConfigGenerator.js","hash":"451397efc7808787419fa3eb6b043c0bd8bbdf30","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/common/ConfigValidator.js","hash":"48cff5402e93b11d5266370e9c4b78ee21369cb9","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/common/utils.js","hash":"c0aeaeb57a42bcc71a92da2249762f91abd83ffe","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/generators/categories.js","hash":"7cb370ac53a05d6b1b9203579716c0ca83d35c36","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/generators/category.js","hash":"313e170e55d74526c4e1be7181ef7a21439147c9","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/generators/insight.js","hash":"c4b981443927b87cc14a3a583029e13f819d6d71","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/generators/tags.js","hash":"8195322c208706427a1cf56361669dca4d86f6f1","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/helpers/cdn.js","hash":"0bc2ca33051f02d20c164259b47cb4b68851ab50","modified":1583320322781},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/helpers/config.js","hash":"173e02987e7a7d5df1e686f6ee4edd8cf494bdd3","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/helpers/layout.js","hash":"9e456b786902548dc35234f3f0ff54364d0d075f","modified":1583242690208},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/helpers/override.js","hash":"561d8dbeaf8695910884eb8286851311aebb1e52","modified":1582455229919},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/helpers/page.js","hash":"abb417192bac52de1f8445f60aba2fff35fe825d","modified":1582292607877},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/helpers/site.js","hash":"2f55818448fe83c73418dcf9751745c7918c10e3","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/article.spec.js","hash":"ce24279cd0cd39855216dab0cd5223c755757cdf","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/comment.spec.js","hash":"b0ef033e363b918134fb5a003143e9bd8fafa300","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/config.spec.js","hash":"7a9bac384a73cf9f39173fdb2dfc2813784d8891","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/donate.spec.js","hash":"722cb2662569957e8b1d1a467d9632b8cc6e69d6","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/footer.spec.js","hash":"8e6d7c5f9a13ce03241b6562259d210b389cb88e","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/icon_link.spec.js","hash":"6a9f854e37f2964a2b2ff156fc83fb0299e3b5dc","modified":1582466009992},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/meta.spec.js","hash":"ed1b818b929d71930608291514a72ef5a639efee","modified":1583301469097},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/navbar.spec.js","hash":"7de29c0031738a4de4d31ed4f7b0c43447c7961c","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/plugins.spec.js","hash":"2fb7a28fdde9a46f576e69b9967f24d66adffb57","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/providers.spec.js","hash":"820cc6936ba75e3104cc2e8641716ed65ada8b6f","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/search.spec.js","hash":"1e3995cdc471e6a2817cd45e2b6f0fd39b4540ec","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/share.spec.js","hash":"5ec65409a17ead13974140fc5ddc19e526586d9f","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/sidebar.spec.js","hash":"630c9701affe2549abc61cd4d1e5153af2224fb6","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/specs/widgets.spec.js","hash":"e616f4d43eee55650d4dbaccf426b0e8424ff57d","modified":1583143458485},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/tasks/check_config.js","hash":"ce7626d643737c90dee6b75435ccdec26b89dacf","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/tasks/check_deps.js","hash":"ab08051f785eab2a0685aa537270d2988bc13639","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/tasks/welcome.js","hash":"00d1ef8c9609552b82e9a5140b838a9057c59508","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/includes/utils/lru.js","hash":"35c0ede3553549758ff5e4ded2bc650778793377","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/changyan.ejs","hash":"73038ac4fdfdfa71d92edaa98cc194b3446586a3","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/changyan.locals.js","hash":"49bce2ee742c7224bda97092d6e0a1a09184ef34","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/disqus.ejs","hash":"7a8c656c8651d48e21ed24c469ea75898b2b12df","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/disqus.locals.js","hash":"a8d2cecaa82ec9e2e2e61cb73417d63d115335d6","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/facebook.ejs","hash":"1c3751f36f737527e352c65bb1ca7172ff792979","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/facebook.locals.js","hash":"77e3ef1d933660d980b26d15968aa1a5c8a93a56","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/gitalk.ejs","hash":"eb1314badf793924b5786e92f8b3ebb0f21f3b58","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/gitalk.locals.js","hash":"f920f130598148b4d9f213c82f2d7f88a796012f","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/gitment.ejs","hash":"d5e1a396e23df4e75e139d12846290bdb08ba01e","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/gitment.locals.js","hash":"f920f130598148b4d9f213c82f2d7f88a796012f","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/isso.ejs","hash":"cc6a43bd24be764086f88ad7c5c97ff04df87e0b","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/isso.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/livere.ejs","hash":"12ff9a345f6bba2f732f592e39508c2afde89b00","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/livere.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/valine.ejs","hash":"514cb12d2a68cf17c81c852674eafa6875de79cf","modified":1584151185033},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/comment/valine.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/donate/alipay.ejs","hash":"3290058879973e403a05472a0fe2ac0219d5b961","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/donate/alipay.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/donate/patreon.ejs","hash":"fc19da9674649c035d133535078ff7e37d0f54c1","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/donate/patreon.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/donate/paypal.ejs","hash":"dbb90fa9214d659ea6bbd5a92ea00888adf3761e","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/donate/paypal.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/donate/wechat.ejs","hash":"051b873e1fc28c1d7c2d6443991b6a2f43813e6b","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/donate/wechat.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/article.ejs","hash":"eabd6a7c5e7c3ffa82ee5c2a882759f76486ba17","modified":1583804323733},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/article.locals.js","hash":"1f108fa96e61a681d7b1ee390b4f0ff60d042720","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/footer.ejs","hash":"901afc2c5e944cba4b013e7c915125b83ce4195f","modified":1583151109769},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/footer.locals.js","hash":"504ed92dc76723f19777463d690acfbe1d89e2ba","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/head.ejs","hash":"4bc1d0e510cb2123fa3fa98b2b2484e3275e0778","modified":1583818018302},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/navbar.ejs","hash":"531f9e56a71c8f0dd64659bc08636fc533ada6aa","modified":1584797266934},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/navbar.locals.js","hash":"7e523ba80667038f2e58cf4f9cb073e9afbc70e6","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/paginator.ejs","hash":"7837d80b27f166161b3deeffb571680025c7d723","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/scripts.ejs","hash":"99da87756d2bd234b058e90d2c6dabc1bc10f20e","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/common/widget.ejs","hash":"0b902df5403dc6ec0ca457dccc62292bed9ee4aa","modified":1582288534204},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/animejs.ejs","hash":"c17ea2cfe5cb239342166e2ba72cbfc663c8160f","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/animejs.locals.js","hash":"3bf911060a222f00b03be708c37f20e36cb66ba9","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/back-to-top.ejs","hash":"5936b5fd2f2444605a21c6c422623f07f02d5c9a","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/back-to-top.locals.js","hash":"3bf911060a222f00b03be708c37f20e36cb66ba9","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/baidu-analytics.ejs","hash":"7dbbea5722277e00a624c1796ec83d5f9c12d059","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/baidu-analytics.locals.js","hash":"c02eb152e6aff05833006e6edd32b74c1c4258c3","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/busuanzi.ejs","hash":"4285b0ae608c7c54e4ecbebb6d22d4cd1be28f70","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/busuanzi.locals.js","hash":"ec80bcfa4c1302c04130a746df4b1298d117de0b","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/gallery.ejs","hash":"7d19b7a5713d08a614578f079f1327a651c472ae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/gallery.locals.js","hash":"037fb56dffc128d3a91c1cb8852998d9539d3fac","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/google-analytics.locals.js","hash":"c02eb152e6aff05833006e6edd32b74c1c4258c3","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/google-analytics.ejs","hash":"13b298b0026bfc7bcb6a47b6c795fe15cc4584fc","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/hotjar.ejs","hash":"6df0d8f77ed39e4d32c78177844115e31bf3a776","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/hotjar.locals.js","hash":"9258fc2af057d2545a43fae54790743b63450378","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/mathjax.ejs","hash":"dddb6f37487286fe2080118bcbb4a8d82dc84d5e","modified":1583380726000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/mathjax.locals.js","hash":"7faa26fa6da6a93dc3f7fdcf5a784d1f8825b031","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/outdated-browser.locals.js","hash":"037fb56dffc128d3a91c1cb8852998d9539d3fac","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/outdated-browser.ejs","hash":"1437d1ac085a8110e61317254f6c0a034121bc39","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/progressbar.ejs","hash":"34423f74787cc9d67b2598dd69b07c84d5bf2280","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/plugin/progressbar.locals.js","hash":"ec80bcfa4c1302c04130a746df4b1298d117de0b","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/search/baidu.ejs","hash":"850aa91778100d693a52b10eaa8586c8e3215ee6","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/search/baidu.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/search/google-cse.ejs","hash":"4b881a99325a6a0cebf97ac53e09d8fc67f87d29","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/search/google-cse.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/search/insight.ejs","hash":"9a27db2a007582ceee7ca4b1eebddbd456893568","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/search/insight.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/addthis.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/addthis.ejs","hash":"f1c5f337333009d5f00dfbac4864a16ef8f9cb8d","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/addtoany.ejs","hash":"95d3bc1a841bd934b1ae9209ad1af74e743ecb10","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/addtoany.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/bdshare.ejs","hash":"f14c8084b7ee16a091f0bd2ae9039e3bfff7e7b7","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/bdshare.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/sharejs.ejs","hash":"65d08316cc479910ea4f526cd1c299d0104daf7f","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/sharejs.locals.js","hash":"11976fd4cfed1044be29b476b34c33175c9b4308","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/sharethis.ejs","hash":"4f2c40f790f3be0a4e79db04f02ea41ba2f4d4c0","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/share/sharethis.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/archive.ejs","hash":"eb738a2ac2935ce7a542964d90088613b281dd15","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/archive.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/category.ejs","hash":"17e58e537645c4434a1140377ae3e7f43cca4927","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/category.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/clock.ejs","hash":"041f73ffee9809a33ae45ad1831e4e826dac2929","modified":1582380870035},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/links.ejs","hash":"bb6510193632413e83227bdffad7c3b37629dcde","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/links.locals.js","hash":"872cf1a18e152361f5739c6d5fecc0bf46d59513","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/profile.ejs","hash":"40cfcfa88d02200be70613af83bdbb60e51cc55a","modified":1583561857928},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/profile.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/recent_posts.ejs","hash":"14a2f4587831e017b93818c06dbe18a7e8a27c1e","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/recent_posts.locals.js","hash":"5065aca74ec2c98ec88994636fee8408f769c5f2","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/subscribe_email.ejs","hash":"391622e9c1d17bf79180faa617ed8c1ee1871a87","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/subscribe_email.locals.js","hash":"aae87fbdb7a1245a0fc0637225a935fc39836916","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/tag.ejs","hash":"e41aff420cc4ea1c454de49bd8af0e7a93f3db3f","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/tagcloud.ejs","hash":"26fa17afaf0cb345a213816c44c39575a66759ba","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/tagcloud.locals.js","hash":"093f59d2f43e7ffa47bee79da15f98705300dfba","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/toc.ejs","hash":"dddddab4fb7692ddb25d2ee6ff0b6ca03f860943","modified":1582287846763},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/layout/widget/toc.locals.js","hash":"e730a7fff2717f17741540e5ed77b89e289fdeab","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/fonts.css","hash":"2172570db655ac89b0a1b0fc835dd225ad5d9c8e","modified":1583373807113},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/search.css","hash":"d6a59894819e7431d42b249b6c2fc9ff3b99a488","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/css/style.styl","hash":"51116579bc1c72f2bbec5314741fd3e28ef30f32","modified":1584081277915},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/fonts/4iCs6KVjbNBYlgoKfw72.woff2","hash":"48469f0155a13f3499db31d53cba5d47e8b528b5","modified":1583317662106},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/fonts/HI_SiYsKILxRpg3hIP6sJ7fM7PqlPevW.woff2","hash":"fcb1fd93f8ead84854734b3b95ce850e93dae700","modified":1583373475759},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/fonts/HI_SiYsKILxRpg3hIP6sJ7fM7PqlMOvWjMY.woff2","hash":"3624f0569285ef2b71f27c1ea78fb8d5b5994b82","modified":1583317588399},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/avatar.jpg","hash":"12f6c3418bf65b81dca3acf527a6d57607490c7b","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/dp2px_avatar.png","hash":"1f26ae783e2a4a76c2f8eedf424738ec46061477","modified":1584083346720},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/fight.png","hash":"05e722c080645273d6c87f098270169824e88557","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/liuyao-blog-avatar.jpg","hash":"29754b508e3815ef885d556ea8ae415473f16baf","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/logo.png","hash":"b817c8e1bdef899840a0a1162a4359ad70097308","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/yafine_avatar.jpg","hash":"c0b9e12b84724ac11fe1b582206bf9592210d97e","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/ypy.png","hash":"f394947c5f1b93b558f9cc7222ff2e8821308a1e","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/back-to-top.js","hash":"b1dcf30577cefe833dc6151757c0a05ea5b5a643","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/clock.js","hash":"d7dddf675175ba149248b4f3634a94585ac5bb11","modified":1582380832011},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/gallery.js","hash":"64e49cdf830c3eacc9bcc299c4952d12cbd82872","modified":1583059128746},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/insight.js","hash":"8ba56fd5e4232a05ccef5f8b733c7ecca0814633","modified":1579052706000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/main.js","hash":"22f2da58ff6445526c6f5ccd72a93ca0fd8a7a44","modified":1582460725737},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/night.js","hash":"f1fdad5f08ecaa2baf98dcbd9b6d10171ba7b94b","modified":1584347580687},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/js/universe.js","hash":"abd0837f3b501a1ee6b997dc25763950f9604f8b","modified":1575025196000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/display.jpg","hash":"47cec911edf126c02c849483763d37008d308fad","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/images/jitwxs_avatar.jpg","hash":"e8bca755c6ee0c470abc1ac4c539fb33fa30026c","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/postImg/network-protocol-map.gif","hash":"b1bc101d4fff4a9e49d367b54f1a52ba9b564c79","modified":1583738295522},{"_id":"source/tricks/navs/assets/css/nav.css","hash":"ca73577d0d854061684066e53d00c4229391f20a","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/xenon-forms.css","hash":"70c8bce048a5f8e66187cb738e0c036d36860870","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/favicon.png","hash":"332a7313445a118b7268b10629bd4575c49441b8","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logo-collapsed@2x.png","hash":"8d35bdc6b0b7ae68b3c68daf4bf2665bd073f4f9","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logo@2x.png","hash":"e1a807f993bb1f6f0471fd2f061af90703f3d6cd","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logo_dark@2x.png","hash":"e826d8b1249c87a3102c2cf85defe0b673babae1","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/qqgroup_webstack2.jpg","hash":"c45597214bcd54633c858be5a2524cac01534377","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/bootstrap.min.js","hash":"69ef90645d7a700e4272c94db9f831e5e703c0fa","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/joinable.js","hash":"b37ba5c569d536419bb44ff46a79eac21dee251f","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/lozad.js","hash":"0c29c9cfd15c59634bb62e51a763577cc5d91270","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/resizeable.js","hash":"7db6e6bb5508f07fca263e013f42f60e09a540ff","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/xenon-custom.js","hash":"88758ee4ba1abc5c43eeba9edeb97820288bcea3","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/xenon-api.js","hash":"4c9730c5b0877299e2ab4890d37a2016dd0c7f5c","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/xenon-toggles.js","hash":"055519d964f631b962a85a228efdad0aed6a1b83","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/qqgroup_webstack.jpg","hash":"690913cc4da48a13f25401a36c808418682f305c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/webstack_banner_cn.png","hash":"ceca7c076ecf4905feaf1024304715daf8ee2476","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/wechat_viggo.jpg","hash":"a55716489120337f321cac9f19ad56923b4b8e6b","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/TweenMax.min.js","hash":"19da9b3cc87be34ad27620f56b91041eaadd5ca1","modified":1580435672000},{"_id":"source/tricks/navs/assets/js/jquery-1.11.1.min.js","hash":"d6c1f41972de07b09bfa63d2e50f9ab41ec372bd","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/xenon-components.css","hash":"4f98d021c09b92f1e6e04c2f35009b9e5a04f322","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/flags/flag-cn.png","hash":"47799baec5f19b8e0290cb8dd68b93c4a6cfd794","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/flags/flag-us.png","hash":"be5ed403ded02f55de26885641216a60863419df","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/365PSD.png","hash":"d225b0834cae27ecda36c9a55bc418a594ace00e","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/36kr.png","hash":"1ab524d6e14c647aebd0fb69de9e9911866a01a3","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/3dsmax.png","hash":"200f29d2224e40ba917d42f873819275f2f58143","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/500d.png","hash":"27b1d99df9c578eb2c522a18e57241649a359302","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/55mm.png","hash":"b398d708959bbaf3e4c30508d8c5c4c25eaae2a6","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/90sheji.png","hash":"66a1dcd472b8817724eb3f91ebd04550cd355085","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/ADOBEXDCC.png","hash":"7c11839f26988ce4939a65dda671bbb90ef3809d","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/AdobeAfterEffectsCC.png","hash":"e792ab09884db26cd188ebcc3d8a84f0766635de","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/AdobeColorCC.png","hash":"ef9916dde89484d1bd4be14884188162a5615276","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/AffinityDesigner.png","hash":"055cdbbe1b30cce0879d5c99206adff876738254","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/AirbnbDesign.png","hash":"d6acb55817a1da9be4f6b5af6e33edb140925c1a","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Android9patch.png","hash":"0a3614b5eef9d0c49448e077faf772b89e5f336b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/AndroidNiceties.png","hash":"444e711c40c21f62bd2dd09137987a65832dfd67","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/AwesomeSketchPlugins.png","hash":"baaa0ed35afef043c5a79772ee2987938b27234c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/BWG.png","hash":"ed1a6d5a540a0811c0ebfa76b4280fe55e5552f1","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/CSSDesignAwards.png","hash":"55f7853c9a9732fd05dc02234fe99c2730a7dab4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/CollectUI.png","hash":"deed9f50c4a2d8eca431389dc07de773fa06ce7b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Coolest.png","hash":"613e1bc4b9a26ef8ffd7ba4b8ebf3cb765b8e253","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Designmodo.png","hash":"99ca053a1fa46a10ec097114f5c8481552277021","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Dunnnk.png","hash":"8f50b6f6f1f0710cae567c0e26e5c5023d169760","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Ecommercefolio.png","hash":"6eafb44c131ee77317b8d5012ced7293b0581b36","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Ezgif.png","hash":"56f64271aedc1aafd154148b8867b8805934fb25","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/FacebookDesign.png","hash":"ebf5dcc8e4147e21c3939b9cfa57372b51042f6b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/FindIcons.png","hash":"180c99e5e5f5c64b048061ea8fee404622ce6b73","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Fondertype.png","hash":"27bc94e34cbbe59e62f5d2404ce2aa6c705d46e1","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/FontM.png","hash":"dcdce37a48de4e5d2f497a01a2a45d7bf4f69b47","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Fribbble.png","hash":"95bc39600d146987eb4286b954c44df9b232ae97","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/GoogleDesign.png","hash":"6684bdfafbc0773939f8a0f4805cd5cd6e2f1bbb","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/INDESIGN .png","hash":"7856bbaf1054553fdeed6543736ecd38986aa072","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/IcoMoonApp.png","hash":"a50f89dec3a4338c5518634a634f8253f484cb8d","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Iconfinder.png","hash":"36fd6a407eda6e3b075eab6adf2d0be80720774c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Illustrator.png","hash":"87b65307ca7568421ce54c5f08ed1f0342bf7836","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/InstantLogoSearch.png","hash":"cd2e19e11394267b6f676b35efd2786b97b42b72","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/JDC.png","hash":"b1a5125e88ede318039f611d61230aabfe8db7bd","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Lapa.png","hash":"2d59f48ad4f7cb5870b8eff13baf2d1b2690fe30","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Material_Design.png","hash":"96e7661fdb9fe22dcabb49c86da0f52f8977d2f4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Materialicons.png","hash":"e040ad6f02acab1bbce8a07a1689640371b61944","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Medialoot.png","hash":"696ff0fad27291321b61a84e1e335f849f31ead4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/MockupZone.png","hash":"cba388ae1d386a483d7226e9142607dc6e7dfa13","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/MuseCC.png","hash":"2de3d6d932a7532c1ff64cb1587fd4e9c323b0a4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/MyFonts.png","hash":"d62e99908eeebedcb32ae0d1768d3ba0714285bb","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/NEXT.png","hash":"980a50b0f3f423869336f71812cc41f437eb7743","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/OnlineWebFonts.png","hash":"95259511e66675898566676301362c9203aecadc","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/PhotoshopLady.png","hash":"1df522b8d20d819bab839285a519d521fdf173e5","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/PrincipleRepo.png","hash":"760e940780edfb8d608399469d31d140e8ff2ff5","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Pttrns.png","hash":"4e14d229306194a5513b7d5aaa5601bee5e06c73","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/ReallyGoodUX.png","hash":"eebf8ed87d41fb6e16885d51acaedd621309bcb8","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/SiteSee.png","hash":"59aba111918bca940507a167fe1bc67f52587320","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/Sketch.png","hash":"17bfc7e7bf0c6c96b2bde513da75b654f3698f6a","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/SketchMeasure.png","hash":"32f956345314f7b868aa2adc928affee898658b4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/SplitShire.png","hash":"407bd705e638affa32e799869661997e3e2c7ced","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/StockSnap.png","hash":"98727f50e4f97c770661d3d0d52404b383e75690","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/UICloud.png","hash":"e5edf60e967d21aed2251bbb002dc73b1b9856b4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/UrbanFonts.png","hash":"3d6b27d3c810586149a31a08d7885589d89de5e9","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/WebInspiration.png","hash":"9a32bb879a409ba9464ba5114a4760388d163f3a","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/abstractfonts.png","hash":"0921ed3b3a44bb6b5b471fe7f95a5471b50bfe0d","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/albumarium.png","hash":"168db11df2b6491bd7ed7e4533d88b05e8a604e3","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/aliued.png","hash":"fbcc58ba0e389c5cdabd8074fdeed95b226e5fb5","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/aliuedcn.png","hash":"3bbd367c330446bb7cd1775b45cddfb7e4be43c1","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/aliyun.png","hash":"b08639a1efc26ff2bf84e512154c1a679f46a518","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/anyway.png","hash":"38cd75f4172089571f1f9ae16b1b6fa65420056f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/appinn.png","hash":"efa3b313dca9f675ee7104301ae79b438220dbff","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/awesome_design_systems.png","hash":"2d2d9ab15ac544d09fbe9d7d2ba1ea4a55aaa677","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/awwwards.png","hash":"39489c863001efa211ed3674be5be2ebe779a1a6","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/behance.png","hash":"e5e5a11933c7b15ad1cccb2b118488061122354d","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/blender.png","hash":"24073320aaee6a2720e37218193812b979876b72","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/boxesandarrows.png","hash":"86f5374661008da2307428c02df690d8000a47af","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/cdc.png","hash":"b5b86934d6379eb5e8f3bd5311faf0a67a65fea1","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/chanpin100.png","hash":"a54a3c453309e4e161ddb53c7f7db04b4a0a7b07","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/cinema4d.png","hash":"bd832cd94a9e4828ee42eee5fe6a1327d9b16456","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/colorhunt.png","hash":"310a3f6e6c2164e621a6ae5ac90d12021cca8411","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/coolors.png","hash":"fd3b7a338f7aee7befda1e9f18c76fbdfe34163f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/csspeeper.png","hash":"470759939cb19a793c40230041bc135965b88484","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/ctrip.png","hash":"46ad37bc20ea38a2ab6265c05b153a82e486aff6","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/dafont.png","hash":"2108d33609c75b60fc40b2fd977cf2a6f622d395","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/default.png","hash":"3d467b04e77fb4dc3108d01b3f4fb786a9dbad0f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/designguidelines.png","hash":"b1fea4c74752c992054425cc174a810f096a1e50","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/designmunk.png","hash":"d76c098d0f6c566db4d72bab09894319b312e095","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/digitaling.png","hash":"8105c890d70804531263a091734d449ad29d1f5c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/doyoudo.png","hash":"8eccea4cea522cea09d9e72cace5cf333875e412","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/dribbble.png","hash":"2a2276e2f0c0d7aff71e79d237a232f292dd6666","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/easyicon.png","hash":"bb947fa65c471e43920017ee1f9ae1d855c023d2","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/eico.png","hash":"c9983260c18e78bad67cf29ad4ebf463aee89bde","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/euxbaidu.png","hash":"b4e90c69c84d2a469a427cfc8807b450e02fec53","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/figma.png","hash":"fde6330af44c079134b58e1255602cab7f1a476c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/flaticon.png","hash":"f47a991c9015894bd636607724edb085c9187081","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/flatuicolorpicker.png","hash":"fab6e3dcd8774757c86861b85a7ace2d1d755647","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/flatuicolors.png","hash":"261a4a3aa51cb6ab3ef7c08a529844d1f9e8d513","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/flinto.png","hash":"845b412d7fab59e9425d05f4cfad917afe5de4e7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/fontawesomeicon.png","hash":"244b59c8c15dbb7a85428362edac9651c2022a75","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/fontex.png","hash":"8f902e6e39d46d44fdc39bd714c5455c5ffa6510","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/fonts2u.png","hash":"53691abd85470bc056aba24ff23d687e5f615423","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/fontsquirrel.png","hash":"59a36abb49feee751b0d33cc511657b651755e93","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/forgraphictm.png","hash":"a2a6c25105e04624e80546d1ea55659e8caffbf2","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/framer.png","hash":"37b5ebe054d9afb0e5704b6d4609373f587993cc","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/freebiesbug.png","hash":"907a1cc7e123e837594b9b6626ff687291414e49","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/freebiesupply.png","hash":"413c03449d00c6b98725213e92e260414fc23090","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/freenaturestock.png","hash":"331b931ca0bd1233bd36535a7e8feaf126d3786b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/freepik.png","hash":"5565623cf80524e603d6d34c519de6c902bae36f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/fwa.png","hash":"c00d54ad1206c3625c7e7f82f94780acf15674a7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/gaoding.png","hash":"fcd3a5e4c1cdb70be438f44a790f0ac198e3934b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/google.png","hash":"7b820baee1f0cb5cc4ec24d8423711d083258422","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/googlefont.png","hash":"21da17e33cd0dd0c839b836b5a8d653f5936bbe0","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/goqr.png","hash":"97be0ac81a4f11f1c85c5adbe9d6807f5f3eea62","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/grabient.png","hash":"0c13ef5f506e3e8e85d1b81bbdd56b0d5b1d27bb","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/gradients.png","hash":"6ea010babb3b45a99beb1ad4c427888555e010c4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/graphberry.png","hash":"2fbb06a857643b5838913ffecadc7563125eca00","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/gratisography.png","hash":"38dc3436a5fbac7221785d300df8abdcc2911fa3","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/gtn9.png","hash":"c5ba6c39d9c823a0b2531c0cbe7d46ea90806279","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/hdwallpapers.png","hash":"778e6795b0e66589941efed717ebabb8f0a08756","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/huaban.png","hash":"68f24bc3b246389be77df0d6fa2e4503f3ed5a27","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/human_interface_guidelines.png","hash":"b76eff6eb28ed874677a06326d89e44a7ec47298","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/iconarchive.png","hash":"ba0e0b2b687f3ec8aa986745ba7ad7ebea529b66","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/iconfont.png","hash":"bc513e219e5644726aa4563a7484e49e9244b790","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/iconmonstr.png","hash":"a2e2ecfeae6750484f16a8b5eabd13f2250381df","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/iconsfeed.png","hash":"2ad7b03bd7655ecb2088d3b73372edbe3bb86a18","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/imcreator.png","hash":"fde0627e3eac7b79ec006041871a6de616c2a27e","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/imooc.png","hash":"69b3a4fdde854b8e0595b9e4eeed6d6bfb66f32b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/insight.png","hash":"c0eabe6f4c49bf414097494b7c2e80597424703d","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/ionicons.png","hash":"267b87e6ca6338a539cab8fa2f27adf369dd57da","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/invisionapp.png","hash":"cd8bddc873eab293d70a4e7eb0029df4db652a62","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/iosicongallery.png","hash":"95a56a4d689b412448adc61799d5cdef1de51bf2","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/isorepublic.png","hash":"51ea236a13d49d0ef3433aefb4ca7445a2f08b46","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/isux.png","hash":"49bb5d0590d7cee1a1c2b1bad0e33b4a5e23497c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/iyunying.png","hash":"d55b33f025f25533e952a7e1e33c507d89942f3b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/jeshoots.png","hash":"bda276f862a441c32686ae84c2782908cf60b76f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/khroma.png","hash":"ec573da08808e20baec247dfe623af129185d7ee","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/klart.png","hash":"7e98fd9ee145a68cff32b0e3967e432023c355ad","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/lanrentuku.png","hash":"de9d4214318cafcb803bea0d02ec2f7c6e6242e8","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/leiphone.png","hash":"60cb1e95e09accde094595e384157357836fe64c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/librestock.png","hash":"86ce6325daab343553ec2ad254f60a4ebb27fad9","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/lieyunwang.png","hash":"fd644b2f15100a100877b59653d0a145610b75a8","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/lifeofpix.png","hash":"63846eb9877c7a574233546a62104fb329b0dbf7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/liqi.png","hash":"3bd7a176b1add9731604b891d9b70736cec706ae","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/littlebigdetails.png","hash":"ae2221200b709c00414c9c0053722582afa08d70","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/losttype.png","hash":"7a948191742b41c534b1ee803f176e382968bd0f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/lstore.png","hash":"fb8e02bbfa0bff2f45ed333b5ac0be1584b5c8bd","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/magdeleine.png","hash":"1c45a837388cde70c44c300099704f83a016dace","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/marvelapp.png","hash":"7cc9576ad899906354ac3382e04bf7fbf0c3136b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/medium.png","hash":"8d1fbe2946eb599172a28b9b341f30903c07bf57","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/mmtstock.png","hash":"112729b1d328ce36fc4a6b1b4b1be9cc3e01d551","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/mockupworld.png","hash":"80f8c71fda8a77cec1a3e49c92b7e74b466ec4a8","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/mustsee.png","hash":"9ca2399a58bdce1ea7a7ec03d8df8363959fc3a7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/mxd.png","hash":"854353e88a4b942dcaf62be8a85f5cc570108549","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/myphotopack.png","hash":"f1bea48ea52b2dac1c0b2ea7131717601cc03fd7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/navnav.png","hash":"b651479dff474e9eac91a94e76bacf0272ca5614","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/negativespace.png","hash":"74ff948e9ada722b5b80b19ac19aa99cc40244ba","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/niaogebiji.png","hash":"1b8743e2b052d397b4c3710a4d62aaaf7f714aaf","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/niceui.png","hash":"e6b06a58e2e83fb2efe0040b191c170b49cd7acb","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/nipic.png","hash":"b893edba3b764200d2432d0b64ee4b864ae75e07","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/nngroup.png","hash":"e605e93228234cb17b820b904af6a5b2facded01","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/notaselfie.png","hash":"618a230ac6702ce3be54cfc4045189716f7b0a5b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/officeplus.png","hash":"f7f9c2e8b7870130ee295daa6be955f22c76320b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/pages.png","hash":"fae172b15f9a15e63e409e56d72eb7e4c8125c8f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/papers.png","hash":"b2c9ca8ba78d838896006ec6c0e62fa8f91c8026","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/photoshop.png","hash":"fb79be40b23e97abd227883af160b6423b0bbd8f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/photoshopetiquette.png","hash":"c259d56640fad42f9f56d4da78697412e4c03712","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/pinterest.png","hash":"4722b146d194058cc80ed5aeb7355ed197129dc3","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/pixabay.png","hash":"3650e1d69bcf3290614d12d04580357e4c173b13","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/pixeden.png","hash":"4015550db6a9d8e36190a6de90a33cbc8af53f06","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/pmcaff.png","hash":"5a9868709b71f35a65c504f3b00cf821a41cf9e5","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/pptmind.png","hash":"d7d08942a22c7fbf039761f24929fb8b2c58ee01","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/pptplus.png","hash":"40ddd5433cb632e5f448068c0e01a12379778f71","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/principle.png","hash":"c182c4b0093311abb8b3cc2ae9371a9a501699d6","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/producthunt.png","hash":"9219d747c940052718188766416fdce385b4fb81","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/protopie.png","hash":"da06a901c477773bbd58be6216a9fedeb5a72dcf","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/psefan.png","hash":"b84c784a6407da5ed7090ad9d428c62dafb33b3e","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/publicdomainarchive.png","hash":"0ed8ce6b529bab5bc661edaad10e8ce5edc75ea4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/qianku.png","hash":"f286e8837df7ef64a09c0a15362b057d9384b8a9","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/qiantu.png","hash":"1de5d957eaf29d4ac8b4a239e1d2983bb5a2438a","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/reeoo.png","hash":"43a416bf7d7a0bf7b0f06331c232cef09f978516","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sccnn.png","hash":"6bcfe2601484f51e93db6ad03d1950137b870087","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/screensizes.png","hash":"53ad5461f932badd717987a2066cd4ab2aa28538","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sicangziti.png","hash":"0857c00a8be5adb8ff1b4d589627a4e5beb3c7d1","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/simplelineicons.png","hash":"018ec0ee36da1f24de92648963857faf7a757a92","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/siteInspire.png","hash":"3ec059fbe29ff1f1710e1c8c6168eadd750c5891","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sizzy.png","hash":"7c367f509b4b67b186cd7279bc492795468396a7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sketchIm.png","hash":"823800a6a37c1b60bd939c5ec8e7b02009256df9","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sketchapp.png","hash":"c764370fdee370abbfe0ccbed7097c61de8e2f09","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sketchappsources.png","hash":"bd13ff929b404b0c8b9b594f51efd71dd547e361","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sketchcasts.png","hash":"cc328830e236907ed496a3d775a9a78447a78959","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sketchcn.png","hash":"f2dde1a41c016d92f39232b77be6c77060d5cd07","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/skitterphoto.png","hash":"083c71fb2d2722f482d60c9d4cd32ef4cb61d4ed","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sketchhunt.png","hash":"087cf8e0b662de95634174042eb6a0b8c6a4ca8a","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/smashingmagazine.png","hash":"5c3ee595157c750ab9cb6f15e00ae382261299ab","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sousucai.png","hash":"e094192f35246cbbcd97b22421396c3211ac50e7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/ss-kexueshangwang.png","hash":"bd25bf298dfb56b301b25a6eccf83684d965df03","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/sspai.png","hash":"8c92eae3fe5aa88831b44a11833a9d32b2e8aece","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/stokpic.png","hash":"4411951ec340448ba4e5abf65164ee1e36800a39","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/svgomg.png","hash":"18d0ac2894d556f46d0b1dff3694ff7f5c42e274","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/tgideas.png","hash":"f28285bdf7b57e7e23e415ab17bc7223da7b4758","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/thedayscolor.png","hash":"71931dac677cd099ec987151262aa9d2487639ae","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/thestocks.png","hash":"8cbb68a4574089043c9703254982de5f28d892fe","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/threed.png","hash":"75add4eda5ae193f84483b94b8f6125c06f7625b","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/tinypng.png","hash":"ba99cebe8f8c6b104a97a8f1019d3c6d57ca2e5d","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/today.png","hash":"3811be0919850c7c8d8b9f8e64973b8851f2a28c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/tretars.png","hash":"85b98c659ba84c2ca29cc9f6efacbf91499c86fb","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/trianglify.png","hash":"34f04ba431c46ab5c4655d6299ed6522648626f7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/typekit.png","hash":"aec0eef7a4c05638c99940500b70673eda674bd8","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uedbaidu.png","hash":"5a91792a983aa9b7f8e2cd88b7d89f94f8ed901f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uedc.png","hash":"1bd2647b3fd33da6cd850126ffb5ce5a29c329e9","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/ui8.png","hash":"603e35c38fdcc45ffb4f82a11bc65a341c57d3c4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uicn.png","hash":"088fa5182d1cc080677bce368452855a9d6de228","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uigradients.png","hash":"552d833f66a06ace30779059786713e43408a310","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uigreat.png","hash":"6a600e737d7a48f8b646953fe716c100c7df0995","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uikitme.png","hash":"0628ef32bc30f207c76439a11296eec5c303f042","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uisdc.png","hash":"1880e6128e9da209f8a5cf3d190e2f682aef3958","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uiuigreat.png","hash":"fa643ff41a5c5e5839225ad4d1650e75c435dfbd","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/unsplash.png","hash":"adf3d16f30fb4360f9d1d9b21e23102fdb915fca","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uplabs.png","hash":"4a9be0e3ed5b7850007778dcd1378091c8532e5c","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/usepanda.png","hash":"0999a67851bee8b362fc5615946aef2183c1d911","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uxcoffee.png","hash":"8fb718151d1d110dba09ac39bf44c621e2102ca6","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uxdesignweekly.png","hash":"d36ffc21811b82999e98e444cf80291f5d1f55ce","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/uxren.png","hash":"9ee5f5d1eac8d7a45abe14510cb9bfdbb62e64fc","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/vanschneider.png","hash":"ed22208b22a53e4cc80f7e1956ff7f30f4e663fe","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/viggoz.png","hash":"1b90431698fd4210f74ffa9a9d37a06360272bfb","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/visualhunt.png","hash":"46a7fcc5219acb45939a0d0f3ab742c11a472f94","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/wallhalla.png","hash":"6bbc09cbaf1965de599b9572ca71a94ac92cc12e","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/wappalyzer.png","hash":"fb27d8440948b6b0d9ed518c8e480bbf125f9b33","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/web_ui_tutorial.png","hash":"c292f2df274123e6e247ef0af83bea1b355b7d9e","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/webdesignledger.png","hash":"e4fc033ded60f963407bdafcaba9fd2acaaddd82","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/webgradients.png","hash":"f46ddf3d6f618bc9e63bc2e191bcd4ceac5fb4f0","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/worldvectorlogo.png","hash":"e89e4edaa8d210f0a433b0cf4a0594415a1011d7","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/woshipm.png","hash":"48bebdf56d93d305cd00fc09abd66e171dc9e991","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/wotu.png","hash":"f099a70adb833ec26685e0a506bfa7709a267704","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/xituqu.png","hash":"5783e5b27e948862b0c4ce0a06742b15ca81a00d","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/xiyou.png","hash":"0486c9d2c86b94c4d23a6c7dec37bc198e039fab","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/yineng.png","hash":"c128eba5caf793fe473cfc9499a80a23e8bf7c73","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/youtube.png","hash":"19365d9dd600d59d0bbb1bcace6329d301664fce","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/ypppt.png","hash":"b6965a036f6fc307c531815efcb31626b7bb4774","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/yrucd.png","hash":"4d859230b9ff3e64e08e87a634e2a0175d8f9b00","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/zaodula.png","hash":"125c1b5449c8cb1fb16e4d3eed4db7dfacd51d37","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/zcool.png","hash":"29ac08afe1a56757f86cf715657252f22c1c8985","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/zheshu.png","hash":"210788c2804d39ee46352f8fa311b5be2e7b4261","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/logos/ziticq.png","hash":"1fcd56804fcf8a4f8c180bc4e987e0ee48ff9cc0","modified":1580435672000},{"_id":"source/tricks/navs/assets/index.html","hash":"295af00c123245aa0314800e9407923d4f7cc755","modified":1582966004743},{"_id":"source/tricks/navs/assets/css/bootstrap.css","hash":"739ce8cf6556091fbb9c87d01f5849e6d36d6367","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.eot","hash":"f3a9a3b609133c3d21d6b42abbf7f43bd111df72","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.ttf","hash":"aafafdc09404c4aa4447d7e898a2183def9cc1b1","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.woff","hash":"22037a3455914e5662fa51a596677bdb329e2c5c","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/xenon-core.css","hash":"464e63ca016104b243fae7e994f4e988aca00d38","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/xenon-skins.css","hash":"e70ba775fbf8801d3b8ce3eb6e809adeb3d0f35b","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.svg","hash":"3ef91859cbec165ac97df6957b176f69e8d6a04d","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/animation.css","hash":"181bbc89ec978981bf0ef8c7239710ae5b3ad6a1","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive-codes.css","hash":"aea20bc1aba5ee3c73a4db0c530776cccd1d4a04","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive-ie7-codes.css","hash":"0b1e965939a72c74bbf238e5aebd16d07654515d","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive-ie7.css","hash":"2d99632a645cb335cea60ebcb63e14b1ed604534","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive.css","hash":"56a5a5e174480b7ee53bdb064ed69b26e52fdc75","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/font/elusive.eot","hash":"e1eacc2f189c4923db9d86655a9f5fb93beb51da","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/font/elusive.ttf","hash":"7ebf21c374994508f74675ff877a244105acb6f2","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/font/elusive.woff","hash":"f26f6bb0cfaed34a6e543cd0cd33940c210f356f","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/css/font-awesome.css","hash":"b172963499e403af02bcf379c96886e1a695dad1","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/css/font-awesome.min.css","hash":"b71d1c7c315b67c614563382d1c2a868ac14d729","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/animation.css","hash":"181bbc89ec978981bf0ef8c7239710ae5b3ad6a1","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons-codes.css","hash":"3532ae2ef3c3b3426fa78658eabdaf911d092e9f","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons-ie7-codes.css","hash":"a8cf538f35eaf6d751a5996540047ef8b4de4663","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons-ie7.css","hash":"8256024e1e6ee8e302bc932e92778547bc55a71b","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons.css","hash":"19d79b04769d2a07e588e788bebc27ba97cf4876","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/font/linecons.eot","hash":"8908cf47e02208c6fed06c962d93bfbe07db5b31","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/font/linecons.svg","hash":"b8fc297d3365d2b88bf3333e775b6bcbca5ae6c4","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/font/linecons.ttf","hash":"d64c9418761c67f04f39d317a576646c8ea0e409","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/font/linecons.woff","hash":"2e8a5eb52a2fe2651c9f354923628ee2c2e34e55","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/animation.css","hash":"181bbc89ec978981bf0ef8c7239710ae5b3ad6a1","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons-codes.css","hash":"e1d3e17e0235320d9ea2b24381a8edcf9d9e20c6","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons-embedded.css","hash":"f43e17c40e75a58f77fadc015266961d3a83e152","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons-ie7-codes.css","hash":"92ec8770d2cd8988e4f4350967be138a812f388e","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons-ie7.css","hash":"3398b032849510965d245fcffa5a5bbfb188531e","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/css/meteocons.css","hash":"7122a46ecb97701b9c72d7a90784a45485c75db7","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/font/meteocons.eot","hash":"24afd643626798a52e1cd29612b0b4c47ee02f25","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/font/meteocons.svg","hash":"d025c575c44c189521a86c1c242cba15640f04f7","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/font/meteocons.ttf","hash":"2d24b57fdb969493ebb595151f7ad30e868e8d1b","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/meteocons/font/meteocons.woff","hash":"7a8ff8f879a956054ae07b75fa754942ce1bbe57","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/font/elusive.svg","hash":"cca1a8e9bd1ef9fabdadbaa0df80078c09830234","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/FontAwesome.otf","hash":"6270a4a561a69fef5f5cc18cdf9efc256ec2ccbe","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/linecons/css/linecons-embedded.css","hash":"d7cd676abc992caaea46c241c3c403014e81d470","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/elusive/css/elusive-embedded.css","hash":"709ef4e99c1bb9b992709610a2cc6e254ad06f4f","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/webstack_icon_producthunt.png","hash":"dc214e3ec885b87d8e0e9d2119b5f8574313dda0","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1580435672000},{"_id":"source/tricks/navs/assets/css/xenon.css","hash":"9dd29389d3aec37aba869a09cf8543193033aea4","modified":1580435672000},{"_id":"source/tricks/navs/assets/images/preview.gif","hash":"20affa13987b7dd40331c871b21a58c9b2f303a6","modified":1580435672000},{"_id":"source/tricks/navs/assets/webstack_logos.sketch","hash":"3a1ebdc9bd765efc3e5035855696de7f532aaeb8","modified":1580435672000},{"_id":"public/baidu_urls.txt","hash":"0ae0e3015569af8fcab6b55616223a5ad6300709","modified":1584359927555},{"_id":"public/baidusitemap.xml","hash":"85d22c0b1b4e2d74b1fec912e46cf80c3a18e62a","modified":1584975688206},{"_id":"public/atom.xml","hash":"d05ea3bf45cbee9180349c37ea7df21bcf32e04c","modified":1584975688206},{"_id":"public/sitemap.xml","hash":"92e4bcba801caeb652e4d93e46454dab207eb2ec","modified":1584975688206},{"_id":"public/content.json","hash":"d24a42cdf31e0eebfd874b7fa4dbfa197818b1ac","modified":1584975688206},{"_id":"public/gallery/index.html","hash":"8e0e503e86bdacf4eca11b5a64cb4bf993208c6f","modified":1584801720167},{"_id":"public/about/index.html","hash":"4baca7d7f9c8aca13d0fb24823af1747fb19ba7e","modified":1584801720167},{"_id":"public/links/index.html","hash":"aa40e1b369f5b4c5d86cb6aff1b26b3ca4eff3fa","modified":1584975688206},{"_id":"public/posts/test/index.html","hash":"6e1800dbe18cf19c77eba7e8c8bf85a2d534343b","modified":1584890269176},{"_id":"public/posts/Icarus-record/index.html","hash":"e063684b1943084ca17f80a09c3b86dfcbeb10e4","modified":1584975688206},{"_id":"public/posts/JavaSE08/index.html","hash":"558a1a45eae17663637cdfad66314f9be2ea8563","modified":1584975688206},{"_id":"public/posts/JavaSE07/index.html","hash":"0abd510110d71232d2d0812c8d399d83015a6859","modified":1584975688206},{"_id":"public/posts/computer-network-basic/index.html","hash":"14e2804549a26a8a77e2780fbe87e25f3633d076","modified":1584975688206},{"_id":"public/posts/pancreas/index.html","hash":"904f431f7d754a87f8fbfc2f37b97cbff487d2ff","modified":1584975688206},{"_id":"public/posts/self-use-software/index.html","hash":"662bf96936b8246eee0e5dd3fc58d553a9720850","modified":1584975688206},{"_id":"public/posts/JavaSE06/index.html","hash":"1f387ed97ea5e3b60efbf0746bb900e6797479ff","modified":1584975688206},{"_id":"public/posts/Cplex_OPL-program/index.html","hash":"8622da80e4bd95d7041ac7fbc2c9f5c1fc2556f1","modified":1584975688206},{"_id":"public/posts/JavaSE05/index.html","hash":"88cfa2b18c5dd5ec33db5f982375fb337198d0a6","modified":1584975688206},{"_id":"public/posts/JavaSE04/index.html","hash":"243e39eb9b0f24dd488275651486ce993b43c00a","modified":1584975688206},{"_id":"public/posts/JavaSE03/index.html","hash":"4f10304e2e8f00e86ee31ef7ed3a1cc1c226ae46","modified":1584975688206},{"_id":"public/posts/JavaSE02/index.html","hash":"290977fb9f8914e7496ba9922997a74a99a4868a","modified":1584975688206},{"_id":"public/posts/JavaSE01/index.html","hash":"a324222fdf395dedc3da100f3efde3ffb78ade2f","modified":1584975688206},{"_id":"public/posts/hello-world/index.html","hash":"729c62aca974d836ba96be5c99b8597d236b307d","modified":1584975688206},{"_id":"public/archives/index.html","hash":"59e65db1c4c3c5b476efb00208c99a901c6226da","modified":1584975688206},{"_id":"public/archives/page/2/index.html","hash":"5d8d10425f09deeee5c67da20601e3ccec18e478","modified":1584975688206},{"_id":"public/archives/2020/index.html","hash":"8d6028918844fd6d597994300f998cfa96ab1529","modified":1584975688206},{"_id":"public/archives/2020/page/2/index.html","hash":"ba4f5620c996d1184b6bd0315bad7c82b5e79c6b","modified":1584975688206},{"_id":"public/archives/2020/02/index.html","hash":"eb0c1c9eba7112a6737b75c58cec88c926956797","modified":1584975688206},{"_id":"public/archives/2020/03/index.html","hash":"f40f6703c4840be5f16501de61fb767ce6849f95","modified":1584975688206},{"_id":"public/categories/Blog/index.html","hash":"b1488a5abc910b6ba79f891088a07e097ad932e3","modified":1584975688206},{"_id":"public/categories/OPL/index.html","hash":"81ec7d1c8f5c4605b4dab3f4681aa5f38ac48517","modified":1584975688206},{"_id":"public/categories/Java/index.html","hash":"ea7f1a2946ded61ea3f335d892eabc5a3c905396","modified":1584975688206},{"_id":"public/categories/Network/index.html","hash":"c0a65cd7218f779ba91def77135061f9e2f239fc","modified":1584975688206},{"_id":"public/categories/Movie/index.html","hash":"2c1210a1f8bf00dbe1d65eede2a39bd37cbdd6a2","modified":1584975688206},{"_id":"public/categories/Tools/index.html","hash":"24701ed6563f77954978fcd4476339c748802283","modified":1584975688206},{"_id":"public/index.html","hash":"c81bf4405283baeda726347b08d6102068a934c0","modified":1584975688206},{"_id":"public/page/2/index.html","hash":"d2dbc2f8daba4e508269bb677660e55683c176a6","modified":1584975688206},{"_id":"public/page/3/index.html","hash":"f10ae7f9a6925af741305836562fc4f6541d4b2b","modified":1584975688206},{"_id":"public/tags/icarus/index.html","hash":"554868eaf43c12d9ffdeffd03bc0941176e59309","modified":1584975688206},{"_id":"public/tags/hexo/index.html","hash":"d258f1a8119f5b7435cec835af19067604cb1b35","modified":1584975688206},{"_id":"public/tags/cplex/index.html","hash":"e5c6291ba191ce885d62328b38467ed0a6025a08","modified":1584975688206},{"_id":"public/tags/inherit/index.html","hash":"608cf74b9c1a56fac8dcfca8252025b020765835","modified":1584975688206},{"_id":"public/tags/basic/index.html","hash":"bf3f7a32b2ff1aeecbfaea35ccf7b9ad084942ea","modified":1584975688206},{"_id":"public/tags/interface/index.html","hash":"ceb8bcd2dc8085c1758edb24281bb6742326c8a6","modified":1584975688206},{"_id":"public/tags/polymorphism/index.html","hash":"47e30690e4ada0ae11588d6d1792522a58b9a949","modified":1584975688206},{"_id":"public/tags/inner/index.html","hash":"adff53e00ade8584f5d23a36ef4680544a0e7c99","modified":1584975688206},{"_id":"public/tags/api/index.html","hash":"495dd42fb3a4700c391dfac0a9f12b633f2fac53","modified":1584975688206},{"_id":"public/tags/collection/index.html","hash":"be11953dced284d48da04c5b51457a54e3697be2","modified":1584975688206},{"_id":"public/tags/network/index.html","hash":"f2468f0c3bf182d4edcb7dc5df874c30bd987cde","modified":1584975688206},{"_id":"public/tags/review/index.html","hash":"e27c8b0ed96f40a7255f79e5f1f7aad778ecf1e4","modified":1584975688206},{"_id":"public/tags/software/index.html","hash":"da4ce28d759775bf9e4c245f4e0bfd54555a05f7","modified":1584975688206},{"_id":"public/categories/index.html","hash":"8f6d36147647babd06af6b2edbef03a61cee9f76","modified":1584975688206},{"_id":"public/tags/index.html","hash":"2314be11f096c41fda82afe1a7464781dfb5a002","modified":1584975688206},{"_id":"public/CNAME","hash":"d0bcd830a1c0d28514bd9202ea586ee7fea4046b","modified":1584359927555},{"_id":"public/robots.txt","hash":"e83ccaf0d18af3e483954e84f57ba2530330a67f","modified":1584359927555},{"_id":"public/tricks/navs/index.html","hash":"157e13cc336a75b51b715cbe3f70e622c4efc53c","modified":1584359927555},{"_id":"public/fonts/HI_SiYsKILxRpg3hIP6sJ7fM7PqlMOvWjMY.woff2","hash":"3624f0569285ef2b71f27c1ea78fb8d5b5994b82","modified":1584359927555},{"_id":"public/fonts/4iCs6KVjbNBYlgoKfw72.woff2","hash":"48469f0155a13f3499db31d53cba5d47e8b528b5","modified":1584359927555},{"_id":"public/fonts/HI_SiYsKILxRpg3hIP6sJ7fM7PqlPevW.woff2","hash":"fcb1fd93f8ead84854734b3b95ce850e93dae700","modified":1584359927555},{"_id":"public/images/avatar.jpg","hash":"12f6c3418bf65b81dca3acf527a6d57607490c7b","modified":1584801720167},{"_id":"public/images/dp2px_avatar.png","hash":"1f26ae783e2a4a76c2f8eedf424738ec46061477","modified":1584359927555},{"_id":"public/images/fight.png","hash":"05e722c080645273d6c87f098270169824e88557","modified":1584359927555},{"_id":"public/images/liuyao-blog-avatar.jpg","hash":"29754b508e3815ef885d556ea8ae415473f16baf","modified":1584359927555},{"_id":"public/images/logo.png","hash":"b817c8e1bdef899840a0a1162a4359ad70097308","modified":1584359927555},{"_id":"public/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1584359927555},{"_id":"public/images/yafine_avatar.jpg","hash":"c0b9e12b84724ac11fe1b582206bf9592210d97e","modified":1584359927555},{"_id":"public/images/ypy.png","hash":"f394947c5f1b93b558f9cc7222ff2e8821308a1e","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/nav.css","hash":"ca73577d0d854061684066e53d00c4229391f20a","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/favicon.png","hash":"332a7313445a118b7268b10629bd4575c49441b8","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logo-collapsed@2x.png","hash":"8d35bdc6b0b7ae68b3c68daf4bf2665bd073f4f9","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logo@2x.png","hash":"e1a807f993bb1f6f0471fd2f061af90703f3d6cd","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logo_dark@2x.png","hash":"e826d8b1249c87a3102c2cf85defe0b673babae1","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/joinable.js","hash":"b37ba5c569d536419bb44ff46a79eac21dee251f","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/bootstrap.min.js","hash":"69ef90645d7a700e4272c94db9f831e5e703c0fa","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/lozad.js","hash":"0c29c9cfd15c59634bb62e51a763577cc5d91270","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/resizeable.js","hash":"7db6e6bb5508f07fca263e013f42f60e09a540ff","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/xenon-custom.js","hash":"88758ee4ba1abc5c43eeba9edeb97820288bcea3","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/xenon-api.js","hash":"4c9730c5b0877299e2ab4890d37a2016dd0c7f5c","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/xenon-toggles.js","hash":"055519d964f631b962a85a228efdad0aed6a1b83","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/wechat_viggo.jpg","hash":"a55716489120337f321cac9f19ad56923b4b8e6b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/flags/flag-cn.png","hash":"47799baec5f19b8e0290cb8dd68b93c4a6cfd794","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/flags/flag-us.png","hash":"be5ed403ded02f55de26885641216a60863419df","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/365PSD.png","hash":"d225b0834cae27ecda36c9a55bc418a594ace00e","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/36kr.png","hash":"1ab524d6e14c647aebd0fb69de9e9911866a01a3","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/3dsmax.png","hash":"200f29d2224e40ba917d42f873819275f2f58143","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/500d.png","hash":"27b1d99df9c578eb2c522a18e57241649a359302","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/55mm.png","hash":"b398d708959bbaf3e4c30508d8c5c4c25eaae2a6","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/90sheji.png","hash":"66a1dcd472b8817724eb3f91ebd04550cd355085","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/ADOBEXDCC.png","hash":"7c11839f26988ce4939a65dda671bbb90ef3809d","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/AdobeColorCC.png","hash":"ef9916dde89484d1bd4be14884188162a5615276","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/AdobeAfterEffectsCC.png","hash":"e792ab09884db26cd188ebcc3d8a84f0766635de","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/AffinityDesigner.png","hash":"055cdbbe1b30cce0879d5c99206adff876738254","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/AirbnbDesign.png","hash":"d6acb55817a1da9be4f6b5af6e33edb140925c1a","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Android9patch.png","hash":"0a3614b5eef9d0c49448e077faf772b89e5f336b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/AndroidNiceties.png","hash":"444e711c40c21f62bd2dd09137987a65832dfd67","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/AwesomeSketchPlugins.png","hash":"baaa0ed35afef043c5a79772ee2987938b27234c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/BWG.png","hash":"ed1a6d5a540a0811c0ebfa76b4280fe55e5552f1","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/CSSDesignAwards.png","hash":"55f7853c9a9732fd05dc02234fe99c2730a7dab4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/CollectUI.png","hash":"deed9f50c4a2d8eca431389dc07de773fa06ce7b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Designmodo.png","hash":"99ca053a1fa46a10ec097114f5c8481552277021","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Coolest.png","hash":"613e1bc4b9a26ef8ffd7ba4b8ebf3cb765b8e253","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Dunnnk.png","hash":"8f50b6f6f1f0710cae567c0e26e5c5023d169760","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Ecommercefolio.png","hash":"6eafb44c131ee77317b8d5012ced7293b0581b36","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Ezgif.png","hash":"56f64271aedc1aafd154148b8867b8805934fb25","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/FacebookDesign.png","hash":"ebf5dcc8e4147e21c3939b9cfa57372b51042f6b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/FindIcons.png","hash":"180c99e5e5f5c64b048061ea8fee404622ce6b73","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Fondertype.png","hash":"27bc94e34cbbe59e62f5d2404ce2aa6c705d46e1","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/FontM.png","hash":"dcdce37a48de4e5d2f497a01a2a45d7bf4f69b47","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Fribbble.png","hash":"95bc39600d146987eb4286b954c44df9b232ae97","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/GoogleDesign.png","hash":"6684bdfafbc0773939f8a0f4805cd5cd6e2f1bbb","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/INDESIGN .png","hash":"7856bbaf1054553fdeed6543736ecd38986aa072","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/IcoMoonApp.png","hash":"a50f89dec3a4338c5518634a634f8253f484cb8d","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Iconfinder.png","hash":"36fd6a407eda6e3b075eab6adf2d0be80720774c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Illustrator.png","hash":"87b65307ca7568421ce54c5f08ed1f0342bf7836","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/InstantLogoSearch.png","hash":"cd2e19e11394267b6f676b35efd2786b97b42b72","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/JDC.png","hash":"b1a5125e88ede318039f611d61230aabfe8db7bd","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Material_Design.png","hash":"96e7661fdb9fe22dcabb49c86da0f52f8977d2f4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Lapa.png","hash":"2d59f48ad4f7cb5870b8eff13baf2d1b2690fe30","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Materialicons.png","hash":"e040ad6f02acab1bbce8a07a1689640371b61944","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Medialoot.png","hash":"696ff0fad27291321b61a84e1e335f849f31ead4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/MockupZone.png","hash":"cba388ae1d386a483d7226e9142607dc6e7dfa13","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/MuseCC.png","hash":"2de3d6d932a7532c1ff64cb1587fd4e9c323b0a4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/MyFonts.png","hash":"d62e99908eeebedcb32ae0d1768d3ba0714285bb","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/OnlineWebFonts.png","hash":"95259511e66675898566676301362c9203aecadc","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/PhotoshopLady.png","hash":"1df522b8d20d819bab839285a519d521fdf173e5","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/NEXT.png","hash":"980a50b0f3f423869336f71812cc41f437eb7743","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/PrincipleRepo.png","hash":"760e940780edfb8d608399469d31d140e8ff2ff5","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Pttrns.png","hash":"4e14d229306194a5513b7d5aaa5601bee5e06c73","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/ReallyGoodUX.png","hash":"eebf8ed87d41fb6e16885d51acaedd621309bcb8","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/SketchMeasure.png","hash":"32f956345314f7b868aa2adc928affee898658b4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/SiteSee.png","hash":"59aba111918bca940507a167fe1bc67f52587320","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/Sketch.png","hash":"17bfc7e7bf0c6c96b2bde513da75b654f3698f6a","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/StockSnap.png","hash":"98727f50e4f97c770661d3d0d52404b383e75690","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/SplitShire.png","hash":"407bd705e638affa32e799869661997e3e2c7ced","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/UICloud.png","hash":"e5edf60e967d21aed2251bbb002dc73b1b9856b4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/UrbanFonts.png","hash":"3d6b27d3c810586149a31a08d7885589d89de5e9","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/WebInspiration.png","hash":"9a32bb879a409ba9464ba5114a4760388d163f3a","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/abstractfonts.png","hash":"0921ed3b3a44bb6b5b471fe7f95a5471b50bfe0d","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/albumarium.png","hash":"168db11df2b6491bd7ed7e4533d88b05e8a604e3","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/aliued.png","hash":"fbcc58ba0e389c5cdabd8074fdeed95b226e5fb5","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/aliyun.png","hash":"b08639a1efc26ff2bf84e512154c1a679f46a518","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/aliuedcn.png","hash":"3bbd367c330446bb7cd1775b45cddfb7e4be43c1","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/anyway.png","hash":"38cd75f4172089571f1f9ae16b1b6fa65420056f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/appinn.png","hash":"efa3b313dca9f675ee7104301ae79b438220dbff","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/awesome_design_systems.png","hash":"2d2d9ab15ac544d09fbe9d7d2ba1ea4a55aaa677","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/awwwards.png","hash":"39489c863001efa211ed3674be5be2ebe779a1a6","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/behance.png","hash":"e5e5a11933c7b15ad1cccb2b118488061122354d","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/blender.png","hash":"24073320aaee6a2720e37218193812b979876b72","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/boxesandarrows.png","hash":"86f5374661008da2307428c02df690d8000a47af","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/chanpin100.png","hash":"a54a3c453309e4e161ddb53c7f7db04b4a0a7b07","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/cdc.png","hash":"b5b86934d6379eb5e8f3bd5311faf0a67a65fea1","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/cinema4d.png","hash":"bd832cd94a9e4828ee42eee5fe6a1327d9b16456","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/colorhunt.png","hash":"310a3f6e6c2164e621a6ae5ac90d12021cca8411","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/coolors.png","hash":"fd3b7a338f7aee7befda1e9f18c76fbdfe34163f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/csspeeper.png","hash":"470759939cb19a793c40230041bc135965b88484","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/ctrip.png","hash":"46ad37bc20ea38a2ab6265c05b153a82e486aff6","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/dafont.png","hash":"2108d33609c75b60fc40b2fd977cf2a6f622d395","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/default.png","hash":"3d467b04e77fb4dc3108d01b3f4fb786a9dbad0f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/designguidelines.png","hash":"b1fea4c74752c992054425cc174a810f096a1e50","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/designmunk.png","hash":"d76c098d0f6c566db4d72bab09894319b312e095","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/digitaling.png","hash":"8105c890d70804531263a091734d449ad29d1f5c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/doyoudo.png","hash":"8eccea4cea522cea09d9e72cace5cf333875e412","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/dribbble.png","hash":"2a2276e2f0c0d7aff71e79d237a232f292dd6666","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/easyicon.png","hash":"bb947fa65c471e43920017ee1f9ae1d855c023d2","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/euxbaidu.png","hash":"b4e90c69c84d2a469a427cfc8807b450e02fec53","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/figma.png","hash":"fde6330af44c079134b58e1255602cab7f1a476c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/flaticon.png","hash":"f47a991c9015894bd636607724edb085c9187081","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/flatuicolorpicker.png","hash":"fab6e3dcd8774757c86861b85a7ace2d1d755647","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/flatuicolors.png","hash":"261a4a3aa51cb6ab3ef7c08a529844d1f9e8d513","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/flinto.png","hash":"845b412d7fab59e9425d05f4cfad917afe5de4e7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/fontawesomeicon.png","hash":"244b59c8c15dbb7a85428362edac9651c2022a75","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/fontex.png","hash":"8f902e6e39d46d44fdc39bd714c5455c5ffa6510","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/fonts2u.png","hash":"53691abd85470bc056aba24ff23d687e5f615423","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/fontsquirrel.png","hash":"59a36abb49feee751b0d33cc511657b651755e93","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/eico.png","hash":"c9983260c18e78bad67cf29ad4ebf463aee89bde","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/forgraphictm.png","hash":"a2a6c25105e04624e80546d1ea55659e8caffbf2","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/framer.png","hash":"37b5ebe054d9afb0e5704b6d4609373f587993cc","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/freebiesbug.png","hash":"907a1cc7e123e837594b9b6626ff687291414e49","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/freebiesupply.png","hash":"413c03449d00c6b98725213e92e260414fc23090","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/freenaturestock.png","hash":"331b931ca0bd1233bd36535a7e8feaf126d3786b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/freepik.png","hash":"5565623cf80524e603d6d34c519de6c902bae36f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/fwa.png","hash":"c00d54ad1206c3625c7e7f82f94780acf15674a7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/gaoding.png","hash":"fcd3a5e4c1cdb70be438f44a790f0ac198e3934b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/google.png","hash":"7b820baee1f0cb5cc4ec24d8423711d083258422","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/googlefont.png","hash":"21da17e33cd0dd0c839b836b5a8d653f5936bbe0","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/goqr.png","hash":"97be0ac81a4f11f1c85c5adbe9d6807f5f3eea62","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/grabient.png","hash":"0c13ef5f506e3e8e85d1b81bbdd56b0d5b1d27bb","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/gradients.png","hash":"6ea010babb3b45a99beb1ad4c427888555e010c4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/graphberry.png","hash":"2fbb06a857643b5838913ffecadc7563125eca00","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/gratisography.png","hash":"38dc3436a5fbac7221785d300df8abdcc2911fa3","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/gtn9.png","hash":"c5ba6c39d9c823a0b2531c0cbe7d46ea90806279","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/hdwallpapers.png","hash":"778e6795b0e66589941efed717ebabb8f0a08756","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/huaban.png","hash":"68f24bc3b246389be77df0d6fa2e4503f3ed5a27","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/human_interface_guidelines.png","hash":"b76eff6eb28ed874677a06326d89e44a7ec47298","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/iconarchive.png","hash":"ba0e0b2b687f3ec8aa986745ba7ad7ebea529b66","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/iconfont.png","hash":"bc513e219e5644726aa4563a7484e49e9244b790","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/iconmonstr.png","hash":"a2e2ecfeae6750484f16a8b5eabd13f2250381df","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/iconsfeed.png","hash":"2ad7b03bd7655ecb2088d3b73372edbe3bb86a18","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/imcreator.png","hash":"fde0627e3eac7b79ec006041871a6de616c2a27e","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/imooc.png","hash":"69b3a4fdde854b8e0595b9e4eeed6d6bfb66f32b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/insight.png","hash":"c0eabe6f4c49bf414097494b7c2e80597424703d","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/ionicons.png","hash":"267b87e6ca6338a539cab8fa2f27adf369dd57da","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/invisionapp.png","hash":"cd8bddc873eab293d70a4e7eb0029df4db652a62","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/iosicongallery.png","hash":"95a56a4d689b412448adc61799d5cdef1de51bf2","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/isorepublic.png","hash":"51ea236a13d49d0ef3433aefb4ca7445a2f08b46","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/isux.png","hash":"49bb5d0590d7cee1a1c2b1bad0e33b4a5e23497c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/iyunying.png","hash":"d55b33f025f25533e952a7e1e33c507d89942f3b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/jeshoots.png","hash":"bda276f862a441c32686ae84c2782908cf60b76f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/khroma.png","hash":"ec573da08808e20baec247dfe623af129185d7ee","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/klart.png","hash":"7e98fd9ee145a68cff32b0e3967e432023c355ad","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/lanrentuku.png","hash":"de9d4214318cafcb803bea0d02ec2f7c6e6242e8","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/leiphone.png","hash":"60cb1e95e09accde094595e384157357836fe64c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/librestock.png","hash":"86ce6325daab343553ec2ad254f60a4ebb27fad9","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/lieyunwang.png","hash":"fd644b2f15100a100877b59653d0a145610b75a8","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/lifeofpix.png","hash":"63846eb9877c7a574233546a62104fb329b0dbf7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/liqi.png","hash":"3bd7a176b1add9731604b891d9b70736cec706ae","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/littlebigdetails.png","hash":"ae2221200b709c00414c9c0053722582afa08d70","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/losttype.png","hash":"7a948191742b41c534b1ee803f176e382968bd0f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/lstore.png","hash":"fb8e02bbfa0bff2f45ed333b5ac0be1584b5c8bd","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/magdeleine.png","hash":"1c45a837388cde70c44c300099704f83a016dace","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/marvelapp.png","hash":"7cc9576ad899906354ac3382e04bf7fbf0c3136b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/medium.png","hash":"8d1fbe2946eb599172a28b9b341f30903c07bf57","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/mmtstock.png","hash":"112729b1d328ce36fc4a6b1b4b1be9cc3e01d551","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/mockupworld.png","hash":"80f8c71fda8a77cec1a3e49c92b7e74b466ec4a8","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/mustsee.png","hash":"9ca2399a58bdce1ea7a7ec03d8df8363959fc3a7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/mxd.png","hash":"854353e88a4b942dcaf62be8a85f5cc570108549","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/myphotopack.png","hash":"f1bea48ea52b2dac1c0b2ea7131717601cc03fd7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/navnav.png","hash":"b651479dff474e9eac91a94e76bacf0272ca5614","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/negativespace.png","hash":"74ff948e9ada722b5b80b19ac19aa99cc40244ba","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/niaogebiji.png","hash":"1b8743e2b052d397b4c3710a4d62aaaf7f714aaf","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/niceui.png","hash":"e6b06a58e2e83fb2efe0040b191c170b49cd7acb","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/nipic.png","hash":"b893edba3b764200d2432d0b64ee4b864ae75e07","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/nngroup.png","hash":"e605e93228234cb17b820b904af6a5b2facded01","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/notaselfie.png","hash":"618a230ac6702ce3be54cfc4045189716f7b0a5b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/officeplus.png","hash":"f7f9c2e8b7870130ee295daa6be955f22c76320b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/pages.png","hash":"fae172b15f9a15e63e409e56d72eb7e4c8125c8f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/papers.png","hash":"b2c9ca8ba78d838896006ec6c0e62fa8f91c8026","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/photoshop.png","hash":"fb79be40b23e97abd227883af160b6423b0bbd8f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/pinterest.png","hash":"4722b146d194058cc80ed5aeb7355ed197129dc3","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/pixabay.png","hash":"3650e1d69bcf3290614d12d04580357e4c173b13","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/pmcaff.png","hash":"5a9868709b71f35a65c504f3b00cf821a41cf9e5","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/pixeden.png","hash":"4015550db6a9d8e36190a6de90a33cbc8af53f06","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/pptmind.png","hash":"d7d08942a22c7fbf039761f24929fb8b2c58ee01","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/principle.png","hash":"c182c4b0093311abb8b3cc2ae9371a9a501699d6","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/producthunt.png","hash":"9219d747c940052718188766416fdce385b4fb81","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/protopie.png","hash":"da06a901c477773bbd58be6216a9fedeb5a72dcf","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/pptplus.png","hash":"40ddd5433cb632e5f448068c0e01a12379778f71","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/psefan.png","hash":"b84c784a6407da5ed7090ad9d428c62dafb33b3e","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/photoshopetiquette.png","hash":"c259d56640fad42f9f56d4da78697412e4c03712","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/publicdomainarchive.png","hash":"0ed8ce6b529bab5bc661edaad10e8ce5edc75ea4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/qianku.png","hash":"f286e8837df7ef64a09c0a15362b057d9384b8a9","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/qiantu.png","hash":"1de5d957eaf29d4ac8b4a239e1d2983bb5a2438a","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/reeoo.png","hash":"43a416bf7d7a0bf7b0f06331c232cef09f978516","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sccnn.png","hash":"6bcfe2601484f51e93db6ad03d1950137b870087","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/screensizes.png","hash":"53ad5461f932badd717987a2066cd4ab2aa28538","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sicangziti.png","hash":"0857c00a8be5adb8ff1b4d589627a4e5beb3c7d1","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/simplelineicons.png","hash":"018ec0ee36da1f24de92648963857faf7a757a92","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/siteInspire.png","hash":"3ec059fbe29ff1f1710e1c8c6168eadd750c5891","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sizzy.png","hash":"7c367f509b4b67b186cd7279bc492795468396a7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sketchIm.png","hash":"823800a6a37c1b60bd939c5ec8e7b02009256df9","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sketchapp.png","hash":"c764370fdee370abbfe0ccbed7097c61de8e2f09","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sketchappsources.png","hash":"bd13ff929b404b0c8b9b594f51efd71dd547e361","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sketchcasts.png","hash":"cc328830e236907ed496a3d775a9a78447a78959","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sketchcn.png","hash":"f2dde1a41c016d92f39232b77be6c77060d5cd07","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/skitterphoto.png","hash":"083c71fb2d2722f482d60c9d4cd32ef4cb61d4ed","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sketchhunt.png","hash":"087cf8e0b662de95634174042eb6a0b8c6a4ca8a","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/smashingmagazine.png","hash":"5c3ee595157c750ab9cb6f15e00ae382261299ab","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/ss-kexueshangwang.png","hash":"bd25bf298dfb56b301b25a6eccf83684d965df03","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sousucai.png","hash":"e094192f35246cbbcd97b22421396c3211ac50e7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/sspai.png","hash":"8c92eae3fe5aa88831b44a11833a9d32b2e8aece","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/stokpic.png","hash":"4411951ec340448ba4e5abf65164ee1e36800a39","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/svgomg.png","hash":"18d0ac2894d556f46d0b1dff3694ff7f5c42e274","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/tgideas.png","hash":"f28285bdf7b57e7e23e415ab17bc7223da7b4758","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/thedayscolor.png","hash":"71931dac677cd099ec987151262aa9d2487639ae","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/thestocks.png","hash":"8cbb68a4574089043c9703254982de5f28d892fe","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/threed.png","hash":"75add4eda5ae193f84483b94b8f6125c06f7625b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/tinypng.png","hash":"ba99cebe8f8c6b104a97a8f1019d3c6d57ca2e5d","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/today.png","hash":"3811be0919850c7c8d8b9f8e64973b8851f2a28c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/tretars.png","hash":"85b98c659ba84c2ca29cc9f6efacbf91499c86fb","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/trianglify.png","hash":"34f04ba431c46ab5c4655d6299ed6522648626f7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/typekit.png","hash":"aec0eef7a4c05638c99940500b70673eda674bd8","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uedbaidu.png","hash":"5a91792a983aa9b7f8e2cd88b7d89f94f8ed901f","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uedc.png","hash":"1bd2647b3fd33da6cd850126ffb5ce5a29c329e9","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/ui8.png","hash":"603e35c38fdcc45ffb4f82a11bc65a341c57d3c4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uicn.png","hash":"088fa5182d1cc080677bce368452855a9d6de228","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uigradients.png","hash":"552d833f66a06ace30779059786713e43408a310","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uigreat.png","hash":"6a600e737d7a48f8b646953fe716c100c7df0995","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uikitme.png","hash":"0628ef32bc30f207c76439a11296eec5c303f042","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uisdc.png","hash":"1880e6128e9da209f8a5cf3d190e2f682aef3958","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uiuigreat.png","hash":"fa643ff41a5c5e5839225ad4d1650e75c435dfbd","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/unsplash.png","hash":"adf3d16f30fb4360f9d1d9b21e23102fdb915fca","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uplabs.png","hash":"4a9be0e3ed5b7850007778dcd1378091c8532e5c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/usepanda.png","hash":"0999a67851bee8b362fc5615946aef2183c1d911","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uxcoffee.png","hash":"8fb718151d1d110dba09ac39bf44c621e2102ca6","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uxdesignweekly.png","hash":"d36ffc21811b82999e98e444cf80291f5d1f55ce","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/uxren.png","hash":"9ee5f5d1eac8d7a45abe14510cb9bfdbb62e64fc","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/vanschneider.png","hash":"ed22208b22a53e4cc80f7e1956ff7f30f4e663fe","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/viggoz.png","hash":"1b90431698fd4210f74ffa9a9d37a06360272bfb","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/visualhunt.png","hash":"46a7fcc5219acb45939a0d0f3ab742c11a472f94","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/wallhalla.png","hash":"6bbc09cbaf1965de599b9572ca71a94ac92cc12e","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/wappalyzer.png","hash":"fb27d8440948b6b0d9ed518c8e480bbf125f9b33","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/web_ui_tutorial.png","hash":"c292f2df274123e6e247ef0af83bea1b355b7d9e","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/webdesignledger.png","hash":"e4fc033ded60f963407bdafcaba9fd2acaaddd82","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/webgradients.png","hash":"f46ddf3d6f618bc9e63bc2e191bcd4ceac5fb4f0","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/worldvectorlogo.png","hash":"e89e4edaa8d210f0a433b0cf4a0594415a1011d7","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/woshipm.png","hash":"48bebdf56d93d305cd00fc09abd66e171dc9e991","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/wotu.png","hash":"f099a70adb833ec26685e0a506bfa7709a267704","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/xituqu.png","hash":"5783e5b27e948862b0c4ce0a06742b15ca81a00d","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/xiyou.png","hash":"0486c9d2c86b94c4d23a6c7dec37bc198e039fab","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/yineng.png","hash":"c128eba5caf793fe473cfc9499a80a23e8bf7c73","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/youtube.png","hash":"19365d9dd600d59d0bbb1bcace6329d301664fce","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/ypppt.png","hash":"b6965a036f6fc307c531815efcb31626b7bb4774","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/yrucd.png","hash":"4d859230b9ff3e64e08e87a634e2a0175d8f9b00","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/zcool.png","hash":"29ac08afe1a56757f86cf715657252f22c1c8985","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/zaodula.png","hash":"125c1b5449c8cb1fb16e4d3eed4db7dfacd51d37","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/zheshu.png","hash":"210788c2804d39ee46352f8fa311b5be2e7b4261","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/logos/ziticq.png","hash":"1fcd56804fcf8a4f8c180bc4e987e0ee48ff9cc0","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.eot","hash":"f3a9a3b609133c3d21d6b42abbf7f43bd111df72","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.ttf","hash":"aafafdc09404c4aa4447d7e898a2183def9cc1b1","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.woff","hash":"22037a3455914e5662fa51a596677bdb329e2c5c","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/glyphicons/glyphicons-halflings-regular.svg","hash":"3ef91859cbec165ac97df6957b176f69e8d6a04d","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/css/animation.css","hash":"181bbc89ec978981bf0ef8c7239710ae5b3ad6a1","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/css/elusive-codes.css","hash":"aea20bc1aba5ee3c73a4db0c530776cccd1d4a04","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/css/elusive-ie7-codes.css","hash":"0b1e965939a72c74bbf238e5aebd16d07654515d","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/css/elusive-ie7.css","hash":"2d99632a645cb335cea60ebcb63e14b1ed604534","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/css/elusive.css","hash":"56a5a5e174480b7ee53bdb064ed69b26e52fdc75","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/font/elusive.eot","hash":"e1eacc2f189c4923db9d86655a9f5fb93beb51da","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/font/elusive.ttf","hash":"7ebf21c374994508f74675ff877a244105acb6f2","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/font/elusive.woff","hash":"f26f6bb0cfaed34a6e543cd0cd33940c210f356f","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/fontawesome/css/font-awesome.css","hash":"b172963499e403af02bcf379c96886e1a695dad1","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/fontawesome/css/font-awesome.min.css","hash":"b71d1c7c315b67c614563382d1c2a868ac14d729","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/css/animation.css","hash":"181bbc89ec978981bf0ef8c7239710ae5b3ad6a1","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/css/linecons-codes.css","hash":"3532ae2ef3c3b3426fa78658eabdaf911d092e9f","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/css/linecons-ie7-codes.css","hash":"a8cf538f35eaf6d751a5996540047ef8b4de4663","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/css/linecons.css","hash":"19d79b04769d2a07e588e788bebc27ba97cf4876","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/css/linecons-ie7.css","hash":"8256024e1e6ee8e302bc932e92778547bc55a71b","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/font/linecons.eot","hash":"8908cf47e02208c6fed06c962d93bfbe07db5b31","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/font/linecons.svg","hash":"b8fc297d3365d2b88bf3333e775b6bcbca5ae6c4","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/font/linecons.ttf","hash":"d64c9418761c67f04f39d317a576646c8ea0e409","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/font/linecons.woff","hash":"2e8a5eb52a2fe2651c9f354923628ee2c2e34e55","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/css/animation.css","hash":"181bbc89ec978981bf0ef8c7239710ae5b3ad6a1","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/css/meteocons-codes.css","hash":"e1d3e17e0235320d9ea2b24381a8edcf9d9e20c6","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/css/meteocons-embedded.css","hash":"f43e17c40e75a58f77fadc015266961d3a83e152","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/css/meteocons-ie7-codes.css","hash":"92ec8770d2cd8988e4f4350967be138a812f388e","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/css/meteocons-ie7.css","hash":"3398b032849510965d245fcffa5a5bbfb188531e","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/css/meteocons.css","hash":"7122a46ecb97701b9c72d7a90784a45485c75db7","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/font/meteocons.eot","hash":"24afd643626798a52e1cd29612b0b4c47ee02f25","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/font/meteocons.svg","hash":"d025c575c44c189521a86c1c242cba15640f04f7","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/font/meteocons.ttf","hash":"2d24b57fdb969493ebb595151f7ad30e868e8d1b","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/meteocons/font/meteocons.woff","hash":"7a8ff8f879a956054ae07b75fa754942ce1bbe57","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1584359927555},{"_id":"public/images/display.jpg","hash":"47cec911edf126c02c849483763d37008d308fad","modified":1584359927555},{"_id":"public/images/jitwxs_avatar.jpg","hash":"e8bca755c6ee0c470abc1ac4c539fb33fa30026c","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/xenon-forms.css","hash":"70c8bce048a5f8e66187cb738e0c036d36860870","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/qqgroup_webstack2.jpg","hash":"c45597214bcd54633c858be5a2524cac01534377","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/qqgroup_webstack.jpg","hash":"690913cc4da48a13f25401a36c808418682f305c","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/webstack_banner_cn.png","hash":"ceca7c076ecf4905feaf1024304715daf8ee2476","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/TweenMax.min.js","hash":"19da9b3cc87be34ad27620f56b91041eaadd5ca1","modified":1584359927555},{"_id":"public/tricks/navs/assets/js/jquery-1.11.1.min.js","hash":"d6c1f41972de07b09bfa63d2e50f9ab41ec372bd","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/bootstrap.css","hash":"739ce8cf6556091fbb9c87d01f5849e6d36d6367","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/font/elusive.svg","hash":"cca1a8e9bd1ef9fabdadbaa0df80078c09830234","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/fontawesome/fonts/FontAwesome.otf","hash":"6270a4a561a69fef5f5cc18cdf9efc256ec2ccbe","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/linecons/css/linecons-embedded.css","hash":"d7cd676abc992caaea46c241c3c403014e81d470","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/elusive/css/elusive-embedded.css","hash":"709ef4e99c1bb9b992709610a2cc6e254ad06f4f","modified":1584359927555},{"_id":"public/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1584359927555},{"_id":"public/css/fonts.css","hash":"2172570db655ac89b0a1b0fc835dd225ad5d9c8e","modified":1584359927555},{"_id":"public/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1584359927555},{"_id":"public/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1584359927555},{"_id":"public/css/search.css","hash":"d6a59894819e7431d42b249b6c2fc9ff3b99a488","modified":1584359927555},{"_id":"public/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1584359927555},{"_id":"public/js/back-to-top.js","hash":"b1dcf30577cefe833dc6151757c0a05ea5b5a643","modified":1584359927555},{"_id":"public/js/clock.js","hash":"d7dddf675175ba149248b4f3634a94585ac5bb11","modified":1584359927555},{"_id":"public/js/gallery.js","hash":"64e49cdf830c3eacc9bcc299c4952d12cbd82872","modified":1584359927555},{"_id":"public/js/insight.js","hash":"8ba56fd5e4232a05ccef5f8b733c7ecca0814633","modified":1584359927555},{"_id":"public/js/main.js","hash":"22f2da58ff6445526c6f5ccd72a93ca0fd8a7a44","modified":1584359927555},{"_id":"public/js/night.js","hash":"16185b672d6055f44cdcd4b77ce7f5100f8b9c4a","modified":1584359927555},{"_id":"public/js/universe.js","hash":"abd0837f3b501a1ee6b997dc25763950f9604f8b","modified":1584359927555},{"_id":"public/css/style.css","hash":"e1338b0444f0085cd33f67f425297940452e5f17","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/xenon-components.css","hash":"4f98d021c09b92f1e6e04c2f35009b9e5a04f322","modified":1584359927555},{"_id":"public/postImg/network-protocol-map.gif","hash":"b1bc101d4fff4a9e49d367b54f1a52ba9b564c79","modified":1584359927555},{"_id":"public/tricks/navs/assets/index.html","hash":"295af00c123245aa0314800e9407923d4f7cc755","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/xenon-core.css","hash":"464e63ca016104b243fae7e994f4e988aca00d38","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/fonts/fontawesome/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/xenon-skins.css","hash":"e70ba775fbf8801d3b8ce3eb6e809adeb3d0f35b","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/webstack_icon_producthunt.png","hash":"dc214e3ec885b87d8e0e9d2119b5f8574313dda0","modified":1584359927555},{"_id":"public/tricks/navs/assets/css/xenon.css","hash":"9dd29389d3aec37aba869a09cf8543193033aea4","modified":1584359927555},{"_id":"public/tricks/navs/assets/images/preview.gif","hash":"20affa13987b7dd40331c871b21a58c9b2f303a6","modified":1584359927555},{"_id":"public/tricks/navs/assets/webstack_logos.sketch","hash":"3a1ebdc9bd765efc3e5035855696de7f532aaeb8","modified":1584359927555},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/avatar.jpg","hash":"12f6c3418bf65b81dca3acf527a6d57607490c7b","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/dp2px_avatar.png","hash":"1f26ae783e2a4a76c2f8eedf424738ec46061477","modified":1584083346720},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/liuyao-blog-avatar.jpg","hash":"29754b508e3815ef885d556ea8ae415473f16baf","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/yafine_avatar.jpg","hash":"c0b9e12b84724ac11fe1b582206bf9592210d97e","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/jitwxs_avatar.jpg","hash":"e8bca755c6ee0c470abc1ac4c539fb33fa30026c","modified":1584054314000},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/aye_avatar.jpg","hash":"79894c9f8afb288239dcf034c6c49a2e33512b36","modified":1584628941217},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/geekinns_avatar.jpg","hash":"18cafb1a19d0df535a723caca5d210a1e37879ff","modified":1584629480171},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/geekinns_avatar.png","hash":"61088e0e01b64308590ada5673308285a9329209","modified":1584629467957},{"_id":"public/avatars/dp2px_avatar.png","hash":"1f26ae783e2a4a76c2f8eedf424738ec46061477","modified":1584630302191},{"_id":"public/avatars/liuyao-blog-avatar.jpg","hash":"29754b508e3815ef885d556ea8ae415473f16baf","modified":1584630302191},{"_id":"public/avatars/avatar.jpg","hash":"12f6c3418bf65b81dca3acf527a6d57607490c7b","modified":1584630302191},{"_id":"public/avatars/aye_avatar.jpg","hash":"79894c9f8afb288239dcf034c6c49a2e33512b36","modified":1584630302191},{"_id":"public/avatars/geekinns_avatar.jpg","hash":"18cafb1a19d0df535a723caca5d210a1e37879ff","modified":1584630302191},{"_id":"public/avatars/yafine_avatar.jpg","hash":"c0b9e12b84724ac11fe1b582206bf9592210d97e","modified":1584630302191},{"_id":"public/avatars/geekinns_avatar.png","hash":"61088e0e01b64308590ada5673308285a9329209","modified":1584630302191},{"_id":"public/avatars/jitwxs_avatar.jpg","hash":"e8bca755c6ee0c470abc1ac4c539fb33fa30026c","modified":1584630302191},{"_id":"source/_posts/halo-blog-setup.md","hash":"76211a69dcb7a7da0974dfca21b255198a5a51f5","modified":1584709435532},{"_id":"source/_posts/posts-cate01-test.md","hash":"2523dea7b5aa0d523e1d40f76bd75ca0dd879df5","modified":1584789407523},{"_id":"source/_posts/MySQL-Study.md","hash":"d60cc48cc1620f37e2de7484fe234556a4e00a15","modified":1585015308973},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/CloudCver_avatar.jpg","hash":"afd929d2c497f342d63438d9832e7ee4d96c025c","modified":1584975189092},{"_id":"themes/hexo-theme-icarus-3.0.0-beta.2/source/avatars/fight.png","hash":"05e722c080645273d6c87f098270169824e88557","modified":1584054314000},{"_id":"public/posts/MySQL-Study/index.html","hash":"7d03219da6567748ba09e5c5bfd915e774a51e60","modified":1584975688206},{"_id":"public/categories/MySQL/index.html","hash":"ea7f785ec4e27268731f6a80e937c5b1f3a23993","modified":1584975688206},{"_id":"public/tags/mysql/index.html","hash":"7392aa763d88a94e50ff7e6269a32b2ec37d59b8","modified":1584975688206},{"_id":"public/avatars/fight.png","hash":"05e722c080645273d6c87f098270169824e88557","modified":1584975688206},{"_id":"public/avatars/CloudCver_avatar.jpg","hash":"afd929d2c497f342d63438d9832e7ee4d96c025c","modified":1584975688206}],"Category":[{"name":"Blog","_id":"ck7uezt0s0004ysst4ed5h1ts"},{"name":"OPL","_id":"ck7uezt0z000aysst3qw73dme"},{"name":"Java","_id":"ck7uezt13000fysstatinf3ia"},{"name":"Network","_id":"ck7uezt1n001aysstfdys2ved"},{"name":"Movie","_id":"ck7uezt1o001fyssthaqvb37h"},{"name":"Tools","_id":"ck7uezt1p001jysst0fwxev5d"},{"name":"Halo","_id":"ck803z35m0001csstgfm719gt"},{"name":"MySQL","_id":"ck84lhl3y000300uc5y05514k"}],"Data":[],"Page":[{"title":"About","date":"2020-02-21T14:14:43.000Z","widgets":[],"_content":"优秀的人不是不合群，而是他们合群的人里面没有你。\n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2020-02-21 22:14:43\nwidgets: []\n---\n优秀的人不是不合群，而是他们合群的人里面没有你。\n","updated":"2020-03-09T02:29:39.006Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck7uezt0o0001ysst1khje1br","content":"<p>优秀的人不是不合群，而是他们合群的人里面没有你。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>优秀的人不是不合群，而是他们合群的人里面没有你。</p>\n"},{"title":"Gallery","date":"2020-03-01T08:59:45.000Z","comment":false,"widgets":[],"_content":"<blockquote>  <strong> Justified-gallery </strong> 相册页:</blockquote>\n\n<div class=\"justified-gallery\">\n\n![images](https://images.bitcrush.top/gallery_images/1.jpg)\n![images](https://images.bitcrush.top/gallery_images/2.jpg)\n![images](https://images.bitcrush.top/gallery_images/3.jpg)\n![images](https://images.bitcrush.top/gallery_images/4.jpg)\n![images](https://images.bitcrush.top/gallery_images/5.jpg)\n![images](https://images.bitcrush.top/gallery_images/6.jpg)\n![images](https://images.bitcrush.top/gallery_images/7.jpg)\n![images](https://images.bitcrush.top/gallery_images/8.jpg)\n![images](https://images.bitcrush.top/gallery_images/9.jpg)\n\n</div>\n\n</br>\n\n<blockquote><strong> lightGallery </strong>相册页:</blockquote>\n\n<div class = \"lightGallery\">\n\n![images](https://images.bitcrush.top/gallery_images/1.jpg)\n![images](https://images.bitcrush.top/gallery_images/2.jpg)\n![images](https://images.bitcrush.top/gallery_images/3.jpg)\n![images](https://images.bitcrush.top/gallery_images/4.jpg)\n![images](https://images.bitcrush.top/gallery_images/5.jpg)\n![images](https://images.bitcrush.top/gallery_images/6.jpg)\n![images](https://images.bitcrush.top/gallery_images/7.jpg)\n![images](https://images.bitcrush.top/gallery_images/8.jpg)\n![images](https://images.bitcrush.top/gallery_images/9.jpg)\n\n\n</div>\n\n","source":"gallery/index.md","raw":"---\ntitle: Gallery\ndate: 2020-03-01 16:59:45\ncomment: false\nwidgets: []\n---\n<blockquote>  <strong> Justified-gallery </strong> 相册页:</blockquote>\n\n<div class=\"justified-gallery\">\n\n![images](https://images.bitcrush.top/gallery_images/1.jpg)\n![images](https://images.bitcrush.top/gallery_images/2.jpg)\n![images](https://images.bitcrush.top/gallery_images/3.jpg)\n![images](https://images.bitcrush.top/gallery_images/4.jpg)\n![images](https://images.bitcrush.top/gallery_images/5.jpg)\n![images](https://images.bitcrush.top/gallery_images/6.jpg)\n![images](https://images.bitcrush.top/gallery_images/7.jpg)\n![images](https://images.bitcrush.top/gallery_images/8.jpg)\n![images](https://images.bitcrush.top/gallery_images/9.jpg)\n\n</div>\n\n</br>\n\n<blockquote><strong> lightGallery </strong>相册页:</blockquote>\n\n<div class = \"lightGallery\">\n\n![images](https://images.bitcrush.top/gallery_images/1.jpg)\n![images](https://images.bitcrush.top/gallery_images/2.jpg)\n![images](https://images.bitcrush.top/gallery_images/3.jpg)\n![images](https://images.bitcrush.top/gallery_images/4.jpg)\n![images](https://images.bitcrush.top/gallery_images/5.jpg)\n![images](https://images.bitcrush.top/gallery_images/6.jpg)\n![images](https://images.bitcrush.top/gallery_images/7.jpg)\n![images](https://images.bitcrush.top/gallery_images/8.jpg)\n![images](https://images.bitcrush.top/gallery_images/9.jpg)\n\n\n</div>\n\n","updated":"2020-03-14T05:36:17.225Z","path":"gallery/index.html","comments":1,"layout":"page","_id":"ck7uezt0r0003ysst71rq2kbb","content":"<blockquote>  <strong> Justified-gallery </strong> 相册页:</blockquote>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"https://images.bitcrush.top/gallery_images/1.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/2.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/3.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/4.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/5.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/6.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/7.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/8.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/9.jpg\" alt=\"images\"></p>\n</div>\n\n</br>\n\n<blockquote><strong> lightGallery </strong>相册页:</blockquote>\n\n<div class = \"lightGallery\">\n\n<p><img src=\"https://images.bitcrush.top/gallery_images/1.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/2.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/3.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/4.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/5.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/6.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/7.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/8.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/9.jpg\" alt=\"images\"></p>\n</div>\n\n","site":{"data":{}},"excerpt":"","more":"<blockquote>  <strong> Justified-gallery </strong> 相册页:</blockquote>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"https://images.bitcrush.top/gallery_images/1.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/2.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/3.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/4.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/5.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/6.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/7.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/8.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/9.jpg\" alt=\"images\"></p>\n</div>\n\n</br>\n\n<blockquote><strong> lightGallery </strong>相册页:</blockquote>\n\n<div class = \"lightGallery\">\n\n<p><img src=\"https://images.bitcrush.top/gallery_images/1.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/2.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/3.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/4.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/5.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/6.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/7.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/8.jpg\" alt=\"images\"><br><img src=\"https://images.bitcrush.top/gallery_images/9.jpg\" alt=\"images\"></p>\n</div>\n\n"},{"title":"Links","widgets":[],"_content":"\n**申请友链须知**\n\n- 原则上只和技术、情感类博客互换友链，且具有原创高质量文章优先。\n- 不与含有色情、暴力、政治敏感或其他法律法规禁止的网站互换。\n- 申请链接前请先添加本博链接，通过本友链页面留言或邮件告知。\n- 请提供网站名称、网站链接、网站描述（12字以内）、网站图标或头像。\n- 本站会定期对所有友链进行检查，如果发现一月内不能访问或者数月内没有内容更新可能会取消该友链。\n\n---\n\n\n\n**友情链接**\n\n<!-- 第一排 -->\n<div class=\"columns\">\n\n<!-- 01 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://bitcrush.top/\" target=\"_blank\"> <span class=\"text-dark\">一见倾心</span></a>\n          <div class=\"text-muted\">你要很酷，世界才不会残酷</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 02 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/dp2px_avatar.png\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://dp2px.com/ \" target=\"_blank\"> <span class=\"text-dark\">水寒的博客 </span></a>\n          <div class=\"text-muted\">安卓、前端、物联网大佬</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 03 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/jitwxs_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://www.jitwxs.cn/\" target=\"_blank\"> <span class=\"text-dark\">Jitwxs</span></a>\n          <div class=\"text-muted\">Java 后端开发大佬</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n</div>\n\n<!-- 第二排 -->\n<div class=\"columns\">\n <!--04  -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/aye_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\" https://www.Aye.Ink\" target=\"_blank\"> <span class=\"text-dark\">致永远-For Aye</span></a>\n          <div class=\"text-muted\">笔墨写春秋,挥毫斥方遒</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n<!-- 05 -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/yafine_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://yafine66.gitee.io\" target=\"_blank\"> <span class=\"text-dark\">过客~励む</span></a>\n          <div class=\"text-muted\">努力，为了将来更好的选择</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 06 -->\n   <div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/liuyao-blog-avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://xiaoshidigitee.gitee.io\" target=\"_blank\"> <span class=\"text-dark\">果果小师弟</span></a>\n          <div class=\"text-muted\">一个喜欢嵌入式的小码农</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n</div>\n\n\n\n\n<!-- 第三排 -->\n<div class=\"columns\">\n <!--07  -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/geekinns_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\" https://www.geekinns.cn\" target=\"_blank\"> <span class=\"text-dark\">GeekInns</span></a>\n          <div class=\"text-muted\">努力努力，学习不易</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n<!-- 08 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/CloudCver_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://wwwcloudcver.com\" target=\"_blank\"> <span class=\"text-dark\">CloudCver 意犹未尽</span></a>\n          <div class=\"text-muted\">人工智能、CV小白</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 09 -->\n  <div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://bitcrush.top/\" target=\"_blank\"> <span class=\"text-dark\">一见倾心</span></a>\n          <div class=\"text-muted\">虚位以待</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n</div>","source":"links/index.md","raw":"---\ntitle: Links\nwidgets: []\n---\n\n**申请友链须知**\n\n- 原则上只和技术、情感类博客互换友链，且具有原创高质量文章优先。\n- 不与含有色情、暴力、政治敏感或其他法律法规禁止的网站互换。\n- 申请链接前请先添加本博链接，通过本友链页面留言或邮件告知。\n- 请提供网站名称、网站链接、网站描述（12字以内）、网站图标或头像。\n- 本站会定期对所有友链进行检查，如果发现一月内不能访问或者数月内没有内容更新可能会取消该友链。\n\n---\n\n\n\n**友情链接**\n\n<!-- 第一排 -->\n<div class=\"columns\">\n\n<!-- 01 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://bitcrush.top/\" target=\"_blank\"> <span class=\"text-dark\">一见倾心</span></a>\n          <div class=\"text-muted\">你要很酷，世界才不会残酷</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 02 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/dp2px_avatar.png\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://dp2px.com/ \" target=\"_blank\"> <span class=\"text-dark\">水寒的博客 </span></a>\n          <div class=\"text-muted\">安卓、前端、物联网大佬</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 03 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/jitwxs_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://www.jitwxs.cn/\" target=\"_blank\"> <span class=\"text-dark\">Jitwxs</span></a>\n          <div class=\"text-muted\">Java 后端开发大佬</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n</div>\n\n<!-- 第二排 -->\n<div class=\"columns\">\n <!--04  -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/aye_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\" https://www.Aye.Ink\" target=\"_blank\"> <span class=\"text-dark\">致永远-For Aye</span></a>\n          <div class=\"text-muted\">笔墨写春秋,挥毫斥方遒</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n<!-- 05 -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/yafine_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://yafine66.gitee.io\" target=\"_blank\"> <span class=\"text-dark\">过客~励む</span></a>\n          <div class=\"text-muted\">努力，为了将来更好的选择</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 06 -->\n   <div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/liuyao-blog-avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://xiaoshidigitee.gitee.io\" target=\"_blank\"> <span class=\"text-dark\">果果小师弟</span></a>\n          <div class=\"text-muted\">一个喜欢嵌入式的小码农</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n</div>\n\n\n\n\n<!-- 第三排 -->\n<div class=\"columns\">\n <!--07  -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/geekinns_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\" https://www.geekinns.cn\" target=\"_blank\"> <span class=\"text-dark\">GeekInns</span></a>\n          <div class=\"text-muted\">努力努力，学习不易</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n<!-- 08 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/CloudCver_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://wwwcloudcver.com\" target=\"_blank\"> <span class=\"text-dark\">CloudCver 意犹未尽</span></a>\n          <div class=\"text-muted\">人工智能、CV小白</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 09 -->\n  <div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://bitcrush.top/\" target=\"_blank\"> <span class=\"text-dark\">一见倾心</span></a>\n          <div class=\"text-muted\">虚位以待</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n</div>","date":"2020-03-23T14:55:05.254Z","updated":"2020-03-23T14:55:05.254Z","path":"links/index.html","_id":"ck7uezt0w0007ysst7ecs9bk4","comments":1,"layout":"page","content":"<p><strong>申请友链须知</strong></p>\n<ul>\n<li>原则上只和技术、情感类博客互换友链，且具有原创高质量文章优先。</li>\n<li>不与含有色情、暴力、政治敏感或其他法律法规禁止的网站互换。</li>\n<li>申请链接前请先添加本博链接，通过本友链页面留言或邮件告知。</li>\n<li>请提供网站名称、网站链接、网站描述（12字以内）、网站图标或头像。</li>\n<li>本站会定期对所有友链进行检查，如果发现一月内不能访问或者数月内没有内容更新可能会取消该友链。</li>\n</ul>\n<hr>\n<p><strong>友情链接</strong></p>\n<!-- 第一排 -->\n<div class=\"columns\">\n\n<!-- 01 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://bitcrush.top/\" target=\"_blank\"> <span class=\"text-dark\">一见倾心</span></a>\n          <div class=\"text-muted\">你要很酷，世界才不会残酷</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 02 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/dp2px_avatar.png\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://dp2px.com/ \" target=\"_blank\"> <span class=\"text-dark\">水寒的博客 </span></a>\n          <div class=\"text-muted\">安卓、前端、物联网大佬</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 03 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/jitwxs_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://www.jitwxs.cn/\" target=\"_blank\"> <span class=\"text-dark\">Jitwxs</span></a>\n          <div class=\"text-muted\">Java 后端开发大佬</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n</div>\n\n<!-- 第二排 -->\n<div class=\"columns\">\n <!--04  -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/aye_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\" https://www.Aye.Ink\" target=\"_blank\"> <span class=\"text-dark\">致永远-For Aye</span></a>\n          <div class=\"text-muted\">笔墨写春秋,挥毫斥方遒</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n<!-- 05 -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/yafine_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://yafine66.gitee.io\" target=\"_blank\"> <span class=\"text-dark\">过客~励む</span></a>\n          <div class=\"text-muted\">努力，为了将来更好的选择</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 06 -->\n   <div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/liuyao-blog-avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://xiaoshidigitee.gitee.io\" target=\"_blank\"> <span class=\"text-dark\">果果小师弟</span></a>\n          <div class=\"text-muted\">一个喜欢嵌入式的小码农</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n</div>\n\n\n\n\n<!-- 第三排 -->\n<div class=\"columns\">\n <!--07  -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/geekinns_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\" https://www.geekinns.cn\" target=\"_blank\"> <span class=\"text-dark\">GeekInns</span></a>\n          <div class=\"text-muted\">努力努力，学习不易</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n<!-- 08 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/CloudCver_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://wwwcloudcver.com\" target=\"_blank\"> <span class=\"text-dark\">CloudCver 意犹未尽</span></a>\n          <div class=\"text-muted\">人工智能、CV小白</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 09 -->\n  <div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://bitcrush.top/\" target=\"_blank\"> <span class=\"text-dark\">一见倾心</span></a>\n          <div class=\"text-muted\">虚位以待</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<p><strong>申请友链须知</strong></p>\n<ul>\n<li>原则上只和技术、情感类博客互换友链，且具有原创高质量文章优先。</li>\n<li>不与含有色情、暴力、政治敏感或其他法律法规禁止的网站互换。</li>\n<li>申请链接前请先添加本博链接，通过本友链页面留言或邮件告知。</li>\n<li>请提供网站名称、网站链接、网站描述（12字以内）、网站图标或头像。</li>\n<li>本站会定期对所有友链进行检查，如果发现一月内不能访问或者数月内没有内容更新可能会取消该友链。</li>\n</ul>\n<hr>\n<p><strong>友情链接</strong></p>\n<!-- 第一排 -->\n<div class=\"columns\">\n\n<!-- 01 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://bitcrush.top/\" target=\"_blank\"> <span class=\"text-dark\">一见倾心</span></a>\n          <div class=\"text-muted\">你要很酷，世界才不会残酷</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 02 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/dp2px_avatar.png\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://dp2px.com/ \" target=\"_blank\"> <span class=\"text-dark\">水寒的博客 </span></a>\n          <div class=\"text-muted\">安卓、前端、物联网大佬</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 03 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/jitwxs_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://www.jitwxs.cn/\" target=\"_blank\"> <span class=\"text-dark\">Jitwxs</span></a>\n          <div class=\"text-muted\">Java 后端开发大佬</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n</div>\n\n<!-- 第二排 -->\n<div class=\"columns\">\n <!--04  -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/aye_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\" https://www.Aye.Ink\" target=\"_blank\"> <span class=\"text-dark\">致永远-For Aye</span></a>\n          <div class=\"text-muted\">笔墨写春秋,挥毫斥方遒</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n<!-- 05 -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/yafine_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://yafine66.gitee.io\" target=\"_blank\"> <span class=\"text-dark\">过客~励む</span></a>\n          <div class=\"text-muted\">努力，为了将来更好的选择</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 06 -->\n   <div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/liuyao-blog-avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://xiaoshidigitee.gitee.io\" target=\"_blank\"> <span class=\"text-dark\">果果小师弟</span></a>\n          <div class=\"text-muted\">一个喜欢嵌入式的小码农</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n</div>\n\n\n\n\n<!-- 第三排 -->\n<div class=\"columns\">\n <!--07  -->\n<div class=\"column\">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/geekinns_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\" https://www.geekinns.cn\" target=\"_blank\"> <span class=\"text-dark\">GeekInns</span></a>\n          <div class=\"text-muted\">努力努力，学习不易</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n\n<!-- 08 -->\n<div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/CloudCver_avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://wwwcloudcver.com\" target=\"_blank\"> <span class=\"text-dark\">CloudCver 意犹未尽</span></a>\n          <div class=\"text-muted\">人工智能、CV小白</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n<!-- 09 -->\n  <div class=\"column \">\n    <div class=\"box \">\n  <article class=\"media\">\n    <div class=\"media-left\">\n      <figure class=\"image is-64x64\">\n        <img src=\"/avatars/avatar.jpg\"  width=128 height=128>\n      </figure>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"content\" >\n        <p >\n          <a href=\"https://bitcrush.top/\" target=\"_blank\"> <span class=\"text-dark\">一见倾心</span></a>\n          <div class=\"text-muted\">虚位以待</div>\n        </p>\n      </div>\n    </div>\n  </article>\n</div>\n</div>\n</div>"}],"Post":[{"title":"Icarus 主题网站优化（bug记录）","date":"2020-03-13T07:27:31.000Z","toc":true,"top":101,"article-thumbnail":true,"thumbnail":"/images/display.jpg","keywords":["Machine Learning","css","Word Embedding","CJ Sun","Caijun Sun","IOVI"],"_content":"**记录我的网站目标及优化之路，感谢以下大佬的创作与开发（不分先后）：**\n\n<!-- more -->\n\n## Thanks 大佬\n\n- [ppoffice](https://github.com/ppoffice \"ppoffice\")\n\n- [Ray’s Blog](https://raycoder.me \"Ray's Blog\")\n\n- [dp2px](https://dp2px.com/ \"dp2px\")\n\n- [removeif](https://removeif.github.io/ \"removeif\")\n\n- [jitwxs](https://www.jitwxs.cn/ \"jitwxs\")\n\n- [imaegoo](https://www.imaegoo.com/ \"imaegoo\")\n\n- [alphalxy](https://www.alphalxy.com/ \"alphalxy\")\n\n- [Evan](https://nave.work/\"Evan\")\n\n- [zazdream](https://zazdream.com/)\n\n- [cxy35](https://www.cxy35.com/)\n\n- [Anne Wu](https://annewqx.top/)\n\n- [yafine](https://yafine-blog.cn/)\n\n## ToDo 计划 \n\n- [x] 粒子时钟（加强版）\n\n- [x] 文章页 双栏布局 /减少不必要的部件\n\n- [x] 自动刷新md内容方便预览\n\n- [x] 底部备案、文章版权、永久链接格式\n\n- [x] 黑夜模式\n\n- [x] 主页添加bio(一句话)\n\n- [x] 图片居中/相册间隙\n\n- [x] 友链页布局修改（三栏）\n\n- [ ] 关于页面内容更新(加音乐)\n\n- [ ] 主页添加部件 最新评论\n\n- [ ] 主页添加部件 添加推荐文章\n\n- [x] 增加页面 豆瓣电影\n\n- [x] 增加页面 豆瓣书单\n\n- [ ] ~~增加电子书阅读页面(gitbook)~~\n\n- [x] ~~增加网易云音乐页面~~\n\n- [ ] 关于页面加入时间线\n\n- [ ] 归档页添加文章贡献概览\n\n- [x] ~~置顶文章功能~~\n\n- [ ] ~~加密文章功能（鸡肋）~~\n\n- [ ] 文章列表评论数显示\n\n- [ ] ~~增加页面 碎碎念（个人吐槽、心情页）~~\n\n- [ ] ~~增加页面 留言墙（区）~~\n\n- [x] 增加相册页（包括美图展示）\n\n- [ ] ~~添加网盘~~\n\n- [ ] 增加体系页（思维导图）\n\n- [x] RSS订阅\n\n- [x] 增加个人导航页（工具、网站、影视等）\n\n- [x] 图像logo 更改 （适应黑夜模式）\n\n- [x] ~~评论管理~~\n\n- [x] 关注我改成公众号（公众号还未准备）**\n\n- [x] 网站运行时间\n\n- [ ] ~~pv/uv~~\n\n- [ ] ~~图片懒加载 （以及与相册的bug)~~\n\n## Bug 修复\n\n- [ ] 关注 Follow 弹出二维码在移动设备未在中间弹出\n\n- [x] 黑夜模式下 底部刷新变黑明显慢于其他部分\n\n- [x] night.js初次加载报Cannot read property 'toString' of null的问题\n\n- [x] 黑夜下valine 评论 代码格式形式白\n\n  \n\n## Display 布局\n\n- 三栏展示：Home 、Archives、Categories、Tags、Movies\n- 双栏展示： Post、\n- 单栏展示： About 、Gallery、Links\n- ~~纯静态/未渲染：Tricks :  navs(先不弄了)~~\n\n## Record 记录\n\n- `page.layout` 判断  `type`\n\n- 将主题所用的字体放到本地，弃用 `loli` CDN\n- 在黑夜模式作者imaegoo的帮助下解决 night.js 报错问题\n- 将相册图片放到了又拍云cdn 上了 图片资源放在又拍云 \n\n## Plan 期望\n\n- [ ] 音乐部件\n\n- [ ] 除文章页外不加载不必要插件\n\n- [x] 友链页整改\n\n  \n## Profile 文档\n- [hexo官方文档里对于变量的说明](https://hexo.io/zh-cn/docs/variables)\n\n- [hexo官方文档里对于辅助函数的说明](https://hexo.io/zh-cn/docs/helpers)\n\n- [ejs嵌入开发各个标签的含义](https://ejs.bootcss.com/)\n\n- [bulma框架中文文档](https://bulma.zcopy.site/documentation/)\n","source":"_posts/Icarus-record.md","raw":"---\ntitle: Icarus 主题网站优化（bug记录）\ndate: 2020-03-13 15:27:31\ntoc: true\ntop: 101\ncategories: Blog\ntags: [icarus,hexo]\narticle-thumbnail: true\nthumbnail: /images/display.jpg\nkeywords: [Machine Learning, css, Word Embedding, CJ Sun, Caijun Sun, IOVI]\n---\n**记录我的网站目标及优化之路，感谢以下大佬的创作与开发（不分先后）：**\n\n<!-- more -->\n\n## Thanks 大佬\n\n- [ppoffice](https://github.com/ppoffice \"ppoffice\")\n\n- [Ray’s Blog](https://raycoder.me \"Ray's Blog\")\n\n- [dp2px](https://dp2px.com/ \"dp2px\")\n\n- [removeif](https://removeif.github.io/ \"removeif\")\n\n- [jitwxs](https://www.jitwxs.cn/ \"jitwxs\")\n\n- [imaegoo](https://www.imaegoo.com/ \"imaegoo\")\n\n- [alphalxy](https://www.alphalxy.com/ \"alphalxy\")\n\n- [Evan](https://nave.work/\"Evan\")\n\n- [zazdream](https://zazdream.com/)\n\n- [cxy35](https://www.cxy35.com/)\n\n- [Anne Wu](https://annewqx.top/)\n\n- [yafine](https://yafine-blog.cn/)\n\n## ToDo 计划 \n\n- [x] 粒子时钟（加强版）\n\n- [x] 文章页 双栏布局 /减少不必要的部件\n\n- [x] 自动刷新md内容方便预览\n\n- [x] 底部备案、文章版权、永久链接格式\n\n- [x] 黑夜模式\n\n- [x] 主页添加bio(一句话)\n\n- [x] 图片居中/相册间隙\n\n- [x] 友链页布局修改（三栏）\n\n- [ ] 关于页面内容更新(加音乐)\n\n- [ ] 主页添加部件 最新评论\n\n- [ ] 主页添加部件 添加推荐文章\n\n- [x] 增加页面 豆瓣电影\n\n- [x] 增加页面 豆瓣书单\n\n- [ ] ~~增加电子书阅读页面(gitbook)~~\n\n- [x] ~~增加网易云音乐页面~~\n\n- [ ] 关于页面加入时间线\n\n- [ ] 归档页添加文章贡献概览\n\n- [x] ~~置顶文章功能~~\n\n- [ ] ~~加密文章功能（鸡肋）~~\n\n- [ ] 文章列表评论数显示\n\n- [ ] ~~增加页面 碎碎念（个人吐槽、心情页）~~\n\n- [ ] ~~增加页面 留言墙（区）~~\n\n- [x] 增加相册页（包括美图展示）\n\n- [ ] ~~添加网盘~~\n\n- [ ] 增加体系页（思维导图）\n\n- [x] RSS订阅\n\n- [x] 增加个人导航页（工具、网站、影视等）\n\n- [x] 图像logo 更改 （适应黑夜模式）\n\n- [x] ~~评论管理~~\n\n- [x] 关注我改成公众号（公众号还未准备）**\n\n- [x] 网站运行时间\n\n- [ ] ~~pv/uv~~\n\n- [ ] ~~图片懒加载 （以及与相册的bug)~~\n\n## Bug 修复\n\n- [ ] 关注 Follow 弹出二维码在移动设备未在中间弹出\n\n- [x] 黑夜模式下 底部刷新变黑明显慢于其他部分\n\n- [x] night.js初次加载报Cannot read property 'toString' of null的问题\n\n- [x] 黑夜下valine 评论 代码格式形式白\n\n  \n\n## Display 布局\n\n- 三栏展示：Home 、Archives、Categories、Tags、Movies\n- 双栏展示： Post、\n- 单栏展示： About 、Gallery、Links\n- ~~纯静态/未渲染：Tricks :  navs(先不弄了)~~\n\n## Record 记录\n\n- `page.layout` 判断  `type`\n\n- 将主题所用的字体放到本地，弃用 `loli` CDN\n- 在黑夜模式作者imaegoo的帮助下解决 night.js 报错问题\n- 将相册图片放到了又拍云cdn 上了 图片资源放在又拍云 \n\n## Plan 期望\n\n- [ ] 音乐部件\n\n- [ ] 除文章页外不加载不必要插件\n\n- [x] 友链页整改\n\n  \n## Profile 文档\n- [hexo官方文档里对于变量的说明](https://hexo.io/zh-cn/docs/variables)\n\n- [hexo官方文档里对于辅助函数的说明](https://hexo.io/zh-cn/docs/helpers)\n\n- [ejs嵌入开发各个标签的含义](https://ejs.bootcss.com/)\n\n- [bulma框架中文文档](https://bulma.zcopy.site/documentation/)\n","slug":"Icarus-record","published":1,"updated":"2020-03-14T05:41:42.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt0f0000ysstd93n5fst","content":"<p><strong>记录我的网站目标及优化之路，感谢以下大佬的创作与开发（不分先后）：</strong></p>\n<a id=\"more\"></a>\n\n<h2 id=\"Thanks-大佬\"><a href=\"#Thanks-大佬\" class=\"headerlink\" title=\"Thanks 大佬\"></a>Thanks 大佬</h2><ul>\n<li><p><a href=\"https://github.com/ppoffice\" title=\"ppoffice\">ppoffice</a></p>\n</li>\n<li><p><a href=\"https://raycoder.me\" title=\"Ray&#39;s Blog\">Ray’s Blog</a></p>\n</li>\n<li><p><a href=\"https://dp2px.com/\" title=\"dp2px\">dp2px</a></p>\n</li>\n<li><p><a href=\"https://removeif.github.io/\" title=\"removeif\">removeif</a></p>\n</li>\n<li><p><a href=\"https://www.jitwxs.cn/\" title=\"jitwxs\">jitwxs</a></p>\n</li>\n<li><p><a href=\"https://www.imaegoo.com/\" title=\"imaegoo\">imaegoo</a></p>\n</li>\n<li><p><a href=\"https://www.alphalxy.com/\" title=\"alphalxy\">alphalxy</a></p>\n</li>\n<li><p><a href=\"https://nave.work/\"Evan\"\">Evan</a></p>\n</li>\n<li><p><a href=\"https://zazdream.com/\">zazdream</a></p>\n</li>\n<li><p><a href=\"https://www.cxy35.com/\">cxy35</a></p>\n</li>\n<li><p><a href=\"https://annewqx.top/\">Anne Wu</a></p>\n</li>\n<li><p><a href=\"https://yafine-blog.cn/\">yafine</a></p>\n</li>\n</ul>\n<h2 id=\"ToDo-计划\"><a href=\"#ToDo-计划\" class=\"headerlink\" title=\"ToDo 计划\"></a>ToDo 计划</h2><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>粒子时钟（加强版）</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>文章页 双栏布局 /减少不必要的部件</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>自动刷新md内容方便预览</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>底部备案、文章版权、永久链接格式</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>黑夜模式</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>主页添加bio(一句话)</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>图片居中/相册间隙</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>友链页布局修改（三栏）</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>关于页面内容更新(加音乐)</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>主页添加部件 最新评论</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>主页添加部件 添加推荐文章</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>增加页面 豆瓣电影</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>增加页面 豆瓣书单</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>增加电子书阅读页面(gitbook)</del></p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p><del>增加网易云音乐页面</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>关于页面加入时间线</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>归档页添加文章贡献概览</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p><del>置顶文章功能</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>加密文章功能（鸡肋）</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>文章列表评论数显示</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>增加页面 碎碎念（个人吐槽、心情页）</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>增加页面 留言墙（区）</del></p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>增加相册页（包括美图展示）</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>添加网盘</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>增加体系页（思维导图）</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>RSS订阅</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>增加个人导航页（工具、网站、影视等）</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>图像logo 更改 （适应黑夜模式）</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p><del>评论管理</del></p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>关注我改成公众号（公众号还未准备）**</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>网站运行时间</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>pv/uv</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>图片懒加载 （以及与相册的bug)</del></p>\n</li>\n</ul>\n<h2 id=\"Bug-修复\"><a href=\"#Bug-修复\" class=\"headerlink\" title=\"Bug 修复\"></a>Bug 修复</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> <p>关注 Follow 弹出二维码在移动设备未在中间弹出</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>黑夜模式下 底部刷新变黑明显慢于其他部分</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>night.js初次加载报Cannot read property ‘toString’ of null的问题</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>黑夜下valine 评论 代码格式形式白</p>\n</li>\n</ul>\n<h2 id=\"Display-布局\"><a href=\"#Display-布局\" class=\"headerlink\" title=\"Display 布局\"></a>Display 布局</h2><ul>\n<li>三栏展示：Home 、Archives、Categories、Tags、Movies</li>\n<li>双栏展示： Post、</li>\n<li>单栏展示： About 、Gallery、Links</li>\n<li><del>纯静态/未渲染：Tricks :  navs(先不弄了)</del></li>\n</ul>\n<h2 id=\"Record-记录\"><a href=\"#Record-记录\" class=\"headerlink\" title=\"Record 记录\"></a>Record 记录</h2><ul>\n<li><p><code>page.layout</code> 判断  <code>type</code></p>\n</li>\n<li><p>将主题所用的字体放到本地，弃用 <code>loli</code> CDN</p>\n</li>\n<li><p>在黑夜模式作者imaegoo的帮助下解决 night.js 报错问题</p>\n</li>\n<li><p>将相册图片放到了又拍云cdn 上了 图片资源放在又拍云 </p>\n</li>\n</ul>\n<h2 id=\"Plan-期望\"><a href=\"#Plan-期望\" class=\"headerlink\" title=\"Plan 期望\"></a>Plan 期望</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> <p>音乐部件</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>除文章页外不加载不必要插件</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>友链页整改</p>\n</li>\n</ul>\n<h2 id=\"Profile-文档\"><a href=\"#Profile-文档\" class=\"headerlink\" title=\"Profile 文档\"></a>Profile 文档</h2><ul>\n<li><p><a href=\"https://hexo.io/zh-cn/docs/variables\">hexo官方文档里对于变量的说明</a></p>\n</li>\n<li><p><a href=\"https://hexo.io/zh-cn/docs/helpers\">hexo官方文档里对于辅助函数的说明</a></p>\n</li>\n<li><p><a href=\"https://ejs.bootcss.com/\">ejs嵌入开发各个标签的含义</a></p>\n</li>\n<li><p><a href=\"https://bulma.zcopy.site/documentation/\">bulma框架中文文档</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><strong>记录我的网站目标及优化之路，感谢以下大佬的创作与开发（不分先后）：</strong></p>","more":"<h2 id=\"Thanks-大佬\"><a href=\"#Thanks-大佬\" class=\"headerlink\" title=\"Thanks 大佬\"></a>Thanks 大佬</h2><ul>\n<li><p><a href=\"https://github.com/ppoffice\" title=\"ppoffice\">ppoffice</a></p>\n</li>\n<li><p><a href=\"https://raycoder.me\" title=\"Ray&#39;s Blog\">Ray’s Blog</a></p>\n</li>\n<li><p><a href=\"https://dp2px.com/\" title=\"dp2px\">dp2px</a></p>\n</li>\n<li><p><a href=\"https://removeif.github.io/\" title=\"removeif\">removeif</a></p>\n</li>\n<li><p><a href=\"https://www.jitwxs.cn/\" title=\"jitwxs\">jitwxs</a></p>\n</li>\n<li><p><a href=\"https://www.imaegoo.com/\" title=\"imaegoo\">imaegoo</a></p>\n</li>\n<li><p><a href=\"https://www.alphalxy.com/\" title=\"alphalxy\">alphalxy</a></p>\n</li>\n<li><p><a href=\"https://nave.work/\"Evan\"\">Evan</a></p>\n</li>\n<li><p><a href=\"https://zazdream.com/\">zazdream</a></p>\n</li>\n<li><p><a href=\"https://www.cxy35.com/\">cxy35</a></p>\n</li>\n<li><p><a href=\"https://annewqx.top/\">Anne Wu</a></p>\n</li>\n<li><p><a href=\"https://yafine-blog.cn/\">yafine</a></p>\n</li>\n</ul>\n<h2 id=\"ToDo-计划\"><a href=\"#ToDo-计划\" class=\"headerlink\" title=\"ToDo 计划\"></a>ToDo 计划</h2><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>粒子时钟（加强版）</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>文章页 双栏布局 /减少不必要的部件</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>自动刷新md内容方便预览</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>底部备案、文章版权、永久链接格式</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>黑夜模式</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>主页添加bio(一句话)</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>图片居中/相册间隙</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>友链页布局修改（三栏）</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>关于页面内容更新(加音乐)</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>主页添加部件 最新评论</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>主页添加部件 添加推荐文章</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>增加页面 豆瓣电影</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>增加页面 豆瓣书单</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>增加电子书阅读页面(gitbook)</del></p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p><del>增加网易云音乐页面</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>关于页面加入时间线</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>归档页添加文章贡献概览</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p><del>置顶文章功能</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>加密文章功能（鸡肋）</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>文章列表评论数显示</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>增加页面 碎碎念（个人吐槽、心情页）</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>增加页面 留言墙（区）</del></p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>增加相册页（包括美图展示）</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>添加网盘</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>增加体系页（思维导图）</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>RSS订阅</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>增加个人导航页（工具、网站、影视等）</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>图像logo 更改 （适应黑夜模式）</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p><del>评论管理</del></p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>关注我改成公众号（公众号还未准备）**</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>网站运行时间</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>pv/uv</del></p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p><del>图片懒加载 （以及与相册的bug)</del></p>\n</li>\n</ul>\n<h2 id=\"Bug-修复\"><a href=\"#Bug-修复\" class=\"headerlink\" title=\"Bug 修复\"></a>Bug 修复</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> <p>关注 Follow 弹出二维码在移动设备未在中间弹出</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>黑夜模式下 底部刷新变黑明显慢于其他部分</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>night.js初次加载报Cannot read property ‘toString’ of null的问题</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>黑夜下valine 评论 代码格式形式白</p>\n</li>\n</ul>\n<h2 id=\"Display-布局\"><a href=\"#Display-布局\" class=\"headerlink\" title=\"Display 布局\"></a>Display 布局</h2><ul>\n<li>三栏展示：Home 、Archives、Categories、Tags、Movies</li>\n<li>双栏展示： Post、</li>\n<li>单栏展示： About 、Gallery、Links</li>\n<li><del>纯静态/未渲染：Tricks :  navs(先不弄了)</del></li>\n</ul>\n<h2 id=\"Record-记录\"><a href=\"#Record-记录\" class=\"headerlink\" title=\"Record 记录\"></a>Record 记录</h2><ul>\n<li><p><code>page.layout</code> 判断  <code>type</code></p>\n</li>\n<li><p>将主题所用的字体放到本地，弃用 <code>loli</code> CDN</p>\n</li>\n<li><p>在黑夜模式作者imaegoo的帮助下解决 night.js 报错问题</p>\n</li>\n<li><p>将相册图片放到了又拍云cdn 上了 图片资源放在又拍云 </p>\n</li>\n</ul>\n<h2 id=\"Plan-期望\"><a href=\"#Plan-期望\" class=\"headerlink\" title=\"Plan 期望\"></a>Plan 期望</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> <p>音乐部件</p>\n</li>\n<li><input disabled=\"\" type=\"checkbox\"> <p>除文章页外不加载不必要插件</p>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> <p>友链页整改</p>\n</li>\n</ul>\n<h2 id=\"Profile-文档\"><a href=\"#Profile-文档\" class=\"headerlink\" title=\"Profile 文档\"></a>Profile 文档</h2><ul>\n<li><p><a href=\"https://hexo.io/zh-cn/docs/variables\">hexo官方文档里对于变量的说明</a></p>\n</li>\n<li><p><a href=\"https://hexo.io/zh-cn/docs/helpers\">hexo官方文档里对于辅助函数的说明</a></p>\n</li>\n<li><p><a href=\"https://ejs.bootcss.com/\">ejs嵌入开发各个标签的含义</a></p>\n</li>\n<li><p><a href=\"https://bulma.zcopy.site/documentation/\">bulma框架中文文档</a></p>\n</li>\n</ul>"},{"title":"Cplex 编程方法(OPL)","toc":true,"top":100,"date":"2020-02-26T12:18:20.000Z","_content":"\n**OPL是ILOG团队为运筹学研究者定制的一种优化建模语言。**\n\n<!-- more -->\n\n\n\n","source":"_posts/Cplex_OPL-program.md","raw":"---\ntitle: Cplex 编程方法(OPL)\ntoc: true\ntop: 100\ndate: 2020-02-26 20:18:20\ncategories: OPL\ntags: [cplex]\n---\n\n**OPL是ILOG团队为运筹学研究者定制的一种优化建模语言。**\n\n<!-- more -->\n\n\n\n","slug":"Cplex_OPL-program","published":1,"updated":"2020-03-06T13:44:02.824Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt0p0002ysste02d2zse","content":"<p><strong>OPL是ILOG团队为运筹学研究者定制的一种优化建模语言。</strong></p>\n<a id=\"more\"></a>\n\n\n\n","site":{"data":{}},"excerpt":"<p><strong>OPL是ILOG团队为运筹学研究者定制的一种优化建模语言。</strong></p>","more":""},{"title":"Java SE 基础系列笔记 (2)","date":"2020-02-21T13:49:32.000Z","_content":"## 描述\n\n继承相关练习： 发红包案例\n\n<!-- more -->\n\n## 要求\n\n群主发普通红包。某群有多名成员，群主给成员发普通红包。普通红包的规则：\n\n1. 群主的一笔金额，从群主余额中扣除，平均分成n等份，让成员领取。\n2. 成员领取红包后，保存到成员余额中。\n\n请根据描述，完成案例中所有类的定义以及指定类之间的继承关系，并完成发红包的操作。\n\n## 实现\n\n```java\npackage com.demo01;\n\n/**\n * @ClassName: User\n * @Description: ToDo\n * @author: Aimer\n * @date: 2020/2/15  21:36\n * version: 1.0\n */\npublic class User {\n    private String name;\n    private  int money;\n\n    public User() {\n    }\n\n    public User(String name, int money) {\n        this.name = name;\n        this.money = money;\n    }\n\n    public void show(){\n        System.out.println(\"我是\"+ name + \",我有多少钱：\"+ money);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getMoney() {\n        return money;\n    }\n\n    public void setMoney(int money) {\n        this.money = money;\n    }\n}\n\n\n```\n\n```java\npackage com.demo01;\n\nimport java.util.ArrayList;\n\n/**\n * @ClassName: Manager\n * @Description: 群主类\n * @author: Aimer\n * @date: 2020/2/15  21:39\n * version: 1.0\n */\npublic class Manager extends User {\n    public Manager(){\n    }\n\n    public Manager(String name, int money) {\n        super(name, money);\n    }\n\n    //totalMoney 总共发的红包 count 为份数\n    public ArrayList<Integer> send(int totalMoney, int count){\n        //首先需要一个集合，用来存储若干个红包的金额\n        ArrayList<Integer> redList = new ArrayList<>();\n\n        //看下群主自己的钱够不够\n        int leftMoney = super.getMoney();//群主当前余额\n        if (totalMoney>leftMoney){\n            System.out.println(\"余额不足\");\n            return  redList;//空集合\n        }\n\n        //扣钱（包括将最后除不尽余下的钱加到集合最后一个里）\n        super.setMoney(leftMoney-totalMoney);\n        int avg = totalMoney/count;\n        int mod =totalMoney%count;\n        for (int i = 0; i < count-1; i++) {\n            redList.add(avg);\n        }\n        int last = avg+mod;//最后一个红包\n        redList.add(last);\n        return  redList;\n    }\n}\n\n```\n\n```java\npackage com.demo01;\nimport java.util.ArrayList;\nimport java.util.Random;\n\n/**\n * @ClassName: Member\n * @Description: 成员类\n * @author: Aimer\n * @date: 2020/2/15  21:42\n * version: 1.0\n */\npublic class Member extends User {\n    public Member() {\n    }\n\n    public Member(String name, int money) {\n        super(name, money);\n    }\n\n    public  void receive(ArrayList<Integer> list){\n        //从多个红包中随便取一个红包（一个集合中的索引值）\n        int index = new Random().nextInt(list.size());\n        //根据索引从集合中删除，得到红包\n        int delta = list.remove(index);\n        //当前成员自己本来有多少钱\n        int money = super.getMoney();\n        super.setMoney(money+delta);\n    }\n}\n```\n\n```java\npackage com.demo01;\n\nimport java.util.ArrayList;\n\n/**\n * @ClassName: LucyRed\n * @Description: 实现发红包案例\n * @author: Aimer\n * @date: 2020/2/15  21:44\n * version: 1.0\n */\npublic class LucyRed {\n    public static void main(String[] args) {\n        Manager manager = new Manager(\"群主\",100);\n        Member one = new Member(\"成员A\",0);\n        Member two = new Member(\"成员B\",0);\n        Member three = new Member(\"成员C\",0);\n// 打印初始红包金额\n        manager.show();\n        one.show();\n        two.show();\n        three.show();\n        System.out.println(\"================\");\n\n        //群主发红包啦\n        ArrayList<Integer> redList = manager.send(20,3);\n        //成员收红包\n        one.receive(redList);\n        two.receive(redList);\n        three.receive(redList);\n\n        manager.show();\n        one.show();\n        two.show();\n        three.show();\n    }\n}\n\n```\n\n## 运行\n\n![demo01luckred.png](https://i.loli.net/2020/02/16/ojdO5aGtEnYuNHI.png)\n\n","source":"_posts/JavaSE02.md","raw":"---\ntitle: Java SE 基础系列笔记 (2)\ndate: 2020-02-21 21:49:32\ntags: inherit\ncategories: Java\n---\n## 描述\n\n继承相关练习： 发红包案例\n\n<!-- more -->\n\n## 要求\n\n群主发普通红包。某群有多名成员，群主给成员发普通红包。普通红包的规则：\n\n1. 群主的一笔金额，从群主余额中扣除，平均分成n等份，让成员领取。\n2. 成员领取红包后，保存到成员余额中。\n\n请根据描述，完成案例中所有类的定义以及指定类之间的继承关系，并完成发红包的操作。\n\n## 实现\n\n```java\npackage com.demo01;\n\n/**\n * @ClassName: User\n * @Description: ToDo\n * @author: Aimer\n * @date: 2020/2/15  21:36\n * version: 1.0\n */\npublic class User {\n    private String name;\n    private  int money;\n\n    public User() {\n    }\n\n    public User(String name, int money) {\n        this.name = name;\n        this.money = money;\n    }\n\n    public void show(){\n        System.out.println(\"我是\"+ name + \",我有多少钱：\"+ money);\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getMoney() {\n        return money;\n    }\n\n    public void setMoney(int money) {\n        this.money = money;\n    }\n}\n\n\n```\n\n```java\npackage com.demo01;\n\nimport java.util.ArrayList;\n\n/**\n * @ClassName: Manager\n * @Description: 群主类\n * @author: Aimer\n * @date: 2020/2/15  21:39\n * version: 1.0\n */\npublic class Manager extends User {\n    public Manager(){\n    }\n\n    public Manager(String name, int money) {\n        super(name, money);\n    }\n\n    //totalMoney 总共发的红包 count 为份数\n    public ArrayList<Integer> send(int totalMoney, int count){\n        //首先需要一个集合，用来存储若干个红包的金额\n        ArrayList<Integer> redList = new ArrayList<>();\n\n        //看下群主自己的钱够不够\n        int leftMoney = super.getMoney();//群主当前余额\n        if (totalMoney>leftMoney){\n            System.out.println(\"余额不足\");\n            return  redList;//空集合\n        }\n\n        //扣钱（包括将最后除不尽余下的钱加到集合最后一个里）\n        super.setMoney(leftMoney-totalMoney);\n        int avg = totalMoney/count;\n        int mod =totalMoney%count;\n        for (int i = 0; i < count-1; i++) {\n            redList.add(avg);\n        }\n        int last = avg+mod;//最后一个红包\n        redList.add(last);\n        return  redList;\n    }\n}\n\n```\n\n```java\npackage com.demo01;\nimport java.util.ArrayList;\nimport java.util.Random;\n\n/**\n * @ClassName: Member\n * @Description: 成员类\n * @author: Aimer\n * @date: 2020/2/15  21:42\n * version: 1.0\n */\npublic class Member extends User {\n    public Member() {\n    }\n\n    public Member(String name, int money) {\n        super(name, money);\n    }\n\n    public  void receive(ArrayList<Integer> list){\n        //从多个红包中随便取一个红包（一个集合中的索引值）\n        int index = new Random().nextInt(list.size());\n        //根据索引从集合中删除，得到红包\n        int delta = list.remove(index);\n        //当前成员自己本来有多少钱\n        int money = super.getMoney();\n        super.setMoney(money+delta);\n    }\n}\n```\n\n```java\npackage com.demo01;\n\nimport java.util.ArrayList;\n\n/**\n * @ClassName: LucyRed\n * @Description: 实现发红包案例\n * @author: Aimer\n * @date: 2020/2/15  21:44\n * version: 1.0\n */\npublic class LucyRed {\n    public static void main(String[] args) {\n        Manager manager = new Manager(\"群主\",100);\n        Member one = new Member(\"成员A\",0);\n        Member two = new Member(\"成员B\",0);\n        Member three = new Member(\"成员C\",0);\n// 打印初始红包金额\n        manager.show();\n        one.show();\n        two.show();\n        three.show();\n        System.out.println(\"================\");\n\n        //群主发红包啦\n        ArrayList<Integer> redList = manager.send(20,3);\n        //成员收红包\n        one.receive(redList);\n        two.receive(redList);\n        three.receive(redList);\n\n        manager.show();\n        one.show();\n        two.show();\n        three.show();\n    }\n}\n\n```\n\n## 运行\n\n![demo01luckred.png](https://i.loli.net/2020/02/16/ojdO5aGtEnYuNHI.png)\n\n","slug":"JavaSE02","published":1,"updated":"2020-03-06T13:48:43.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt0v0006ysst5vs8205m","content":"<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>继承相关练习： 发红包案例</p>\n<a id=\"more\"></a>\n\n<h2 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h2><p>群主发普通红包。某群有多名成员，群主给成员发普通红包。普通红包的规则：</p>\n<ol>\n<li>群主的一笔金额，从群主余额中扣除，平均分成n等份，让成员领取。</li>\n<li>成员领取红包后，保存到成员余额中。</li>\n</ol>\n<p>请根据描述，完成案例中所有类的定义以及指定类之间的继承关系，并完成发红包的操作。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: User</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: ToDo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/15  21:36</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"keyword\">int</span> money;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> money)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.money = money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"我是\"</span>+ name + <span class=\"string\">\",我有多少钱：\"</span>+ money);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getMoney</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMoney</span><span class=\"params\">(<span class=\"keyword\">int</span> money)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.money = money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Manager</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 群主类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/15  21:39</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Manager</span> <span class=\"keyword\">extends</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Manager</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Manager</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> money)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name, money);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//totalMoney 总共发的红包 count 为份数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ArrayList&lt;Integer&gt; <span class=\"title\">send</span><span class=\"params\">(<span class=\"keyword\">int</span> totalMoney, <span class=\"keyword\">int</span> count)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//首先需要一个集合，用来存储若干个红包的金额</span></span><br><span class=\"line\">        ArrayList&lt;Integer&gt; redList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//看下群主自己的钱够不够</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> leftMoney = <span class=\"keyword\">super</span>.getMoney();<span class=\"comment\">//群主当前余额</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (totalMoney&gt;leftMoney)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"余额不足\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>  redList;<span class=\"comment\">//空集合</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//扣钱（包括将最后除不尽余下的钱加到集合最后一个里）</span></span><br><span class=\"line\">        <span class=\"keyword\">super</span>.setMoney(leftMoney-totalMoney);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> avg = totalMoney/count;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mod =totalMoney%count;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; count-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            redList.add(avg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> last = avg+mod;<span class=\"comment\">//最后一个红包</span></span><br><span class=\"line\">        redList.add(last);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  redList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo01;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Member</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 成员类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/15  21:42</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Member</span> <span class=\"keyword\">extends</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Member</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Member</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> money)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name, money);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">receive</span><span class=\"params\">(ArrayList&lt;Integer&gt; list)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//从多个红包中随便取一个红包（一个集合中的索引值）</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> index = <span class=\"keyword\">new</span> Random().nextInt(list.size());</span><br><span class=\"line\">        <span class=\"comment\">//根据索引从集合中删除，得到红包</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> delta = list.remove(index);</span><br><span class=\"line\">        <span class=\"comment\">//当前成员自己本来有多少钱</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> money = <span class=\"keyword\">super</span>.getMoney();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.setMoney(money+delta);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: LucyRed</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 实现发红包案例</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/15  21:44</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LucyRed</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Manager manager = <span class=\"keyword\">new</span> Manager(<span class=\"string\">\"群主\"</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">        Member one = <span class=\"keyword\">new</span> Member(<span class=\"string\">\"成员A\"</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        Member two = <span class=\"keyword\">new</span> Member(<span class=\"string\">\"成员B\"</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        Member three = <span class=\"keyword\">new</span> Member(<span class=\"string\">\"成员C\"</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">// 打印初始红包金额</span></span><br><span class=\"line\">        manager.show();</span><br><span class=\"line\">        one.show();</span><br><span class=\"line\">        two.show();</span><br><span class=\"line\">        three.show();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"================\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//群主发红包啦</span></span><br><span class=\"line\">        ArrayList&lt;Integer&gt; redList = manager.send(<span class=\"number\">20</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"comment\">//成员收红包</span></span><br><span class=\"line\">        one.receive(redList);</span><br><span class=\"line\">        two.receive(redList);</span><br><span class=\"line\">        three.receive(redList);</span><br><span class=\"line\"></span><br><span class=\"line\">        manager.show();</span><br><span class=\"line\">        one.show();</span><br><span class=\"line\">        two.show();</span><br><span class=\"line\">        three.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p><img src=\"https://i.loli.net/2020/02/16/ojdO5aGtEnYuNHI.png\" alt=\"demo01luckred.png\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>继承相关练习： 发红包案例</p>","more":"<h2 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h2><p>群主发普通红包。某群有多名成员，群主给成员发普通红包。普通红包的规则：</p>\n<ol>\n<li>群主的一笔金额，从群主余额中扣除，平均分成n等份，让成员领取。</li>\n<li>成员领取红包后，保存到成员余额中。</li>\n</ol>\n<p>请根据描述，完成案例中所有类的定义以及指定类之间的继承关系，并完成发红包的操作。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: User</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: ToDo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/15  21:36</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"keyword\">int</span> money;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> money)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.money = money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"我是\"</span>+ name + <span class=\"string\">\",我有多少钱：\"</span>+ money);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getMoney</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMoney</span><span class=\"params\">(<span class=\"keyword\">int</span> money)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.money = money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Manager</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 群主类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/15  21:39</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Manager</span> <span class=\"keyword\">extends</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Manager</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Manager</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> money)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name, money);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//totalMoney 总共发的红包 count 为份数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ArrayList&lt;Integer&gt; <span class=\"title\">send</span><span class=\"params\">(<span class=\"keyword\">int</span> totalMoney, <span class=\"keyword\">int</span> count)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//首先需要一个集合，用来存储若干个红包的金额</span></span><br><span class=\"line\">        ArrayList&lt;Integer&gt; redList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//看下群主自己的钱够不够</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> leftMoney = <span class=\"keyword\">super</span>.getMoney();<span class=\"comment\">//群主当前余额</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (totalMoney&gt;leftMoney)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"余额不足\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>  redList;<span class=\"comment\">//空集合</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//扣钱（包括将最后除不尽余下的钱加到集合最后一个里）</span></span><br><span class=\"line\">        <span class=\"keyword\">super</span>.setMoney(leftMoney-totalMoney);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> avg = totalMoney/count;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mod =totalMoney%count;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; count-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            redList.add(avg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> last = avg+mod;<span class=\"comment\">//最后一个红包</span></span><br><span class=\"line\">        redList.add(last);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  redList;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo01;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Member</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 成员类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/15  21:42</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Member</span> <span class=\"keyword\">extends</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Member</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Member</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> money)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name, money);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">receive</span><span class=\"params\">(ArrayList&lt;Integer&gt; list)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//从多个红包中随便取一个红包（一个集合中的索引值）</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> index = <span class=\"keyword\">new</span> Random().nextInt(list.size());</span><br><span class=\"line\">        <span class=\"comment\">//根据索引从集合中删除，得到红包</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> delta = list.remove(index);</span><br><span class=\"line\">        <span class=\"comment\">//当前成员自己本来有多少钱</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> money = <span class=\"keyword\">super</span>.getMoney();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.setMoney(money+delta);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: LucyRed</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 实现发红包案例</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/15  21:44</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LucyRed</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Manager manager = <span class=\"keyword\">new</span> Manager(<span class=\"string\">\"群主\"</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">        Member one = <span class=\"keyword\">new</span> Member(<span class=\"string\">\"成员A\"</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        Member two = <span class=\"keyword\">new</span> Member(<span class=\"string\">\"成员B\"</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        Member three = <span class=\"keyword\">new</span> Member(<span class=\"string\">\"成员C\"</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">// 打印初始红包金额</span></span><br><span class=\"line\">        manager.show();</span><br><span class=\"line\">        one.show();</span><br><span class=\"line\">        two.show();</span><br><span class=\"line\">        three.show();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"================\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//群主发红包啦</span></span><br><span class=\"line\">        ArrayList&lt;Integer&gt; redList = manager.send(<span class=\"number\">20</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"comment\">//成员收红包</span></span><br><span class=\"line\">        one.receive(redList);</span><br><span class=\"line\">        two.receive(redList);</span><br><span class=\"line\">        three.receive(redList);</span><br><span class=\"line\"></span><br><span class=\"line\">        manager.show();</span><br><span class=\"line\">        one.show();</span><br><span class=\"line\">        two.show();</span><br><span class=\"line\">        three.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p><img src=\"https://i.loli.net/2020/02/16/ojdO5aGtEnYuNHI.png\" alt=\"demo01luckred.png\"></p>"},{"title":"Java SE 基础系列笔记 (1)","date":"2020-02-21T13:05:36.000Z","toc":true,"article-thumbnail":false,"_content":"开启 JAVA 学习之旅\n<!-- more -->\n\n## IDEA常用快捷键\n\n| 快捷键         | 功能                                         |\n| :------------- | -------------------------------------------- |\n| Alt+4          | 打开程序运行窗口                             |\n| Alt+Enter      | 导入包，自动修正代码                         |\n| Ctrl+Y         | 删除光标所在行                               |\n| Ctrl+D         | 复制光标所在行的内容到下一行                 |\n| Ctrl+Alt+L     | 格式化代码                                   |\n| Ctrl+/         | 单行注释，再按取消注释                       |\n| Ctrl+Shift+/   | 选中代码注释，多行注释 ，再按取消注释        |\n| Alt+Ins        | 自动生成代码，toString，get，set等方法       |\n| Alt+Shift+上下 | 移动当前代码行                               |\n| Shift+f6       | 重构-重命名 (包、类、方法、变量、甚至注释等) |\n\n## IDEA代码自动补全\n\n| 代码缩写    | 代码补全                                        |\n| ----------- | ----------------------------------------------- |\n| psvm        | public static void main(String[] args) {      } |\n| 循环数.fori | for (int i = 0; i < 循环数; i++) {      }       |\n| sout        | System.out.println();                           |\n\n## 基础语法小记\n\n1. 成员变量是直接定义在类中的，在成员方法外边。\n2. 成员方法不要写 static 关键字。\n3. 当一个对象作为参数，传递到方法当中时，传递的是对象的地址值。\n4. 对于基本类型中的 boolean 值，Getter 方法一定要写成 isXxx 的形式，而 SetXxx 规则不变。\n5. 对于 Private 成员变量，通过类成员方法间接访问。\n6. 当方法的局部变量和类的成员变量重名的时候，就近优先使用局部变量。如需访问类成员变量，使用 this.成员变量名。\n7. 通过堆调用的方法，谁就是 this 。\n8. Java Bean （满足四要求）\n9. 通过 super.成员变量名/方法  访问父类成员变量/方法。\n10. 重写/覆盖/覆写（Override)  与重载（Overload）区别在于参数列表是否一样。\n11. 可以通过写 @Override 来安全检测方法是不是有效的正确覆盖重写。\n12. Overrid (重写)注意事项：子类方法的返回值必须小于等于父类方法的返回值范围。【Object类是所有类的公共最高父类】子类方法的权限必须大于等于父类方法的权限修饰符。【public > protected > (default) >private】\n13. 继承中，子类构造方法默认隐含 “super()\"调用，子类对象先调用父类构造，后执行子类构造。子类构造可以通过super关键字调用父类重载构造（必须是子类构造方法的第一个且唯一的语句)。\n14. super 和 this 两种构造调用，不能同时使用。\n15. 使用抽象类和抽象方法：不能直接创建 new 抽象类对象；必须用一个子类来继承抽象父类；子类必须覆盖重写抽象父类当中的抽象方法（去掉 abstract 关键字，补上方法体大括号）。\n16. 在子类 extend 关键字上，通过 alt+ Enter ,实现抽象类方法的覆写。\n17. 使用 Alt + Insert 调用方法。【注意：很多电脑F12和Insert是同一个键，所以 Alt+Insert 和 Alt+F12 是冲突的，当我们按下 Alt+Insert 的时候其实触动的是 Alt+F12，大家应该知道想要触动Insert得用到 Fn(功能键)+Insert，所以想要触动 Alt+Insert 就得是 Fn(功能键)+Alt+Insert 才行】","source":"_posts/JavaSE01.md","raw":"---\ntitle: Java SE 基础系列笔记 (1)\ndate: 2020-02-21 21:05:36\ntags: basic\ntoc: true\ncategories: Java\narticle-thumbnail: false\n---\n开启 JAVA 学习之旅\n<!-- more -->\n\n## IDEA常用快捷键\n\n| 快捷键         | 功能                                         |\n| :------------- | -------------------------------------------- |\n| Alt+4          | 打开程序运行窗口                             |\n| Alt+Enter      | 导入包，自动修正代码                         |\n| Ctrl+Y         | 删除光标所在行                               |\n| Ctrl+D         | 复制光标所在行的内容到下一行                 |\n| Ctrl+Alt+L     | 格式化代码                                   |\n| Ctrl+/         | 单行注释，再按取消注释                       |\n| Ctrl+Shift+/   | 选中代码注释，多行注释 ，再按取消注释        |\n| Alt+Ins        | 自动生成代码，toString，get，set等方法       |\n| Alt+Shift+上下 | 移动当前代码行                               |\n| Shift+f6       | 重构-重命名 (包、类、方法、变量、甚至注释等) |\n\n## IDEA代码自动补全\n\n| 代码缩写    | 代码补全                                        |\n| ----------- | ----------------------------------------------- |\n| psvm        | public static void main(String[] args) {      } |\n| 循环数.fori | for (int i = 0; i < 循环数; i++) {      }       |\n| sout        | System.out.println();                           |\n\n## 基础语法小记\n\n1. 成员变量是直接定义在类中的，在成员方法外边。\n2. 成员方法不要写 static 关键字。\n3. 当一个对象作为参数，传递到方法当中时，传递的是对象的地址值。\n4. 对于基本类型中的 boolean 值，Getter 方法一定要写成 isXxx 的形式，而 SetXxx 规则不变。\n5. 对于 Private 成员变量，通过类成员方法间接访问。\n6. 当方法的局部变量和类的成员变量重名的时候，就近优先使用局部变量。如需访问类成员变量，使用 this.成员变量名。\n7. 通过堆调用的方法，谁就是 this 。\n8. Java Bean （满足四要求）\n9. 通过 super.成员变量名/方法  访问父类成员变量/方法。\n10. 重写/覆盖/覆写（Override)  与重载（Overload）区别在于参数列表是否一样。\n11. 可以通过写 @Override 来安全检测方法是不是有效的正确覆盖重写。\n12. Overrid (重写)注意事项：子类方法的返回值必须小于等于父类方法的返回值范围。【Object类是所有类的公共最高父类】子类方法的权限必须大于等于父类方法的权限修饰符。【public > protected > (default) >private】\n13. 继承中，子类构造方法默认隐含 “super()\"调用，子类对象先调用父类构造，后执行子类构造。子类构造可以通过super关键字调用父类重载构造（必须是子类构造方法的第一个且唯一的语句)。\n14. super 和 this 两种构造调用，不能同时使用。\n15. 使用抽象类和抽象方法：不能直接创建 new 抽象类对象；必须用一个子类来继承抽象父类；子类必须覆盖重写抽象父类当中的抽象方法（去掉 abstract 关键字，补上方法体大括号）。\n16. 在子类 extend 关键字上，通过 alt+ Enter ,实现抽象类方法的覆写。\n17. 使用 Alt + Insert 调用方法。【注意：很多电脑F12和Insert是同一个键，所以 Alt+Insert 和 Alt+F12 是冲突的，当我们按下 Alt+Insert 的时候其实触动的是 Alt+F12，大家应该知道想要触动Insert得用到 Fn(功能键)+Insert，所以想要触动 Alt+Insert 就得是 Fn(功能键)+Alt+Insert 才行】","slug":"JavaSE01","published":1,"updated":"2020-03-06T13:58:28.637Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt0x0008ysst2ios5jg4","content":"<p>开启 JAVA 学习之旅</p>\n<a id=\"more\"></a>\n\n<h2 id=\"IDEA常用快捷键\"><a href=\"#IDEA常用快捷键\" class=\"headerlink\" title=\"IDEA常用快捷键\"></a>IDEA常用快捷键</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Alt+4</td>\n<td>打开程序运行窗口</td>\n</tr>\n<tr>\n<td align=\"left\">Alt+Enter</td>\n<td>导入包，自动修正代码</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+Y</td>\n<td>删除光标所在行</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+D</td>\n<td>复制光标所在行的内容到下一行</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+Alt+L</td>\n<td>格式化代码</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+/</td>\n<td>单行注释，再按取消注释</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+Shift+/</td>\n<td>选中代码注释，多行注释 ，再按取消注释</td>\n</tr>\n<tr>\n<td align=\"left\">Alt+Ins</td>\n<td>自动生成代码，toString，get，set等方法</td>\n</tr>\n<tr>\n<td align=\"left\">Alt+Shift+上下</td>\n<td>移动当前代码行</td>\n</tr>\n<tr>\n<td align=\"left\">Shift+f6</td>\n<td>重构-重命名 (包、类、方法、变量、甚至注释等)</td>\n</tr>\n</tbody></table>\n<h2 id=\"IDEA代码自动补全\"><a href=\"#IDEA代码自动补全\" class=\"headerlink\" title=\"IDEA代码自动补全\"></a>IDEA代码自动补全</h2><table>\n<thead>\n<tr>\n<th>代码缩写</th>\n<th>代码补全</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>psvm</td>\n<td>public static void main(String[] args) {      }</td>\n</tr>\n<tr>\n<td>循环数.fori</td>\n<td>for (int i = 0; i &lt; 循环数; i++) {      }</td>\n</tr>\n<tr>\n<td>sout</td>\n<td>System.out.println();</td>\n</tr>\n</tbody></table>\n<h2 id=\"基础语法小记\"><a href=\"#基础语法小记\" class=\"headerlink\" title=\"基础语法小记\"></a>基础语法小记</h2><ol>\n<li>成员变量是直接定义在类中的，在成员方法外边。</li>\n<li>成员方法不要写 static 关键字。</li>\n<li>当一个对象作为参数，传递到方法当中时，传递的是对象的地址值。</li>\n<li>对于基本类型中的 boolean 值，Getter 方法一定要写成 isXxx 的形式，而 SetXxx 规则不变。</li>\n<li>对于 Private 成员变量，通过类成员方法间接访问。</li>\n<li>当方法的局部变量和类的成员变量重名的时候，就近优先使用局部变量。如需访问类成员变量，使用 this.成员变量名。</li>\n<li>通过堆调用的方法，谁就是 this 。</li>\n<li>Java Bean （满足四要求）</li>\n<li>通过 super.成员变量名/方法  访问父类成员变量/方法。</li>\n<li>重写/覆盖/覆写（Override)  与重载（Overload）区别在于参数列表是否一样。</li>\n<li>可以通过写 @Override 来安全检测方法是不是有效的正确覆盖重写。</li>\n<li>Overrid (重写)注意事项：子类方法的返回值必须小于等于父类方法的返回值范围。【Object类是所有类的公共最高父类】子类方法的权限必须大于等于父类方法的权限修饰符。【public &gt; protected &gt; (default) &gt;private】</li>\n<li>继承中，子类构造方法默认隐含 “super()”调用，子类对象先调用父类构造，后执行子类构造。子类构造可以通过super关键字调用父类重载构造（必须是子类构造方法的第一个且唯一的语句)。</li>\n<li>super 和 this 两种构造调用，不能同时使用。</li>\n<li>使用抽象类和抽象方法：不能直接创建 new 抽象类对象；必须用一个子类来继承抽象父类；子类必须覆盖重写抽象父类当中的抽象方法（去掉 abstract 关键字，补上方法体大括号）。</li>\n<li>在子类 extend 关键字上，通过 alt+ Enter ,实现抽象类方法的覆写。</li>\n<li>使用 Alt + Insert 调用方法。【注意：很多电脑F12和Insert是同一个键，所以 Alt+Insert 和 Alt+F12 是冲突的，当我们按下 Alt+Insert 的时候其实触动的是 Alt+F12，大家应该知道想要触动Insert得用到 Fn(功能键)+Insert，所以想要触动 Alt+Insert 就得是 Fn(功能键)+Alt+Insert 才行】</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>开启 JAVA 学习之旅</p>","more":"<h2 id=\"IDEA常用快捷键\"><a href=\"#IDEA常用快捷键\" class=\"headerlink\" title=\"IDEA常用快捷键\"></a>IDEA常用快捷键</h2><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Alt+4</td>\n<td>打开程序运行窗口</td>\n</tr>\n<tr>\n<td align=\"left\">Alt+Enter</td>\n<td>导入包，自动修正代码</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+Y</td>\n<td>删除光标所在行</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+D</td>\n<td>复制光标所在行的内容到下一行</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+Alt+L</td>\n<td>格式化代码</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+/</td>\n<td>单行注释，再按取消注释</td>\n</tr>\n<tr>\n<td align=\"left\">Ctrl+Shift+/</td>\n<td>选中代码注释，多行注释 ，再按取消注释</td>\n</tr>\n<tr>\n<td align=\"left\">Alt+Ins</td>\n<td>自动生成代码，toString，get，set等方法</td>\n</tr>\n<tr>\n<td align=\"left\">Alt+Shift+上下</td>\n<td>移动当前代码行</td>\n</tr>\n<tr>\n<td align=\"left\">Shift+f6</td>\n<td>重构-重命名 (包、类、方法、变量、甚至注释等)</td>\n</tr>\n</tbody></table>\n<h2 id=\"IDEA代码自动补全\"><a href=\"#IDEA代码自动补全\" class=\"headerlink\" title=\"IDEA代码自动补全\"></a>IDEA代码自动补全</h2><table>\n<thead>\n<tr>\n<th>代码缩写</th>\n<th>代码补全</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>psvm</td>\n<td>public static void main(String[] args) {      }</td>\n</tr>\n<tr>\n<td>循环数.fori</td>\n<td>for (int i = 0; i &lt; 循环数; i++) {      }</td>\n</tr>\n<tr>\n<td>sout</td>\n<td>System.out.println();</td>\n</tr>\n</tbody></table>\n<h2 id=\"基础语法小记\"><a href=\"#基础语法小记\" class=\"headerlink\" title=\"基础语法小记\"></a>基础语法小记</h2><ol>\n<li>成员变量是直接定义在类中的，在成员方法外边。</li>\n<li>成员方法不要写 static 关键字。</li>\n<li>当一个对象作为参数，传递到方法当中时，传递的是对象的地址值。</li>\n<li>对于基本类型中的 boolean 值，Getter 方法一定要写成 isXxx 的形式，而 SetXxx 规则不变。</li>\n<li>对于 Private 成员变量，通过类成员方法间接访问。</li>\n<li>当方法的局部变量和类的成员变量重名的时候，就近优先使用局部变量。如需访问类成员变量，使用 this.成员变量名。</li>\n<li>通过堆调用的方法，谁就是 this 。</li>\n<li>Java Bean （满足四要求）</li>\n<li>通过 super.成员变量名/方法  访问父类成员变量/方法。</li>\n<li>重写/覆盖/覆写（Override)  与重载（Overload）区别在于参数列表是否一样。</li>\n<li>可以通过写 @Override 来安全检测方法是不是有效的正确覆盖重写。</li>\n<li>Overrid (重写)注意事项：子类方法的返回值必须小于等于父类方法的返回值范围。【Object类是所有类的公共最高父类】子类方法的权限必须大于等于父类方法的权限修饰符。【public &gt; protected &gt; (default) &gt;private】</li>\n<li>继承中，子类构造方法默认隐含 “super()”调用，子类对象先调用父类构造，后执行子类构造。子类构造可以通过super关键字调用父类重载构造（必须是子类构造方法的第一个且唯一的语句)。</li>\n<li>super 和 this 两种构造调用，不能同时使用。</li>\n<li>使用抽象类和抽象方法：不能直接创建 new 抽象类对象；必须用一个子类来继承抽象父类；子类必须覆盖重写抽象父类当中的抽象方法（去掉 abstract 关键字，补上方法体大括号）。</li>\n<li>在子类 extend 关键字上，通过 alt+ Enter ,实现抽象类方法的覆写。</li>\n<li>使用 Alt + Insert 调用方法。【注意：很多电脑F12和Insert是同一个键，所以 Alt+Insert 和 Alt+F12 是冲突的，当我们按下 Alt+Insert 的时候其实触动的是 Alt+F12，大家应该知道想要触动Insert得用到 Fn(功能键)+Insert，所以想要触动 Alt+Insert 就得是 Fn(功能键)+Alt+Insert 才行】</li>\n</ol>"},{"title":"Java SE 基础系列笔记 (4)","date":"2020-02-21T14:02:59.000Z","_content":"\nJAVA 接口学习\n\n<!-- more -->\n\n## 接口方法定义\n\n```java\npackage com.demo02;\n// 接口是多个类的公共规范\n// Java7 中接口中可包含常量、抽象方法\n// Java8 中额外可包含默认方法、静态方法\n// Java9 中额外可包含私有方法\n// 私有方法包括普通私有方法和静态私有方法\n// 前者解决多个默认方法之间重复代码问题(接口中关键字为 private )\n// 后者解决多个静态方法之间重复代码问题(接口中关键字为 private  static)\n// 接口中的共有方法不应该让实现类使用（Java8 无法展示，代码略）\n// 接口中的常量要使用大写，用下划线分隔且必须赋值关键字\n\npublic interface MyInterface {\n    //常量\n    public  static final  String  NUM_OF_CLASS = \"接口常量执行\";//public static final 可以省略\n\n    // 抽象方法\n    public abstract void AbsMethod01();// public abstract 可不写\n    void AbsMethod02();\n    \n    // 默认方法\n    public default void DefalutMethod01(){\n        System.out.println(\"默认方法01执行\");\n    }\n    public default void DefalutMethod02(){\n        System.out.println(\"默认方法02执行\");\n    }\n\n    // 静态方法\n    public static  void StaticMethod(){\n        System.out.println(\"静态方法不能通过实现类调用\");\n    }\n}\n```\n\n\n\n## 接口方法实现\n\n```java\npackage com.demo02;\n\n// 接口的实现类\n\n// 接口不能直接使用，必须有一个实现类来实现该接口\n// 接口的实现类必须覆盖重写（实现）接口中所有的抽象方法\n\n// 注意事项：如果实现类并没有覆盖重写接口中所有的抽象方法，那么这个实现类自己就必须定义为抽象类（Abstract)\n// 注意事项：不能通过接口实现类的对象来调用接口当中的静态方法，只能通过接口名称调用\n\npublic class InterfaceImp implements MyInterface {\n    @Override\n    public void AbsMethod01() {\n        System.out.println(\"接口的第一个方法执行\");\n    }\n    @Override\n    public void AbsMethod02() {\n        System.out.println(\"接口的第二个方法执行\");\n    }\n    //默认方法01覆写，02未覆写\n    @Override\n    public void DefalutMethod01() {\n        System.out.println(\"覆写了接口01的默认方法\");\n    }\n}\n\n```\n\n\n\n```java\npackage com.demo02;\n\n/**\n * @ClassName: InterfaceUse\n * @Description: 接口实现\n * @author: Aimer\n * @date: 2020/2/16  15:02\n * version: 1.0\n */\npublic class InterfaceUse {\n    public static void main(String[] args) {\n        InterfaceImp IImp = new InterfaceImp();\n        IImp.AbsMethod01();\n        IImp.AbsMethod02();\n        System.out.println(\"==========\");\n\n        //如果接口实现类没有覆写接口的默认方法，将使用接口的默认方法\n        IImp.DefalutMethod01();\n        IImp.DefalutMethod02();\n\n        // 接口静态方法调用\n        MyInterface.StaticMethod(); //只能用接口名.方法调用\n\n        //常量调用\n        System.out.println(MyInterface.NUM_OF_CLASS);\n    }\n}\n```\n\n## 接口方法运行\n\n![Interface.png](https://i.loli.net/2020/02/16/ypJ54SgKMXdezVN.png)\n\n## 接口内容小结\n\n**1.成员变量其实是常量，格式：** \n\n`[public] [static] [final] 数据类型 常量名称 = 数据值;`\n\n**注意：常量必须进行赋值，而且一旦赋值不能改变。常量名称完全大写，用下划线进行分隔**\n\n**2.接口中最重要的就是抽象方法，格式：** \n\n`[public] [abstract] 返回值类型 方法名称(参数列表);`\n\n**注意：实现类必须覆盖重写接口所有的抽象方法，除非实现类是抽象类。**\n　\n\n**3.从Java 8开始，接口里允许定义默认方法，格式：**\n\n`[public] default 返回值类型 方法名称(参数列表) { 方法体 }`\n\n**注意：默认方法也可以被覆盖重写**。\n　\n\n**4.从Java 8开始，接口里允许定义静态方法，格式：**\n\n`[public] static 返回值类型 方法名称(参数列表) { 方法体 }`\n\n**注意：应该通过接口名称进行调用，不能通过实现类对象调用接口静态方法**。\n　\n**5.从Java 9开始，接口里允许定义私有方法，格式：**\n\n**普通私有方法**：`private 返回值类型 方法名称(参数列表) { 方法体 }`\n\n**静态私有方法**：`private static 返回值类型 方法名称(参数列表) { 方法体 }`\n\n**注意：private的方法只有接口自己才能调用，不能被实现类或别人使用。**\n\n## 实现多个接口\n\n\n`public class MyInterfaceImpl implements MyInterfaceA, MyInterfaceB{}`\n\n```java\n一个类可以同时实现多个接口，但直接父类是唯一的\n接口没有静态代码块后者构造方法\n如果实现类所实现的多个接口当中，存在重复的抽象方法，那么只需要覆盖重写一次即可\n如果实现类没有覆盖重写所有接口当中的所有抽象方法，那么实现类就必须是一个抽象类\n如果实现类所实现的多个接口当中，存在重复的默认方法，那么实现类一定要对冲突的默认方法进行覆盖重写\n一个类如果直接父类当中的方法，和接口当中的默认方法产生了冲突，优先用父类当中的方法\n接口与接口之间是多继承的\n多个父接口当中的默认方法如果重复，那么子接口必须进行默认方法的覆盖重写，【而且带着default关键字】\n```\n\n","source":"_posts/JavaSE04.md","raw":"---\ntitle: Java SE 基础系列笔记 (4)\ndate: 2020-02-21 22:02:59\ntags: interface\ncategories: Java\n---\n\nJAVA 接口学习\n\n<!-- more -->\n\n## 接口方法定义\n\n```java\npackage com.demo02;\n// 接口是多个类的公共规范\n// Java7 中接口中可包含常量、抽象方法\n// Java8 中额外可包含默认方法、静态方法\n// Java9 中额外可包含私有方法\n// 私有方法包括普通私有方法和静态私有方法\n// 前者解决多个默认方法之间重复代码问题(接口中关键字为 private )\n// 后者解决多个静态方法之间重复代码问题(接口中关键字为 private  static)\n// 接口中的共有方法不应该让实现类使用（Java8 无法展示，代码略）\n// 接口中的常量要使用大写，用下划线分隔且必须赋值关键字\n\npublic interface MyInterface {\n    //常量\n    public  static final  String  NUM_OF_CLASS = \"接口常量执行\";//public static final 可以省略\n\n    // 抽象方法\n    public abstract void AbsMethod01();// public abstract 可不写\n    void AbsMethod02();\n    \n    // 默认方法\n    public default void DefalutMethod01(){\n        System.out.println(\"默认方法01执行\");\n    }\n    public default void DefalutMethod02(){\n        System.out.println(\"默认方法02执行\");\n    }\n\n    // 静态方法\n    public static  void StaticMethod(){\n        System.out.println(\"静态方法不能通过实现类调用\");\n    }\n}\n```\n\n\n\n## 接口方法实现\n\n```java\npackage com.demo02;\n\n// 接口的实现类\n\n// 接口不能直接使用，必须有一个实现类来实现该接口\n// 接口的实现类必须覆盖重写（实现）接口中所有的抽象方法\n\n// 注意事项：如果实现类并没有覆盖重写接口中所有的抽象方法，那么这个实现类自己就必须定义为抽象类（Abstract)\n// 注意事项：不能通过接口实现类的对象来调用接口当中的静态方法，只能通过接口名称调用\n\npublic class InterfaceImp implements MyInterface {\n    @Override\n    public void AbsMethod01() {\n        System.out.println(\"接口的第一个方法执行\");\n    }\n    @Override\n    public void AbsMethod02() {\n        System.out.println(\"接口的第二个方法执行\");\n    }\n    //默认方法01覆写，02未覆写\n    @Override\n    public void DefalutMethod01() {\n        System.out.println(\"覆写了接口01的默认方法\");\n    }\n}\n\n```\n\n\n\n```java\npackage com.demo02;\n\n/**\n * @ClassName: InterfaceUse\n * @Description: 接口实现\n * @author: Aimer\n * @date: 2020/2/16  15:02\n * version: 1.0\n */\npublic class InterfaceUse {\n    public static void main(String[] args) {\n        InterfaceImp IImp = new InterfaceImp();\n        IImp.AbsMethod01();\n        IImp.AbsMethod02();\n        System.out.println(\"==========\");\n\n        //如果接口实现类没有覆写接口的默认方法，将使用接口的默认方法\n        IImp.DefalutMethod01();\n        IImp.DefalutMethod02();\n\n        // 接口静态方法调用\n        MyInterface.StaticMethod(); //只能用接口名.方法调用\n\n        //常量调用\n        System.out.println(MyInterface.NUM_OF_CLASS);\n    }\n}\n```\n\n## 接口方法运行\n\n![Interface.png](https://i.loli.net/2020/02/16/ypJ54SgKMXdezVN.png)\n\n## 接口内容小结\n\n**1.成员变量其实是常量，格式：** \n\n`[public] [static] [final] 数据类型 常量名称 = 数据值;`\n\n**注意：常量必须进行赋值，而且一旦赋值不能改变。常量名称完全大写，用下划线进行分隔**\n\n**2.接口中最重要的就是抽象方法，格式：** \n\n`[public] [abstract] 返回值类型 方法名称(参数列表);`\n\n**注意：实现类必须覆盖重写接口所有的抽象方法，除非实现类是抽象类。**\n　\n\n**3.从Java 8开始，接口里允许定义默认方法，格式：**\n\n`[public] default 返回值类型 方法名称(参数列表) { 方法体 }`\n\n**注意：默认方法也可以被覆盖重写**。\n　\n\n**4.从Java 8开始，接口里允许定义静态方法，格式：**\n\n`[public] static 返回值类型 方法名称(参数列表) { 方法体 }`\n\n**注意：应该通过接口名称进行调用，不能通过实现类对象调用接口静态方法**。\n　\n**5.从Java 9开始，接口里允许定义私有方法，格式：**\n\n**普通私有方法**：`private 返回值类型 方法名称(参数列表) { 方法体 }`\n\n**静态私有方法**：`private static 返回值类型 方法名称(参数列表) { 方法体 }`\n\n**注意：private的方法只有接口自己才能调用，不能被实现类或别人使用。**\n\n## 实现多个接口\n\n\n`public class MyInterfaceImpl implements MyInterfaceA, MyInterfaceB{}`\n\n```java\n一个类可以同时实现多个接口，但直接父类是唯一的\n接口没有静态代码块后者构造方法\n如果实现类所实现的多个接口当中，存在重复的抽象方法，那么只需要覆盖重写一次即可\n如果实现类没有覆盖重写所有接口当中的所有抽象方法，那么实现类就必须是一个抽象类\n如果实现类所实现的多个接口当中，存在重复的默认方法，那么实现类一定要对冲突的默认方法进行覆盖重写\n一个类如果直接父类当中的方法，和接口当中的默认方法产生了冲突，优先用父类当中的方法\n接口与接口之间是多继承的\n多个父接口当中的默认方法如果重复，那么子接口必须进行默认方法的覆盖重写，【而且带着default关键字】\n```\n\n","slug":"JavaSE04","published":1,"updated":"2020-03-06T13:49:30.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt0y0009ysst7php8r75","content":"<p>JAVA 接口学习</p>\n<a id=\"more\"></a>\n\n<h2 id=\"接口方法定义\"><a href=\"#接口方法定义\" class=\"headerlink\" title=\"接口方法定义\"></a>接口方法定义</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo02;</span><br><span class=\"line\"><span class=\"comment\">// 接口是多个类的公共规范</span></span><br><span class=\"line\"><span class=\"comment\">// Java7 中接口中可包含常量、抽象方法</span></span><br><span class=\"line\"><span class=\"comment\">// Java8 中额外可包含默认方法、静态方法</span></span><br><span class=\"line\"><span class=\"comment\">// Java9 中额外可包含私有方法</span></span><br><span class=\"line\"><span class=\"comment\">// 私有方法包括普通私有方法和静态私有方法</span></span><br><span class=\"line\"><span class=\"comment\">// 前者解决多个默认方法之间重复代码问题(接口中关键字为 private )</span></span><br><span class=\"line\"><span class=\"comment\">// 后者解决多个静态方法之间重复代码问题(接口中关键字为 private  static)</span></span><br><span class=\"line\"><span class=\"comment\">// 接口中的共有方法不应该让实现类使用（Java8 无法展示，代码略）</span></span><br><span class=\"line\"><span class=\"comment\">// 接口中的常量要使用大写，用下划线分隔且必须赋值关键字</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyInterface</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//常量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span>  String  NUM_OF_CLASS = <span class=\"string\">\"接口常量执行\"</span>;<span class=\"comment\">//public static final 可以省略</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 抽象方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">AbsMethod01</span><span class=\"params\">()</span></span>;<span class=\"comment\">// public abstract 可不写</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AbsMethod02</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 默认方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">default</span> <span class=\"keyword\">void</span> <span class=\"title\">DefalutMethod01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"默认方法01执行\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">default</span> <span class=\"keyword\">void</span> <span class=\"title\">DefalutMethod02</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"默认方法02执行\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 静态方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title\">StaticMethod</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"静态方法不能通过实现类调用\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"接口方法实现\"><a href=\"#接口方法实现\" class=\"headerlink\" title=\"接口方法实现\"></a>接口方法实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口的实现类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口不能直接使用，必须有一个实现类来实现该接口</span></span><br><span class=\"line\"><span class=\"comment\">// 接口的实现类必须覆盖重写（实现）接口中所有的抽象方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注意事项：如果实现类并没有覆盖重写接口中所有的抽象方法，那么这个实现类自己就必须定义为抽象类（Abstract)</span></span><br><span class=\"line\"><span class=\"comment\">// 注意事项：不能通过接口实现类的对象来调用接口当中的静态方法，只能通过接口名称调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InterfaceImp</span> <span class=\"keyword\">implements</span> <span class=\"title\">MyInterface</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">AbsMethod01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"接口的第一个方法执行\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">AbsMethod02</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"接口的第二个方法执行\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//默认方法01覆写，02未覆写</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">DefalutMethod01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"覆写了接口01的默认方法\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: InterfaceUse</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 接口实现</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/16  15:02</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InterfaceUse</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        InterfaceImp IImp = <span class=\"keyword\">new</span> InterfaceImp();</span><br><span class=\"line\">        IImp.AbsMethod01();</span><br><span class=\"line\">        IImp.AbsMethod02();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"==========\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果接口实现类没有覆写接口的默认方法，将使用接口的默认方法</span></span><br><span class=\"line\">        IImp.DefalutMethod01();</span><br><span class=\"line\">        IImp.DefalutMethod02();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 接口静态方法调用</span></span><br><span class=\"line\">        MyInterface.StaticMethod(); <span class=\"comment\">//只能用接口名.方法调用</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//常量调用</span></span><br><span class=\"line\">        System.out.println(MyInterface.NUM_OF_CLASS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"接口方法运行\"><a href=\"#接口方法运行\" class=\"headerlink\" title=\"接口方法运行\"></a>接口方法运行</h2><p><img src=\"https://i.loli.net/2020/02/16/ypJ54SgKMXdezVN.png\" alt=\"Interface.png\"></p>\n<h2 id=\"接口内容小结\"><a href=\"#接口内容小结\" class=\"headerlink\" title=\"接口内容小结\"></a>接口内容小结</h2><p><strong>1.成员变量其实是常量，格式：</strong> </p>\n<p><code>[public] [static] [final] 数据类型 常量名称 = 数据值;</code></p>\n<p><strong>注意：常量必须进行赋值，而且一旦赋值不能改变。常量名称完全大写，用下划线进行分隔</strong></p>\n<p><strong>2.接口中最重要的就是抽象方法，格式：</strong> </p>\n<p><code>[public] [abstract] 返回值类型 方法名称(参数列表);</code></p>\n<p><strong>注意：实现类必须覆盖重写接口所有的抽象方法，除非实现类是抽象类。</strong>\n　</p>\n<p><strong>3.从Java 8开始，接口里允许定义默认方法，格式：</strong></p>\n<p><code>[public] default 返回值类型 方法名称(参数列表) { 方法体 }</code></p>\n<p><strong>注意：默认方法也可以被覆盖重写</strong>。\n　</p>\n<p><strong>4.从Java 8开始，接口里允许定义静态方法，格式：</strong></p>\n<p><code>[public] static 返回值类型 方法名称(参数列表) { 方法体 }</code></p>\n<p><strong>注意：应该通过接口名称进行调用，不能通过实现类对象调用接口静态方法</strong>。<br>　<br><strong>5.从Java 9开始，接口里允许定义私有方法，格式：</strong></p>\n<p><strong>普通私有方法</strong>：<code>private 返回值类型 方法名称(参数列表) { 方法体 }</code></p>\n<p><strong>静态私有方法</strong>：<code>private static 返回值类型 方法名称(参数列表) { 方法体 }</code></p>\n<p><strong>注意：private的方法只有接口自己才能调用，不能被实现类或别人使用。</strong></p>\n<h2 id=\"实现多个接口\"><a href=\"#实现多个接口\" class=\"headerlink\" title=\"实现多个接口\"></a>实现多个接口</h2><p><code>public class MyInterfaceImpl implements MyInterfaceA, MyInterfaceB{}</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个类可以同时实现多个接口，但直接父类是唯一的</span><br><span class=\"line\">接口没有静态代码块后者构造方法</span><br><span class=\"line\">如果实现类所实现的多个接口当中，存在重复的抽象方法，那么只需要覆盖重写一次即可</span><br><span class=\"line\">如果实现类没有覆盖重写所有接口当中的所有抽象方法，那么实现类就必须是一个抽象类</span><br><span class=\"line\">如果实现类所实现的多个接口当中，存在重复的默认方法，那么实现类一定要对冲突的默认方法进行覆盖重写</span><br><span class=\"line\">一个类如果直接父类当中的方法，和接口当中的默认方法产生了冲突，优先用父类当中的方法</span><br><span class=\"line\">接口与接口之间是多继承的</span><br><span class=\"line\">多个父接口当中的默认方法如果重复，那么子接口必须进行默认方法的覆盖重写，【而且带着<span class=\"keyword\">default</span>关键字】</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>JAVA 接口学习</p>","more":"<h2 id=\"接口方法定义\"><a href=\"#接口方法定义\" class=\"headerlink\" title=\"接口方法定义\"></a>接口方法定义</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo02;</span><br><span class=\"line\"><span class=\"comment\">// 接口是多个类的公共规范</span></span><br><span class=\"line\"><span class=\"comment\">// Java7 中接口中可包含常量、抽象方法</span></span><br><span class=\"line\"><span class=\"comment\">// Java8 中额外可包含默认方法、静态方法</span></span><br><span class=\"line\"><span class=\"comment\">// Java9 中额外可包含私有方法</span></span><br><span class=\"line\"><span class=\"comment\">// 私有方法包括普通私有方法和静态私有方法</span></span><br><span class=\"line\"><span class=\"comment\">// 前者解决多个默认方法之间重复代码问题(接口中关键字为 private )</span></span><br><span class=\"line\"><span class=\"comment\">// 后者解决多个静态方法之间重复代码问题(接口中关键字为 private  static)</span></span><br><span class=\"line\"><span class=\"comment\">// 接口中的共有方法不应该让实现类使用（Java8 无法展示，代码略）</span></span><br><span class=\"line\"><span class=\"comment\">// 接口中的常量要使用大写，用下划线分隔且必须赋值关键字</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyInterface</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//常量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span>  String  NUM_OF_CLASS = <span class=\"string\">\"接口常量执行\"</span>;<span class=\"comment\">//public static final 可以省略</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 抽象方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">AbsMethod01</span><span class=\"params\">()</span></span>;<span class=\"comment\">// public abstract 可不写</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AbsMethod02</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 默认方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">default</span> <span class=\"keyword\">void</span> <span class=\"title\">DefalutMethod01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"默认方法01执行\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">default</span> <span class=\"keyword\">void</span> <span class=\"title\">DefalutMethod02</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"默认方法02执行\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 静态方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title\">StaticMethod</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"静态方法不能通过实现类调用\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"接口方法实现\"><a href=\"#接口方法实现\" class=\"headerlink\" title=\"接口方法实现\"></a>接口方法实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口的实现类</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口不能直接使用，必须有一个实现类来实现该接口</span></span><br><span class=\"line\"><span class=\"comment\">// 接口的实现类必须覆盖重写（实现）接口中所有的抽象方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注意事项：如果实现类并没有覆盖重写接口中所有的抽象方法，那么这个实现类自己就必须定义为抽象类（Abstract)</span></span><br><span class=\"line\"><span class=\"comment\">// 注意事项：不能通过接口实现类的对象来调用接口当中的静态方法，只能通过接口名称调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InterfaceImp</span> <span class=\"keyword\">implements</span> <span class=\"title\">MyInterface</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">AbsMethod01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"接口的第一个方法执行\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">AbsMethod02</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"接口的第二个方法执行\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//默认方法01覆写，02未覆写</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">DefalutMethod01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"覆写了接口01的默认方法\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: InterfaceUse</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 接口实现</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/16  15:02</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InterfaceUse</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        InterfaceImp IImp = <span class=\"keyword\">new</span> InterfaceImp();</span><br><span class=\"line\">        IImp.AbsMethod01();</span><br><span class=\"line\">        IImp.AbsMethod02();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"==========\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果接口实现类没有覆写接口的默认方法，将使用接口的默认方法</span></span><br><span class=\"line\">        IImp.DefalutMethod01();</span><br><span class=\"line\">        IImp.DefalutMethod02();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 接口静态方法调用</span></span><br><span class=\"line\">        MyInterface.StaticMethod(); <span class=\"comment\">//只能用接口名.方法调用</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//常量调用</span></span><br><span class=\"line\">        System.out.println(MyInterface.NUM_OF_CLASS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"接口方法运行\"><a href=\"#接口方法运行\" class=\"headerlink\" title=\"接口方法运行\"></a>接口方法运行</h2><p><img src=\"https://i.loli.net/2020/02/16/ypJ54SgKMXdezVN.png\" alt=\"Interface.png\"></p>\n<h2 id=\"接口内容小结\"><a href=\"#接口内容小结\" class=\"headerlink\" title=\"接口内容小结\"></a>接口内容小结</h2><p><strong>1.成员变量其实是常量，格式：</strong> </p>\n<p><code>[public] [static] [final] 数据类型 常量名称 = 数据值;</code></p>\n<p><strong>注意：常量必须进行赋值，而且一旦赋值不能改变。常量名称完全大写，用下划线进行分隔</strong></p>\n<p><strong>2.接口中最重要的就是抽象方法，格式：</strong> </p>\n<p><code>[public] [abstract] 返回值类型 方法名称(参数列表);</code></p>\n<p><strong>注意：实现类必须覆盖重写接口所有的抽象方法，除非实现类是抽象类。</strong>\n　</p>\n<p><strong>3.从Java 8开始，接口里允许定义默认方法，格式：</strong></p>\n<p><code>[public] default 返回值类型 方法名称(参数列表) { 方法体 }</code></p>\n<p><strong>注意：默认方法也可以被覆盖重写</strong>。\n　</p>\n<p><strong>4.从Java 8开始，接口里允许定义静态方法，格式：</strong></p>\n<p><code>[public] static 返回值类型 方法名称(参数列表) { 方法体 }</code></p>\n<p><strong>注意：应该通过接口名称进行调用，不能通过实现类对象调用接口静态方法</strong>。<br>　<br><strong>5.从Java 9开始，接口里允许定义私有方法，格式：</strong></p>\n<p><strong>普通私有方法</strong>：<code>private 返回值类型 方法名称(参数列表) { 方法体 }</code></p>\n<p><strong>静态私有方法</strong>：<code>private static 返回值类型 方法名称(参数列表) { 方法体 }</code></p>\n<p><strong>注意：private的方法只有接口自己才能调用，不能被实现类或别人使用。</strong></p>\n<h2 id=\"实现多个接口\"><a href=\"#实现多个接口\" class=\"headerlink\" title=\"实现多个接口\"></a>实现多个接口</h2><p><code>public class MyInterfaceImpl implements MyInterfaceA, MyInterfaceB{}</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个类可以同时实现多个接口，但直接父类是唯一的</span><br><span class=\"line\">接口没有静态代码块后者构造方法</span><br><span class=\"line\">如果实现类所实现的多个接口当中，存在重复的抽象方法，那么只需要覆盖重写一次即可</span><br><span class=\"line\">如果实现类没有覆盖重写所有接口当中的所有抽象方法，那么实现类就必须是一个抽象类</span><br><span class=\"line\">如果实现类所实现的多个接口当中，存在重复的默认方法，那么实现类一定要对冲突的默认方法进行覆盖重写</span><br><span class=\"line\">一个类如果直接父类当中的方法，和接口当中的默认方法产生了冲突，优先用父类当中的方法</span><br><span class=\"line\">接口与接口之间是多继承的</span><br><span class=\"line\">多个父接口当中的默认方法如果重复，那么子接口必须进行默认方法的覆盖重写，【而且带着<span class=\"keyword\">default</span>关键字】</span><br></pre></td></tr></table></figure>"},{"title":"Java SE 基础系列笔记 (3)","date":"2020-02-21T14:02:51.000Z","_content":"\nJAVA 多态学习\n\n<!-- more -->\n\n## 多态格式\n\n**多态：父类引用指向子类对象**\n\n`父类名称 对象名 = new 子类名称 `\n\n或者：\n\n`接口名称 对象名 = new 实现类名称`\n\n\n\n##  成员变量及方法使用\n\n**在多态的代码当中，成员方法的访问规则是： 看 `new`的是谁，就优先用谁，没有就向上找。**\n\n**成员变量，编译看左边，运行还看左边。**\n\n**成员方法，编译看左边，运行看右边。**\n\n## 对象的转型\n\n### 向上转型\n\n向上转型，就是多态写法。向上转型一定是安全的，从小范围转向大范围。\n\n格式： `父类名称 对象名 = new 子类名称`\n\n含义： 右侧创建一个子类对象，把它当做父类来看待使用。\n\n### 向下转型\n\n对象的向下转型，其实是一个还原的动作。\n\n格式：`子类名称 对象名 = (子类名称) 父类对象`\n\n含义： 将父类对象，还原为本来的子类对象。\n\n**注意事项： 向下转型需要 `对象 instanceof 类名称`来判断前面的对象能不能当做后面类型的实例。**\n\n\n\n## 笔记本 USB 接口实例\n\n### USB\n\n```java\npackage com.demo03;\n\n/**\n * @ClassName: USB\n * @Description: USB接口\n * @author: Aimer\n * @date: 2020/2/17  19:54\n * version: 1.0\n */\npublic interface USB {\n    public abstract void open();\n    public abstract void close();\n}\n\n```\n\n### Computer\n\n```java\npackage com.demo03;\n\nimport java.security.Key;\n\n/**\n * @ClassName: Computer\n * @Description: 计算机类\n * @author: Aimer\n * @date: 2020/2/17  19:56\n * version: 1.0\n */\npublic class Computer {\n    public void powerOn(){\n        System.out.println(\"笔记本开机\");\n    }\n    public  void powerOff(){\n        System.out.println(\"笔记本关机\");\n    }\n\n    // 使用USB\n    public void useDevice(USB usb){\n        usb.open();\n        if (usb instanceof Mouse){\n            Mouse mouse = (Mouse) usb;//向下转型\n            mouse.click();\n        }else  if(usb instanceof Keyboard){\n            Keyboard keyboard = (Keyboard) usb;//向下转型\n            keyboard.type();\n        }\n        usb.close();\n    }\n\n}\n\n```\n\n### Mouse\n\n```java\npackage com.demo03;\n\n/**\n * @ClassName: Mouse\n * @Description: 鼠标\n * @author: Aimer\n * @date: 2020/2/17  20:03\n * version: 1.0\n */\n\n//鼠标就是一个 USB 设备\npublic class Mouse implements USB {\n\n    @Override\n    public void open() {\n        System.out.println(\"打开鼠标\");\n    }\n\n    @Override\n    public void close() {\n        System.out.println(\"关闭鼠标\");\n    }\n\n    public  void click(){\n        System.out.println(\"鼠标点击\");\n    }\n}\n\n```\n\n### Keyboard\n\n```java\npackage com.demo03;\n\n/**\n * @ClassName: Keyboard\n * @Description: 键盘\n * @author: Aimer\n * @date: 2020/2/17  20:42\n * version: 1.0\n */\n//键盘也是个USB设备\npublic class Keyboard implements USB{\n\n    @Override\n    public void open() {\n        System.out.println(\"打开键盘\");\n    }\n\n    @Override\n    public void close() {\n        System.out.println(\"关闭键盘\");\n    }\n\n    public  void  type(){\n        System.out.println(\"键盘输入\");\n    }\n}\n\n```\n\n### 实现\n\n```java\npackage com.demo03;\n\n/**\n * @ClassName: DemoC\n * @Description: 实现\n * @author: Aimer\n * @date: 2020/2/17  20:05\n * version: 1.0\n */\npublic class DemoC {\n    public static void main(String[] args) {\n        Computer computer = new Computer();\n        computer.powerOn();\n\n        // 多态写法\n        USB usbMouse = new Mouse(); // 左父右子\n        computer.useDevice(usbMouse);\n        // 未使用\n        Keyboard keyboard = new Keyboard();\n        computer.useDevice(keyboard);\n        computer.powerOff();\n    }\n}\n\n```\n\n\n\n","source":"_posts/JavaSE03.md","raw":"---\ntitle: Java SE 基础系列笔记 (3)\ndate: 2020-02-21 22:02:51\ntags:  polymorphism\ncategories: Java\n---\n\nJAVA 多态学习\n\n<!-- more -->\n\n## 多态格式\n\n**多态：父类引用指向子类对象**\n\n`父类名称 对象名 = new 子类名称 `\n\n或者：\n\n`接口名称 对象名 = new 实现类名称`\n\n\n\n##  成员变量及方法使用\n\n**在多态的代码当中，成员方法的访问规则是： 看 `new`的是谁，就优先用谁，没有就向上找。**\n\n**成员变量，编译看左边，运行还看左边。**\n\n**成员方法，编译看左边，运行看右边。**\n\n## 对象的转型\n\n### 向上转型\n\n向上转型，就是多态写法。向上转型一定是安全的，从小范围转向大范围。\n\n格式： `父类名称 对象名 = new 子类名称`\n\n含义： 右侧创建一个子类对象，把它当做父类来看待使用。\n\n### 向下转型\n\n对象的向下转型，其实是一个还原的动作。\n\n格式：`子类名称 对象名 = (子类名称) 父类对象`\n\n含义： 将父类对象，还原为本来的子类对象。\n\n**注意事项： 向下转型需要 `对象 instanceof 类名称`来判断前面的对象能不能当做后面类型的实例。**\n\n\n\n## 笔记本 USB 接口实例\n\n### USB\n\n```java\npackage com.demo03;\n\n/**\n * @ClassName: USB\n * @Description: USB接口\n * @author: Aimer\n * @date: 2020/2/17  19:54\n * version: 1.0\n */\npublic interface USB {\n    public abstract void open();\n    public abstract void close();\n}\n\n```\n\n### Computer\n\n```java\npackage com.demo03;\n\nimport java.security.Key;\n\n/**\n * @ClassName: Computer\n * @Description: 计算机类\n * @author: Aimer\n * @date: 2020/2/17  19:56\n * version: 1.0\n */\npublic class Computer {\n    public void powerOn(){\n        System.out.println(\"笔记本开机\");\n    }\n    public  void powerOff(){\n        System.out.println(\"笔记本关机\");\n    }\n\n    // 使用USB\n    public void useDevice(USB usb){\n        usb.open();\n        if (usb instanceof Mouse){\n            Mouse mouse = (Mouse) usb;//向下转型\n            mouse.click();\n        }else  if(usb instanceof Keyboard){\n            Keyboard keyboard = (Keyboard) usb;//向下转型\n            keyboard.type();\n        }\n        usb.close();\n    }\n\n}\n\n```\n\n### Mouse\n\n```java\npackage com.demo03;\n\n/**\n * @ClassName: Mouse\n * @Description: 鼠标\n * @author: Aimer\n * @date: 2020/2/17  20:03\n * version: 1.0\n */\n\n//鼠标就是一个 USB 设备\npublic class Mouse implements USB {\n\n    @Override\n    public void open() {\n        System.out.println(\"打开鼠标\");\n    }\n\n    @Override\n    public void close() {\n        System.out.println(\"关闭鼠标\");\n    }\n\n    public  void click(){\n        System.out.println(\"鼠标点击\");\n    }\n}\n\n```\n\n### Keyboard\n\n```java\npackage com.demo03;\n\n/**\n * @ClassName: Keyboard\n * @Description: 键盘\n * @author: Aimer\n * @date: 2020/2/17  20:42\n * version: 1.0\n */\n//键盘也是个USB设备\npublic class Keyboard implements USB{\n\n    @Override\n    public void open() {\n        System.out.println(\"打开键盘\");\n    }\n\n    @Override\n    public void close() {\n        System.out.println(\"关闭键盘\");\n    }\n\n    public  void  type(){\n        System.out.println(\"键盘输入\");\n    }\n}\n\n```\n\n### 实现\n\n```java\npackage com.demo03;\n\n/**\n * @ClassName: DemoC\n * @Description: 实现\n * @author: Aimer\n * @date: 2020/2/17  20:05\n * version: 1.0\n */\npublic class DemoC {\n    public static void main(String[] args) {\n        Computer computer = new Computer();\n        computer.powerOn();\n\n        // 多态写法\n        USB usbMouse = new Mouse(); // 左父右子\n        computer.useDevice(usbMouse);\n        // 未使用\n        Keyboard keyboard = new Keyboard();\n        computer.useDevice(keyboard);\n        computer.powerOff();\n    }\n}\n\n```\n\n\n\n","slug":"JavaSE03","published":1,"updated":"2020-03-06T13:48:57.170Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt11000cysstexe2997b","content":"<p>JAVA 多态学习</p>\n<a id=\"more\"></a>\n\n<h2 id=\"多态格式\"><a href=\"#多态格式\" class=\"headerlink\" title=\"多态格式\"></a>多态格式</h2><p><strong>多态：父类引用指向子类对象</strong></p>\n<p><code>父类名称 对象名 = new 子类名称</code></p>\n<p>或者：</p>\n<p><code>接口名称 对象名 = new 实现类名称</code></p>\n<h2 id=\"成员变量及方法使用\"><a href=\"#成员变量及方法使用\" class=\"headerlink\" title=\"成员变量及方法使用\"></a>成员变量及方法使用</h2><p><strong>在多态的代码当中，成员方法的访问规则是： 看 <code>new</code>的是谁，就优先用谁，没有就向上找。</strong></p>\n<p><strong>成员变量，编译看左边，运行还看左边。</strong></p>\n<p><strong>成员方法，编译看左边，运行看右边。</strong></p>\n<h2 id=\"对象的转型\"><a href=\"#对象的转型\" class=\"headerlink\" title=\"对象的转型\"></a>对象的转型</h2><h3 id=\"向上转型\"><a href=\"#向上转型\" class=\"headerlink\" title=\"向上转型\"></a>向上转型</h3><p>向上转型，就是多态写法。向上转型一定是安全的，从小范围转向大范围。</p>\n<p>格式： <code>父类名称 对象名 = new 子类名称</code></p>\n<p>含义： 右侧创建一个子类对象，把它当做父类来看待使用。</p>\n<h3 id=\"向下转型\"><a href=\"#向下转型\" class=\"headerlink\" title=\"向下转型\"></a>向下转型</h3><p>对象的向下转型，其实是一个还原的动作。</p>\n<p>格式：<code>子类名称 对象名 = (子类名称) 父类对象</code></p>\n<p>含义： 将父类对象，还原为本来的子类对象。</p>\n<p><strong>注意事项： 向下转型需要 <code>对象 instanceof 类名称</code>来判断前面的对象能不能当做后面类型的实例。</strong></p>\n<h2 id=\"笔记本-USB-接口实例\"><a href=\"#笔记本-USB-接口实例\" class=\"headerlink\" title=\"笔记本 USB 接口实例\"></a>笔记本 USB 接口实例</h2><h3 id=\"USB\"><a href=\"#USB\" class=\"headerlink\" title=\"USB\"></a>USB</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: USB</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: USB接口</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  19:54</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">USB</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Computer\"><a href=\"#Computer\" class=\"headerlink\" title=\"Computer\"></a>Computer</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.Key;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Computer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 计算机类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  19:56</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Computer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">powerOn</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"笔记本开机\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">powerOff</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"笔记本关机\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用USB</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">useDevice</span><span class=\"params\">(USB usb)</span></span>&#123;</span><br><span class=\"line\">        usb.open();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (usb <span class=\"keyword\">instanceof</span> Mouse)&#123;</span><br><span class=\"line\">            Mouse mouse = (Mouse) usb;<span class=\"comment\">//向下转型</span></span><br><span class=\"line\">            mouse.click();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>  <span class=\"keyword\">if</span>(usb <span class=\"keyword\">instanceof</span> Keyboard)&#123;</span><br><span class=\"line\">            Keyboard keyboard = (Keyboard) usb;<span class=\"comment\">//向下转型</span></span><br><span class=\"line\">            keyboard.type();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        usb.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Mouse\"><a href=\"#Mouse\" class=\"headerlink\" title=\"Mouse\"></a>Mouse</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Mouse</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 鼠标</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  20:03</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//鼠标就是一个 USB 设备</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mouse</span> <span class=\"keyword\">implements</span> <span class=\"title\">USB</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"打开鼠标\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"关闭鼠标\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">click</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"鼠标点击\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Keyboard\"><a href=\"#Keyboard\" class=\"headerlink\" title=\"Keyboard\"></a>Keyboard</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Keyboard</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 键盘</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  20:42</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//键盘也是个USB设备</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Keyboard</span> <span class=\"keyword\">implements</span> <span class=\"title\">USB</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"打开键盘\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"关闭键盘\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span>  <span class=\"title\">type</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"键盘输入\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: DemoC</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 实现</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  20:05</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoC</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Computer computer = <span class=\"keyword\">new</span> Computer();</span><br><span class=\"line\">        computer.powerOn();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 多态写法</span></span><br><span class=\"line\">        USB usbMouse = <span class=\"keyword\">new</span> Mouse(); <span class=\"comment\">// 左父右子</span></span><br><span class=\"line\">        computer.useDevice(usbMouse);</span><br><span class=\"line\">        <span class=\"comment\">// 未使用</span></span><br><span class=\"line\">        Keyboard keyboard = <span class=\"keyword\">new</span> Keyboard();</span><br><span class=\"line\">        computer.useDevice(keyboard);</span><br><span class=\"line\">        computer.powerOff();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"<p>JAVA 多态学习</p>","more":"<h2 id=\"多态格式\"><a href=\"#多态格式\" class=\"headerlink\" title=\"多态格式\"></a>多态格式</h2><p><strong>多态：父类引用指向子类对象</strong></p>\n<p><code>父类名称 对象名 = new 子类名称</code></p>\n<p>或者：</p>\n<p><code>接口名称 对象名 = new 实现类名称</code></p>\n<h2 id=\"成员变量及方法使用\"><a href=\"#成员变量及方法使用\" class=\"headerlink\" title=\"成员变量及方法使用\"></a>成员变量及方法使用</h2><p><strong>在多态的代码当中，成员方法的访问规则是： 看 <code>new</code>的是谁，就优先用谁，没有就向上找。</strong></p>\n<p><strong>成员变量，编译看左边，运行还看左边。</strong></p>\n<p><strong>成员方法，编译看左边，运行看右边。</strong></p>\n<h2 id=\"对象的转型\"><a href=\"#对象的转型\" class=\"headerlink\" title=\"对象的转型\"></a>对象的转型</h2><h3 id=\"向上转型\"><a href=\"#向上转型\" class=\"headerlink\" title=\"向上转型\"></a>向上转型</h3><p>向上转型，就是多态写法。向上转型一定是安全的，从小范围转向大范围。</p>\n<p>格式： <code>父类名称 对象名 = new 子类名称</code></p>\n<p>含义： 右侧创建一个子类对象，把它当做父类来看待使用。</p>\n<h3 id=\"向下转型\"><a href=\"#向下转型\" class=\"headerlink\" title=\"向下转型\"></a>向下转型</h3><p>对象的向下转型，其实是一个还原的动作。</p>\n<p>格式：<code>子类名称 对象名 = (子类名称) 父类对象</code></p>\n<p>含义： 将父类对象，还原为本来的子类对象。</p>\n<p><strong>注意事项： 向下转型需要 <code>对象 instanceof 类名称</code>来判断前面的对象能不能当做后面类型的实例。</strong></p>\n<h2 id=\"笔记本-USB-接口实例\"><a href=\"#笔记本-USB-接口实例\" class=\"headerlink\" title=\"笔记本 USB 接口实例\"></a>笔记本 USB 接口实例</h2><h3 id=\"USB\"><a href=\"#USB\" class=\"headerlink\" title=\"USB\"></a>USB</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: USB</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: USB接口</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  19:54</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">USB</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Computer\"><a href=\"#Computer\" class=\"headerlink\" title=\"Computer\"></a>Computer</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.Key;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Computer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 计算机类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  19:56</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Computer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">powerOn</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"笔记本开机\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">powerOff</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"笔记本关机\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用USB</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">useDevice</span><span class=\"params\">(USB usb)</span></span>&#123;</span><br><span class=\"line\">        usb.open();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (usb <span class=\"keyword\">instanceof</span> Mouse)&#123;</span><br><span class=\"line\">            Mouse mouse = (Mouse) usb;<span class=\"comment\">//向下转型</span></span><br><span class=\"line\">            mouse.click();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>  <span class=\"keyword\">if</span>(usb <span class=\"keyword\">instanceof</span> Keyboard)&#123;</span><br><span class=\"line\">            Keyboard keyboard = (Keyboard) usb;<span class=\"comment\">//向下转型</span></span><br><span class=\"line\">            keyboard.type();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        usb.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Mouse\"><a href=\"#Mouse\" class=\"headerlink\" title=\"Mouse\"></a>Mouse</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Mouse</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 鼠标</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  20:03</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//鼠标就是一个 USB 设备</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mouse</span> <span class=\"keyword\">implements</span> <span class=\"title\">USB</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"打开鼠标\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"关闭鼠标\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">click</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"鼠标点击\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Keyboard\"><a href=\"#Keyboard\" class=\"headerlink\" title=\"Keyboard\"></a>Keyboard</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Keyboard</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 键盘</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  20:42</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//键盘也是个USB设备</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Keyboard</span> <span class=\"keyword\">implements</span> <span class=\"title\">USB</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"打开键盘\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"关闭键盘\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span>  <span class=\"title\">type</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"键盘输入\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: DemoC</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 实现</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/17  20:05</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoC</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Computer computer = <span class=\"keyword\">new</span> Computer();</span><br><span class=\"line\">        computer.powerOn();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 多态写法</span></span><br><span class=\"line\">        USB usbMouse = <span class=\"keyword\">new</span> Mouse(); <span class=\"comment\">// 左父右子</span></span><br><span class=\"line\">        computer.useDevice(usbMouse);</span><br><span class=\"line\">        <span class=\"comment\">// 未使用</span></span><br><span class=\"line\">        Keyboard keyboard = <span class=\"keyword\">new</span> Keyboard();</span><br><span class=\"line\">        computer.useDevice(keyboard);</span><br><span class=\"line\">        computer.powerOff();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java SE 基础系列笔记 (5)","date":"2020-02-21T14:03:04.000Z","toc":true,"_content":"\nJAVA 内部类学习\n\n<!-- more -->\n\n## 内部类的分类\n\n1. 成员内部类\n2. 局部内部类（包含匿名内部类）\n\n## 成员内部类的定义\n\n```java\n修饰符 class 外部类名称{\n\t修饰符 class 内部类名称{\n\t\t//...\n\t\t}\n\t\t//...\n\t\t}\n```\n\n**注意：内用外，随意访问；外用内，需要内部类对象。**\n\n## 成员内部类的使用\n\n### 间接方式\n\n**通过外部类对象，调用外部类的方法，里面间接使用内部类**`Heart`。\n\nEXP:\n\n```java\npackage com.demo04内部类;\n\npublic class Body {\n    private String name = \"某某 \";\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void method(){\n        new Heart().beat();// 外部类调用内部类方法\n    }\n\n    // 内部类\n    public  class Heart{\n        public void beat(){\n            System.out.println(name+\"beat\");\n        }\n    }\n\n}\n\n```\n\n\n\n```java\npackage com.demo04内部类;\n\npublic class HeartBody {\n    public static void main(String[] args) {\n        Body body = new Body();\n        body.method();\n\n    }\n}\n\n```\n\n\n\n### 直接方式\n\n公式：\n\n```java\n类名称 对象名 = new 类名称()；\n外部类名称.内部类名称 对象名 = new 外部类名称().new 内部类名称;\n```\n\n以上面例子使用： ` Body.Heart heart = new Body().new Heart();`\n\n注意：如果内部类要访问外部类的同名变量，格式为 `外部类名称 . this.外部类成员变量名`。\n\n## 局部内部类的定义\n\n如果一个类是定义在一个方法内部的，那么这就是一个局部内部类。\n\n​\t格式：\n\n```java\n修饰符 class 外部类名称{\n    修饰符 返回值类型 外部类方法名称{\n        class 内部类名称{\n        //...\n        }\n    }\n}\n```\n\n**注意：只有当前所属的方法才能使用它。**\n\n*先小节一下类的权限修饰符：*\n\n​\t`public` >  `protected` > `default` >  `private`\n\n**定义一个类时，权限修饰符规则：**\n\n- 外部类： `public` / `(default)`\n\n- 成员内部类： `public`/`protected`/`(default)`/`private`\n\n- 局部内部类：**什么都不能写！！！**\n\n  \n\n**注意事项：局部内部类，如果希望访问所在方法的局部变量，那么这个局部变量必须是有效`final`的。**\n\n**备注： 从`Java8+`开始，只要局部变量事实不变，那么`final`关键字可以省略。**\n\n### 匿名内部类\n\n何种情况需要匿名内部类？\n\n如果接口的实现类（或者是父类的子类）只需要使用唯一的一次。\n\n```java\n接口名称 对象名 = new 接口名称（）{\n  //覆盖重写所有抽象方法\n  }；\n```\n\nexp:\n\n**一般方法以及匿名内部类方法：**\n\n```java\npackage com.demo05匿名内部类;\n\n/**\n * @ClassName: Interfaceo\n * @Description: 接口\n * @author: Aimer\n * @date: 2020/2/24  20:21\n * version: 1.0\n */\npublic interface Interfaceo {\n    void print();\n}\n\n```\n\n\n\n```java\npackage com.demo05匿名内部类;\n\n/**\n * @ClassName: InterCom\n * @Description: 实现接口方法类\n * @author: Aimer\n * @date: 2020/2/24  20:28\n * version: 1.0\n */\npublic class InterCom implements Interfaceo{\n    @Override\n    public void print() {\n        System.out.println(\"类实现接口\");\n    }\n}\n\n```\n\n\n\n```java\npackage com.demo05匿名内部类;\n\n/**\n * @ClassName: InterMy\n * @Description: 两种方法实现接口\n * @author: Aimer\n * @date: 2020/2/24  20:22\n * version: 1.0\n */\npublic class InterMy {\n    public static void main(String[] args) {\n        InterCom interCom = new InterCom();\n        interCom.print();\n\n        Interfaceo interfaceo = new Interfaceo() {\n            @Override\n            public void print() {\n                System.out.println(\"匿名内部类实现\");\n            }\n        };\n        interfaceo.print();\n    }\n}\n\n```\n\n### 匿名内部类注意事项\n\n**对格式 ` new 接口名称（）{}`进行解析：**\n\n- `new` 代表创建对象的动作\n\n- 接口名称就是匿名内部类需要实现哪个接口\n\n- `{~}`其中才是匿名内部类的内容\n\n  \n\n还要注意：\n\n* 匿名内部类，在【创建对象】时，只能使用唯一一次。如果希望多次创建对象，而且类的内容一样的话，那么必须使用单独定义的实现类。\n\n* 匿名对象,在【调用方法】的时候，只能调用唯一一次。如果希望同一个对象调用多次方法，那么必须给对象起个名字。\n\n* 匿名内部类是省略了【实现类/子类】,但是匿名对象是省略了【对象名称】。\n\n  \n\nexp：\n\n```java\n        new Interfaceo(){\n            @Override\n            public void print() {\n                System.out.println(\"匿名对象打印\");\n            }\n        }.print();\n```\n\n## 其它\n\n- **类、接口可以作为成员变量类型**\n\n  ```java\n          hero.setSkill(new Skill() {\n              @Override\n              public void use() {\n                  System.out.println(\"hhaha\");\n              }\n          });\n  ```\n\n  \n\n- **接口可以作为方法的参数或者返回值**","source":"_posts/JavaSE05.md","raw":"---\ntitle: Java SE 基础系列笔记 (5)\ndate: 2020-02-21 22:03:04\ntags: inner\ncategories: Java\ntoc: true\t\n---\n\nJAVA 内部类学习\n\n<!-- more -->\n\n## 内部类的分类\n\n1. 成员内部类\n2. 局部内部类（包含匿名内部类）\n\n## 成员内部类的定义\n\n```java\n修饰符 class 外部类名称{\n\t修饰符 class 内部类名称{\n\t\t//...\n\t\t}\n\t\t//...\n\t\t}\n```\n\n**注意：内用外，随意访问；外用内，需要内部类对象。**\n\n## 成员内部类的使用\n\n### 间接方式\n\n**通过外部类对象，调用外部类的方法，里面间接使用内部类**`Heart`。\n\nEXP:\n\n```java\npackage com.demo04内部类;\n\npublic class Body {\n    private String name = \"某某 \";\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void method(){\n        new Heart().beat();// 外部类调用内部类方法\n    }\n\n    // 内部类\n    public  class Heart{\n        public void beat(){\n            System.out.println(name+\"beat\");\n        }\n    }\n\n}\n\n```\n\n\n\n```java\npackage com.demo04内部类;\n\npublic class HeartBody {\n    public static void main(String[] args) {\n        Body body = new Body();\n        body.method();\n\n    }\n}\n\n```\n\n\n\n### 直接方式\n\n公式：\n\n```java\n类名称 对象名 = new 类名称()；\n外部类名称.内部类名称 对象名 = new 外部类名称().new 内部类名称;\n```\n\n以上面例子使用： ` Body.Heart heart = new Body().new Heart();`\n\n注意：如果内部类要访问外部类的同名变量，格式为 `外部类名称 . this.外部类成员变量名`。\n\n## 局部内部类的定义\n\n如果一个类是定义在一个方法内部的，那么这就是一个局部内部类。\n\n​\t格式：\n\n```java\n修饰符 class 外部类名称{\n    修饰符 返回值类型 外部类方法名称{\n        class 内部类名称{\n        //...\n        }\n    }\n}\n```\n\n**注意：只有当前所属的方法才能使用它。**\n\n*先小节一下类的权限修饰符：*\n\n​\t`public` >  `protected` > `default` >  `private`\n\n**定义一个类时，权限修饰符规则：**\n\n- 外部类： `public` / `(default)`\n\n- 成员内部类： `public`/`protected`/`(default)`/`private`\n\n- 局部内部类：**什么都不能写！！！**\n\n  \n\n**注意事项：局部内部类，如果希望访问所在方法的局部变量，那么这个局部变量必须是有效`final`的。**\n\n**备注： 从`Java8+`开始，只要局部变量事实不变，那么`final`关键字可以省略。**\n\n### 匿名内部类\n\n何种情况需要匿名内部类？\n\n如果接口的实现类（或者是父类的子类）只需要使用唯一的一次。\n\n```java\n接口名称 对象名 = new 接口名称（）{\n  //覆盖重写所有抽象方法\n  }；\n```\n\nexp:\n\n**一般方法以及匿名内部类方法：**\n\n```java\npackage com.demo05匿名内部类;\n\n/**\n * @ClassName: Interfaceo\n * @Description: 接口\n * @author: Aimer\n * @date: 2020/2/24  20:21\n * version: 1.0\n */\npublic interface Interfaceo {\n    void print();\n}\n\n```\n\n\n\n```java\npackage com.demo05匿名内部类;\n\n/**\n * @ClassName: InterCom\n * @Description: 实现接口方法类\n * @author: Aimer\n * @date: 2020/2/24  20:28\n * version: 1.0\n */\npublic class InterCom implements Interfaceo{\n    @Override\n    public void print() {\n        System.out.println(\"类实现接口\");\n    }\n}\n\n```\n\n\n\n```java\npackage com.demo05匿名内部类;\n\n/**\n * @ClassName: InterMy\n * @Description: 两种方法实现接口\n * @author: Aimer\n * @date: 2020/2/24  20:22\n * version: 1.0\n */\npublic class InterMy {\n    public static void main(String[] args) {\n        InterCom interCom = new InterCom();\n        interCom.print();\n\n        Interfaceo interfaceo = new Interfaceo() {\n            @Override\n            public void print() {\n                System.out.println(\"匿名内部类实现\");\n            }\n        };\n        interfaceo.print();\n    }\n}\n\n```\n\n### 匿名内部类注意事项\n\n**对格式 ` new 接口名称（）{}`进行解析：**\n\n- `new` 代表创建对象的动作\n\n- 接口名称就是匿名内部类需要实现哪个接口\n\n- `{~}`其中才是匿名内部类的内容\n\n  \n\n还要注意：\n\n* 匿名内部类，在【创建对象】时，只能使用唯一一次。如果希望多次创建对象，而且类的内容一样的话，那么必须使用单独定义的实现类。\n\n* 匿名对象,在【调用方法】的时候，只能调用唯一一次。如果希望同一个对象调用多次方法，那么必须给对象起个名字。\n\n* 匿名内部类是省略了【实现类/子类】,但是匿名对象是省略了【对象名称】。\n\n  \n\nexp：\n\n```java\n        new Interfaceo(){\n            @Override\n            public void print() {\n                System.out.println(\"匿名对象打印\");\n            }\n        }.print();\n```\n\n## 其它\n\n- **类、接口可以作为成员变量类型**\n\n  ```java\n          hero.setSkill(new Skill() {\n              @Override\n              public void use() {\n                  System.out.println(\"hhaha\");\n              }\n          });\n  ```\n\n  \n\n- **接口可以作为方法的参数或者返回值**","slug":"JavaSE05","published":1,"updated":"2020-03-06T13:54:10.787Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt12000dysstcv8h3bu4","content":"<p>JAVA 内部类学习</p>\n<a id=\"more\"></a>\n\n<h2 id=\"内部类的分类\"><a href=\"#内部类的分类\" class=\"headerlink\" title=\"内部类的分类\"></a>内部类的分类</h2><ol>\n<li>成员内部类</li>\n<li>局部内部类（包含匿名内部类）</li>\n</ol>\n<h2 id=\"成员内部类的定义\"><a href=\"#成员内部类的定义\" class=\"headerlink\" title=\"成员内部类的定义\"></a>成员内部类的定义</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修饰符 <span class=\"class\"><span class=\"keyword\">class</span> 外部类名称</span>&#123;</span><br><span class=\"line\">\t修饰符 <span class=\"class\"><span class=\"keyword\">class</span> 内部类名称</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//...</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//...</span></span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：内用外，随意访问；外用内，需要内部类对象。</strong></p>\n<h2 id=\"成员内部类的使用\"><a href=\"#成员内部类的使用\" class=\"headerlink\" title=\"成员内部类的使用\"></a>成员内部类的使用</h2><h3 id=\"间接方式\"><a href=\"#间接方式\" class=\"headerlink\" title=\"间接方式\"></a>间接方式</h3><p><strong>通过外部类对象，调用外部类的方法，里面间接使用内部类</strong><code>Heart</code>。</p>\n<p>EXP:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo04内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Body</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name = <span class=\"string\">\"某某 \"</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Heart().beat();<span class=\"comment\">// 外部类调用内部类方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Heart</span></span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">beat</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            System.out.println(name+<span class=\"string\">\"beat\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo04内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeartBody</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Body body = <span class=\"keyword\">new</span> Body();</span><br><span class=\"line\">        body.method();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"直接方式\"><a href=\"#直接方式\" class=\"headerlink\" title=\"直接方式\"></a>直接方式</h3><p>公式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类名称 对象名 = <span class=\"keyword\">new</span> 类名称()；</span><br><span class=\"line\">外部类名称.内部类名称 对象名 = <span class=\"keyword\">new</span> 外部类名称().<span class=\"keyword\">new</span> 内部类名称;</span><br></pre></td></tr></table></figure>\n\n<p>以上面例子使用： <code>Body.Heart heart = new Body().new Heart();</code></p>\n<p>注意：如果内部类要访问外部类的同名变量，格式为 <code>外部类名称 . this.外部类成员变量名</code>。</p>\n<h2 id=\"局部内部类的定义\"><a href=\"#局部内部类的定义\" class=\"headerlink\" title=\"局部内部类的定义\"></a>局部内部类的定义</h2><p>如果一个类是定义在一个方法内部的，那么这就是一个局部内部类。</p>\n<p>​    格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修饰符 <span class=\"class\"><span class=\"keyword\">class</span> 外部类名称</span>&#123;</span><br><span class=\"line\">    修饰符 返回值类型 外部类方法名称&#123;</span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> 内部类名称</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：只有当前所属的方法才能使用它。</strong></p>\n<p><em>先小节一下类的权限修饰符：</em></p>\n<p>​    <code>public</code> &gt;  <code>protected</code> &gt; <code>default</code> &gt;  <code>private</code></p>\n<p><strong>定义一个类时，权限修饰符规则：</strong></p>\n<ul>\n<li><p>外部类： <code>public</code> / <code>(default)</code></p>\n</li>\n<li><p>成员内部类： <code>public</code>/<code>protected</code>/<code>(default)</code>/<code>private</code></p>\n</li>\n<li><p>局部内部类：<strong>什么都不能写！！！</strong></p>\n</li>\n</ul>\n<p><strong>注意事项：局部内部类，如果希望访问所在方法的局部变量，那么这个局部变量必须是有效<code>final</code>的。</strong></p>\n<p><strong>备注： 从<code>Java8+</code>开始，只要局部变量事实不变，那么<code>final</code>关键字可以省略。</strong></p>\n<h3 id=\"匿名内部类\"><a href=\"#匿名内部类\" class=\"headerlink\" title=\"匿名内部类\"></a>匿名内部类</h3><p>何种情况需要匿名内部类？</p>\n<p>如果接口的实现类（或者是父类的子类）只需要使用唯一的一次。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">接口名称 对象名 = <span class=\"keyword\">new</span> 接口名称（）&#123;</span><br><span class=\"line\">  <span class=\"comment\">//覆盖重写所有抽象方法</span></span><br><span class=\"line\">  &#125;；</span><br></pre></td></tr></table></figure>\n\n<p>exp:</p>\n<p><strong>一般方法以及匿名内部类方法：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo05匿名内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Interfaceo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 接口</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/24  20:21</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Interfaceo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo05匿名内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: InterCom</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 实现接口方法类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/24  20:28</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InterCom</span> <span class=\"keyword\">implements</span> <span class=\"title\">Interfaceo</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"类实现接口\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo05匿名内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: InterMy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 两种方法实现接口</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/24  20:22</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InterMy</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        InterCom interCom = <span class=\"keyword\">new</span> InterCom();</span><br><span class=\"line\">        interCom.print();</span><br><span class=\"line\"></span><br><span class=\"line\">        Interfaceo interfaceo = <span class=\"keyword\">new</span> Interfaceo() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"匿名内部类实现\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        interfaceo.print();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"匿名内部类注意事项\"><a href=\"#匿名内部类注意事项\" class=\"headerlink\" title=\"匿名内部类注意事项\"></a>匿名内部类注意事项</h3><p><strong>对格式 <code>new 接口名称（）{}</code>进行解析：</strong></p>\n<ul>\n<li><p><code>new</code> 代表创建对象的动作</p>\n</li>\n<li><p>接口名称就是匿名内部类需要实现哪个接口</p>\n</li>\n<li><p><code>{~}</code>其中才是匿名内部类的内容</p>\n</li>\n</ul>\n<p>还要注意：</p>\n<ul>\n<li><p>匿名内部类，在【创建对象】时，只能使用唯一一次。如果希望多次创建对象，而且类的内容一样的话，那么必须使用单独定义的实现类。</p>\n</li>\n<li><p>匿名对象,在【调用方法】的时候，只能调用唯一一次。如果希望同一个对象调用多次方法，那么必须给对象起个名字。</p>\n</li>\n<li><p>匿名内部类是省略了【实现类/子类】,但是匿名对象是省略了【对象名称】。</p>\n</li>\n</ul>\n<p>exp：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Interfaceo()&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"匿名对象打印\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;.print();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h2><ul>\n<li><p><strong>类、接口可以作为成员变量类型</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hero.setSkill(<span class=\"keyword\">new</span> Skill() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">use</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"hhaha\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ul>\n<ul>\n<li><strong>接口可以作为方法的参数或者返回值</strong></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>JAVA 内部类学习</p>","more":"<h2 id=\"内部类的分类\"><a href=\"#内部类的分类\" class=\"headerlink\" title=\"内部类的分类\"></a>内部类的分类</h2><ol>\n<li>成员内部类</li>\n<li>局部内部类（包含匿名内部类）</li>\n</ol>\n<h2 id=\"成员内部类的定义\"><a href=\"#成员内部类的定义\" class=\"headerlink\" title=\"成员内部类的定义\"></a>成员内部类的定义</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修饰符 <span class=\"class\"><span class=\"keyword\">class</span> 外部类名称</span>&#123;</span><br><span class=\"line\">\t修饰符 <span class=\"class\"><span class=\"keyword\">class</span> 内部类名称</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//...</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//...</span></span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：内用外，随意访问；外用内，需要内部类对象。</strong></p>\n<h2 id=\"成员内部类的使用\"><a href=\"#成员内部类的使用\" class=\"headerlink\" title=\"成员内部类的使用\"></a>成员内部类的使用</h2><h3 id=\"间接方式\"><a href=\"#间接方式\" class=\"headerlink\" title=\"间接方式\"></a>间接方式</h3><p><strong>通过外部类对象，调用外部类的方法，里面间接使用内部类</strong><code>Heart</code>。</p>\n<p>EXP:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo04内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Body</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name = <span class=\"string\">\"某某 \"</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Heart().beat();<span class=\"comment\">// 外部类调用内部类方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Heart</span></span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">beat</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">            System.out.println(name+<span class=\"string\">\"beat\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo04内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeartBody</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Body body = <span class=\"keyword\">new</span> Body();</span><br><span class=\"line\">        body.method();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"直接方式\"><a href=\"#直接方式\" class=\"headerlink\" title=\"直接方式\"></a>直接方式</h3><p>公式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类名称 对象名 = <span class=\"keyword\">new</span> 类名称()；</span><br><span class=\"line\">外部类名称.内部类名称 对象名 = <span class=\"keyword\">new</span> 外部类名称().<span class=\"keyword\">new</span> 内部类名称;</span><br></pre></td></tr></table></figure>\n\n<p>以上面例子使用： <code>Body.Heart heart = new Body().new Heart();</code></p>\n<p>注意：如果内部类要访问外部类的同名变量，格式为 <code>外部类名称 . this.外部类成员变量名</code>。</p>\n<h2 id=\"局部内部类的定义\"><a href=\"#局部内部类的定义\" class=\"headerlink\" title=\"局部内部类的定义\"></a>局部内部类的定义</h2><p>如果一个类是定义在一个方法内部的，那么这就是一个局部内部类。</p>\n<p>​    格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修饰符 <span class=\"class\"><span class=\"keyword\">class</span> 外部类名称</span>&#123;</span><br><span class=\"line\">    修饰符 返回值类型 外部类方法名称&#123;</span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> 内部类名称</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：只有当前所属的方法才能使用它。</strong></p>\n<p><em>先小节一下类的权限修饰符：</em></p>\n<p>​    <code>public</code> &gt;  <code>protected</code> &gt; <code>default</code> &gt;  <code>private</code></p>\n<p><strong>定义一个类时，权限修饰符规则：</strong></p>\n<ul>\n<li><p>外部类： <code>public</code> / <code>(default)</code></p>\n</li>\n<li><p>成员内部类： <code>public</code>/<code>protected</code>/<code>(default)</code>/<code>private</code></p>\n</li>\n<li><p>局部内部类：<strong>什么都不能写！！！</strong></p>\n</li>\n</ul>\n<p><strong>注意事项：局部内部类，如果希望访问所在方法的局部变量，那么这个局部变量必须是有效<code>final</code>的。</strong></p>\n<p><strong>备注： 从<code>Java8+</code>开始，只要局部变量事实不变，那么<code>final</code>关键字可以省略。</strong></p>\n<h3 id=\"匿名内部类\"><a href=\"#匿名内部类\" class=\"headerlink\" title=\"匿名内部类\"></a>匿名内部类</h3><p>何种情况需要匿名内部类？</p>\n<p>如果接口的实现类（或者是父类的子类）只需要使用唯一的一次。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">接口名称 对象名 = <span class=\"keyword\">new</span> 接口名称（）&#123;</span><br><span class=\"line\">  <span class=\"comment\">//覆盖重写所有抽象方法</span></span><br><span class=\"line\">  &#125;；</span><br></pre></td></tr></table></figure>\n\n<p>exp:</p>\n<p><strong>一般方法以及匿名内部类方法：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo05匿名内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: Interfaceo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 接口</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/24  20:21</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Interfaceo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo05匿名内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: InterCom</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 实现接口方法类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/24  20:28</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InterCom</span> <span class=\"keyword\">implements</span> <span class=\"title\">Interfaceo</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"类实现接口\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo05匿名内部类;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: InterMy</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 两种方法实现接口</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: Aimer</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2020/2/24  20:22</span></span><br><span class=\"line\"><span class=\"comment\"> * version: 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InterMy</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        InterCom interCom = <span class=\"keyword\">new</span> InterCom();</span><br><span class=\"line\">        interCom.print();</span><br><span class=\"line\"></span><br><span class=\"line\">        Interfaceo interfaceo = <span class=\"keyword\">new</span> Interfaceo() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"匿名内部类实现\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        interfaceo.print();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"匿名内部类注意事项\"><a href=\"#匿名内部类注意事项\" class=\"headerlink\" title=\"匿名内部类注意事项\"></a>匿名内部类注意事项</h3><p><strong>对格式 <code>new 接口名称（）{}</code>进行解析：</strong></p>\n<ul>\n<li><p><code>new</code> 代表创建对象的动作</p>\n</li>\n<li><p>接口名称就是匿名内部类需要实现哪个接口</p>\n</li>\n<li><p><code>{~}</code>其中才是匿名内部类的内容</p>\n</li>\n</ul>\n<p>还要注意：</p>\n<ul>\n<li><p>匿名内部类，在【创建对象】时，只能使用唯一一次。如果希望多次创建对象，而且类的内容一样的话，那么必须使用单独定义的实现类。</p>\n</li>\n<li><p>匿名对象,在【调用方法】的时候，只能调用唯一一次。如果希望同一个对象调用多次方法，那么必须给对象起个名字。</p>\n</li>\n<li><p>匿名内部类是省略了【实现类/子类】,但是匿名对象是省略了【对象名称】。</p>\n</li>\n</ul>\n<p>exp：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Interfaceo()&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"匿名对象打印\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;.print();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h2><ul>\n<li><p><strong>类、接口可以作为成员变量类型</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hero.setSkill(<span class=\"keyword\">new</span> Skill() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">use</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"hhaha\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ul>\n<ul>\n<li><strong>接口可以作为方法的参数或者返回值</strong></li>\n</ul>"},{"title":"Java SE 基础系列笔记 (6)","date":"2020-02-27T13:07:02.000Z","toc":true,"comment":true,"_content":"\n常用 JAVA API(一) 学习\n\n<!-- more -->\n\n## Scanner\n\nexp:\n\n```java\npackage com.demo09;\nimport java.util.Scanner;\npublic class demoScn {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int num = sc.nextInt();\n        String str =  sc.next();\n        System.out.println(num+str);\n    }\n}\n```\n\n## 匿名对象\n\nexp:\n\n```java\npackage com.demo09;\n\nimport java.util.Scanner;\n\npublic class demoNum {\n    public static void main(String[] args) {\n        methodParam(new Scanner(System.in));\n        \n        Scanner sc = methodReturn();\n        int num = sc.nextInt();\n        System.out.println(\"hhajfi\");\n\n    }\n\n    // 匿名对象作为方法参数\n    public static void methodParam(Scanner sc) {\n        int num = sc.nextInt();\n        System.out.println(num);\n    }\n    // 匿名对象作为返回值\n    public static  Scanner methodReturn(){\n        return new Scanner(System.in);\n    }\n}\n\n```\n\n##  Random\n\nexp:\n\n```java\nimport java.util.Random;\n\npublic class demoRan {\n    public static void main(String[] args) {\n        Random r = new Random();\n        int num  = r.nextInt();\n        System.out.println(num);\n    }\n}\n```\n\n**注意：使用 `nextInt(n)` 为左闭右开区间。**\n\n### 猜数字小游戏\n\n```java\npackage com.demo10;\nimport java.util.Random;\nimport java.util.Scanner;\n\n//猜数字游戏\n\npublic class demoGame {\n    public static void main(String[] args) {\n        Random r = new Random();\n        int randomNum = r.nextInt(100) + 1;//[1,100]\n        Scanner sc = new Scanner(System.in);\n\n        while (true) {\n            System.out.println(\"请输入：\");\n            int guessNum = sc.nextInt();\n\n            if (guessNum < randomNum) {\n                System.out.println(\"小了\");\n            } else if (guessNum > randomNum) {\n                System.out.println(\"大了\");\n            } else {\n                System.out.println(\"中了\");\n                break;\n            }\n        }\n        System.out.println(\"Over!!!\");\n    }\n}\n```\n\n## ArrayList\n\n**`ArrayList(集合)` 的长度是可以随意变化的。**\n\n**`ArrayList<E>`  其中 E 为泛型，只能是引用类型。**\n\nexp:\n\n```java\nimport java.util.ArrayList;\npublic class demoARRM {\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"李白\");\n        list.add(\"张飞\");\n        list.add(\"伽罗\");\n        list.add(\"干将\");\n\n        System.out.println(list);\n        System.out.println(list.get(1));\n        String whoRemoved = list.remove(2);\n        System.out.println(whoRemoved);\n\n        int size = list.size(); //获取长度\n        System.out.println(size);\n    }\n}\n```\n\n```java\nimport java.util.ArrayList;\npublic class ArrayListeach {\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"C\");\n        list.add(\"D\");\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(list.get(i));\n        }\n    }\n}\n```\n\n\n\n**存储基本类型：使用包装类（大写）**\n\n**注意：**  `Integer`  `character`\n\n## String\n\n**字符串是常量,效果上相当于 `char[]`字符数组，但是底层原理是`byte[]`字节数组。**\n\n### 三种构造方法以及直接创建\n\n```java\npublic String()\npublic String(char[] array)\npublic String(byte[] array)\nString str1 = \"hello\"\n```\n\n\n\nexp:\n\n```java\npackage com.demo14字符串;\n\npublic class DemoStr {\n    public static void main(String[] args) {\n        String str1 = new String();\n\n        char[] charArray = {'a','b','c'};\n        String str2 = new String(charArray);\n\n        byte[] byteArray = {97,98,99};\n        String str3 = new String(byteArray);\n\n        String str4 = \"hello\";\n\n        System.out.println(str1 + str2 + str3 + str4);\n    }\n}\n\n```\n\n\n\n**注意：**\n\n- **使用 `==`比较的是对象的地址值，要用 ` a.equals(b)` 比较字符串内容。**\n\n- **最好用 `常量.equals(变量)`，不然会报空指针异常错误**\n\n- **使用 ` equalsIgnoreCase` 忽略大小写。**\n\n  \n\n  ### **`String`  当中与获取相关的常用方法** \n\n  \n\n| 用法                             |                            含义                            |\n| :------------------------------- | :--------------------------------------------------------: |\n| public int length()              |        获取字符串当中含有的字符个数，拿到字符串长度        |\n| public String concat(String str) |      将当前字符串和参数字符串拼接成为返回值新的字符串      |\n| public charAt(int index)         |                 获取指定索引位置的单个字符                 |\n| public int indexOf(string str)   | 查找参数字符串在本字符串当中首次出现的索引位置，无返回-1值 |\n\n ### 字符串截取\n\n\n\n| 截取参数                                   |                     效果                      |\n| ------------------------------------------ | :-------------------------------------------: |\n| public String substring(int begin,int end) | 截取从begin 开始，一直到end结束，中间的字符串 |\n| public String substring(int index)         | 截取从参数位置一直到字符串末尾，返回新字符串  |\n\n\n\n### 字符串转换\n\n\n\n|                             方法                             |                             效果                             |\n| :----------------------------------------------------------: | :----------------------------------------------------------: |\n|                 public char[] toCharArray()                  |            将当前字符串拆分成为字符数组作为返回值            |\n|                   public byte[] getBytes()                   |                 获得当前字符串底层的字节数组                 |\n| public String replace(CharSequence oldString,CharSequence newString) | 将所有出现的老字符串替换成为新的字符串，返回替换之后的结果新字符串 |\n\n### 字符串分割\n\n**按照参数规则将字符串分成若干部分：**\n\n`public String split(String regex) `\n\n**注意事项： regex 为正则，要按原文句点 `.` 进行划分，必须写  ` \\\\.` 。**\n\n\n\n## static\n\n**无论是成员变量还是成员方法，如果有了 `static`, 推荐使用类名称进行调用。**\n\n**注意： 静态不能访问非静态**\n\n原因：因为在内存当中是先有静态内容，后有非静态内容。\n\n**注意： 静态方法中不能使用 `this`**\n\n原因： `this` 代表当前对象，通过谁调用的方法，谁就是当前对象。\n\n\n\n### 静态代码块 \n\n````java\npublic class 类名称{\n    static {}\n}\n````\n\n**特点：当第一次用到本类时，静态代码执行唯一的一次，比构造方法先执行。**\n\n## Arrays\n\n| 方法                                | 效果                         |\n| ----------------------------------- | ---------------------------- |\n| public static String toString(数组) | 将参数数组变成字符串         |\n| public static void sort(数组)       | 按照生序对数组的元素进行排序 |\n\n**备注：**\n\n* 如果是数值，sort 默认按照升序从小到大。\n\n* 如果是字符串，sort 默认按照字母升序。\n\n* 如果是自定义的类型，那么这个自定义的类需要有Comparable 或者Comparator 接口的支持（今后学习）\n\n  \n\n## Math\n\n\n\n| 方法                                   | 效果       |\n| :------------------------------------- | ---------- |\n| public static double abs(double num)   | 获取绝对值 |\n| public static double ceil(double num)  | 向上取整   |\n| public static double floor(double num) | 向下取整   |\n| public static double round(double num) | 四舍五入   |\n\n**备注：**\n\nMath.PI 代表近似圆周率 （double)\n\n###  Math 小练习\n\n**要求：**\n\n> 计算 -10.8 到 5.9 之间，绝对值大于 6 或者小于 2.1 的整数有多少个？\n\n\n\n**分析：**\n\n1. 既然已经确定了范围，用 for 循环。\n\n2. 起点位置 -10.8 应该转换成为 -10，两种方法：\n\n   2.1 可以使用 Math.ceil 方法，向上（向正方向）取整。\n\n   2.2 强制转换为 int ,自动舍弃所有小数位。\n\n3. 每一个数字都是整数，所以步进表达式应该是 num ++,这样每次都是 +1的。\n\n4. 如何拿到绝对值，用 Math.abs 方法。\n\n5.  一旦发现了应该数字，需要让计数器 ++ 进行统计。\n\n**备注：**\n\n如果使用 Math.ceil 方法， -10.8 可以变成 -10.0 . 注意 double 也是可以进行 ++ 的。\n\n**exp :**\n\n```java\npublic class DemoMath {\n    public static void main(String[] args) {\n        int count = 0;\n        double min = -10.8;\n        double max = 5.9;\n        for(int i = (int) min;i<max;i++){\n            int abs = Math.abs(i);\n            if(abs> 6||abs<2.1){\n                System.out.println(i);\n                count++;\n            }\n        }\n        System.out.println(\"All:\"+count);\n    }\n}\n```\n\n","source":"_posts/JavaSE06.md","raw":"---\ntitle: Java SE 基础系列笔记 (6)\ndate: 2020-02-27 21:07:02\ncategories: Java\ntags: api\ntoc: true\ncomment: true\n---\n\n常用 JAVA API(一) 学习\n\n<!-- more -->\n\n## Scanner\n\nexp:\n\n```java\npackage com.demo09;\nimport java.util.Scanner;\npublic class demoScn {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int num = sc.nextInt();\n        String str =  sc.next();\n        System.out.println(num+str);\n    }\n}\n```\n\n## 匿名对象\n\nexp:\n\n```java\npackage com.demo09;\n\nimport java.util.Scanner;\n\npublic class demoNum {\n    public static void main(String[] args) {\n        methodParam(new Scanner(System.in));\n        \n        Scanner sc = methodReturn();\n        int num = sc.nextInt();\n        System.out.println(\"hhajfi\");\n\n    }\n\n    // 匿名对象作为方法参数\n    public static void methodParam(Scanner sc) {\n        int num = sc.nextInt();\n        System.out.println(num);\n    }\n    // 匿名对象作为返回值\n    public static  Scanner methodReturn(){\n        return new Scanner(System.in);\n    }\n}\n\n```\n\n##  Random\n\nexp:\n\n```java\nimport java.util.Random;\n\npublic class demoRan {\n    public static void main(String[] args) {\n        Random r = new Random();\n        int num  = r.nextInt();\n        System.out.println(num);\n    }\n}\n```\n\n**注意：使用 `nextInt(n)` 为左闭右开区间。**\n\n### 猜数字小游戏\n\n```java\npackage com.demo10;\nimport java.util.Random;\nimport java.util.Scanner;\n\n//猜数字游戏\n\npublic class demoGame {\n    public static void main(String[] args) {\n        Random r = new Random();\n        int randomNum = r.nextInt(100) + 1;//[1,100]\n        Scanner sc = new Scanner(System.in);\n\n        while (true) {\n            System.out.println(\"请输入：\");\n            int guessNum = sc.nextInt();\n\n            if (guessNum < randomNum) {\n                System.out.println(\"小了\");\n            } else if (guessNum > randomNum) {\n                System.out.println(\"大了\");\n            } else {\n                System.out.println(\"中了\");\n                break;\n            }\n        }\n        System.out.println(\"Over!!!\");\n    }\n}\n```\n\n## ArrayList\n\n**`ArrayList(集合)` 的长度是可以随意变化的。**\n\n**`ArrayList<E>`  其中 E 为泛型，只能是引用类型。**\n\nexp:\n\n```java\nimport java.util.ArrayList;\npublic class demoARRM {\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"李白\");\n        list.add(\"张飞\");\n        list.add(\"伽罗\");\n        list.add(\"干将\");\n\n        System.out.println(list);\n        System.out.println(list.get(1));\n        String whoRemoved = list.remove(2);\n        System.out.println(whoRemoved);\n\n        int size = list.size(); //获取长度\n        System.out.println(size);\n    }\n}\n```\n\n```java\nimport java.util.ArrayList;\npublic class ArrayListeach {\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"C\");\n        list.add(\"D\");\n        for (int i = 0; i < list.size(); i++) {\n            System.out.println(list.get(i));\n        }\n    }\n}\n```\n\n\n\n**存储基本类型：使用包装类（大写）**\n\n**注意：**  `Integer`  `character`\n\n## String\n\n**字符串是常量,效果上相当于 `char[]`字符数组，但是底层原理是`byte[]`字节数组。**\n\n### 三种构造方法以及直接创建\n\n```java\npublic String()\npublic String(char[] array)\npublic String(byte[] array)\nString str1 = \"hello\"\n```\n\n\n\nexp:\n\n```java\npackage com.demo14字符串;\n\npublic class DemoStr {\n    public static void main(String[] args) {\n        String str1 = new String();\n\n        char[] charArray = {'a','b','c'};\n        String str2 = new String(charArray);\n\n        byte[] byteArray = {97,98,99};\n        String str3 = new String(byteArray);\n\n        String str4 = \"hello\";\n\n        System.out.println(str1 + str2 + str3 + str4);\n    }\n}\n\n```\n\n\n\n**注意：**\n\n- **使用 `==`比较的是对象的地址值，要用 ` a.equals(b)` 比较字符串内容。**\n\n- **最好用 `常量.equals(变量)`，不然会报空指针异常错误**\n\n- **使用 ` equalsIgnoreCase` 忽略大小写。**\n\n  \n\n  ### **`String`  当中与获取相关的常用方法** \n\n  \n\n| 用法                             |                            含义                            |\n| :------------------------------- | :--------------------------------------------------------: |\n| public int length()              |        获取字符串当中含有的字符个数，拿到字符串长度        |\n| public String concat(String str) |      将当前字符串和参数字符串拼接成为返回值新的字符串      |\n| public charAt(int index)         |                 获取指定索引位置的单个字符                 |\n| public int indexOf(string str)   | 查找参数字符串在本字符串当中首次出现的索引位置，无返回-1值 |\n\n ### 字符串截取\n\n\n\n| 截取参数                                   |                     效果                      |\n| ------------------------------------------ | :-------------------------------------------: |\n| public String substring(int begin,int end) | 截取从begin 开始，一直到end结束，中间的字符串 |\n| public String substring(int index)         | 截取从参数位置一直到字符串末尾，返回新字符串  |\n\n\n\n### 字符串转换\n\n\n\n|                             方法                             |                             效果                             |\n| :----------------------------------------------------------: | :----------------------------------------------------------: |\n|                 public char[] toCharArray()                  |            将当前字符串拆分成为字符数组作为返回值            |\n|                   public byte[] getBytes()                   |                 获得当前字符串底层的字节数组                 |\n| public String replace(CharSequence oldString,CharSequence newString) | 将所有出现的老字符串替换成为新的字符串，返回替换之后的结果新字符串 |\n\n### 字符串分割\n\n**按照参数规则将字符串分成若干部分：**\n\n`public String split(String regex) `\n\n**注意事项： regex 为正则，要按原文句点 `.` 进行划分，必须写  ` \\\\.` 。**\n\n\n\n## static\n\n**无论是成员变量还是成员方法，如果有了 `static`, 推荐使用类名称进行调用。**\n\n**注意： 静态不能访问非静态**\n\n原因：因为在内存当中是先有静态内容，后有非静态内容。\n\n**注意： 静态方法中不能使用 `this`**\n\n原因： `this` 代表当前对象，通过谁调用的方法，谁就是当前对象。\n\n\n\n### 静态代码块 \n\n````java\npublic class 类名称{\n    static {}\n}\n````\n\n**特点：当第一次用到本类时，静态代码执行唯一的一次，比构造方法先执行。**\n\n## Arrays\n\n| 方法                                | 效果                         |\n| ----------------------------------- | ---------------------------- |\n| public static String toString(数组) | 将参数数组变成字符串         |\n| public static void sort(数组)       | 按照生序对数组的元素进行排序 |\n\n**备注：**\n\n* 如果是数值，sort 默认按照升序从小到大。\n\n* 如果是字符串，sort 默认按照字母升序。\n\n* 如果是自定义的类型，那么这个自定义的类需要有Comparable 或者Comparator 接口的支持（今后学习）\n\n  \n\n## Math\n\n\n\n| 方法                                   | 效果       |\n| :------------------------------------- | ---------- |\n| public static double abs(double num)   | 获取绝对值 |\n| public static double ceil(double num)  | 向上取整   |\n| public static double floor(double num) | 向下取整   |\n| public static double round(double num) | 四舍五入   |\n\n**备注：**\n\nMath.PI 代表近似圆周率 （double)\n\n###  Math 小练习\n\n**要求：**\n\n> 计算 -10.8 到 5.9 之间，绝对值大于 6 或者小于 2.1 的整数有多少个？\n\n\n\n**分析：**\n\n1. 既然已经确定了范围，用 for 循环。\n\n2. 起点位置 -10.8 应该转换成为 -10，两种方法：\n\n   2.1 可以使用 Math.ceil 方法，向上（向正方向）取整。\n\n   2.2 强制转换为 int ,自动舍弃所有小数位。\n\n3. 每一个数字都是整数，所以步进表达式应该是 num ++,这样每次都是 +1的。\n\n4. 如何拿到绝对值，用 Math.abs 方法。\n\n5.  一旦发现了应该数字，需要让计数器 ++ 进行统计。\n\n**备注：**\n\n如果使用 Math.ceil 方法， -10.8 可以变成 -10.0 . 注意 double 也是可以进行 ++ 的。\n\n**exp :**\n\n```java\npublic class DemoMath {\n    public static void main(String[] args) {\n        int count = 0;\n        double min = -10.8;\n        double max = 5.9;\n        for(int i = (int) min;i<max;i++){\n            int abs = Math.abs(i);\n            if(abs> 6||abs<2.1){\n                System.out.println(i);\n                count++;\n            }\n        }\n        System.out.println(\"All:\"+count);\n    }\n}\n```\n\n","slug":"JavaSE06","published":1,"updated":"2020-03-06T13:39:24.950Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt14000hysstfwyefx3s","content":"<p>常用 JAVA API(一) 学习</p>\n<a id=\"more\"></a>\n\n<h2 id=\"Scanner\"><a href=\"#Scanner\" class=\"headerlink\" title=\"Scanner\"></a>Scanner</h2><p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo09;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoScn</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = sc.nextInt();</span><br><span class=\"line\">        String str =  sc.next();</span><br><span class=\"line\">        System.out.println(num+str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"匿名对象\"><a href=\"#匿名对象\" class=\"headerlink\" title=\"匿名对象\"></a>匿名对象</h2><p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo09;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoNum</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        methodParam(<span class=\"keyword\">new</span> Scanner(System.in));</span><br><span class=\"line\">        </span><br><span class=\"line\">        Scanner sc = methodReturn();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = sc.nextInt();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"hhajfi\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 匿名对象作为方法参数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">methodParam</span><span class=\"params\">(Scanner sc)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = sc.nextInt();</span><br><span class=\"line\">        System.out.println(num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 匿名对象作为返回值</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  Scanner <span class=\"title\">methodReturn</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Random\"><a href=\"#Random\" class=\"headerlink\" title=\"Random\"></a>Random</h2><p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoRan</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Random r = <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num  = r.nextInt();</span><br><span class=\"line\">        System.out.println(num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：使用 <code>nextInt(n)</code> 为左闭右开区间。</strong></p>\n<h3 id=\"猜数字小游戏\"><a href=\"#猜数字小游戏\" class=\"headerlink\" title=\"猜数字小游戏\"></a>猜数字小游戏</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo10;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//猜数字游戏</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoGame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Random r = <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> randomNum = r.nextInt(<span class=\"number\">100</span>) + <span class=\"number\">1</span>;<span class=\"comment\">//[1,100]</span></span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"请输入：\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> guessNum = sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (guessNum &lt; randomNum) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"小了\"</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (guessNum &gt; randomNum) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"大了\"</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"中了\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Over!!!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ArrayList\"><a href=\"#ArrayList\" class=\"headerlink\" title=\"ArrayList\"></a>ArrayList</h2><p><strong><code>ArrayList(集合)</code> 的长度是可以随意变化的。</strong></p>\n<p><strong><code>ArrayList&lt;E&gt;</code>  其中 E 为泛型，只能是引用类型。</strong></p>\n<p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoARRM</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ArrayList&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"string\">\"李白\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"张飞\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"伽罗\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"干将\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\">        System.out.println(list.get(<span class=\"number\">1</span>));</span><br><span class=\"line\">        String whoRemoved = list.remove(<span class=\"number\">2</span>);</span><br><span class=\"line\">        System.out.println(whoRemoved);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> size = list.size(); <span class=\"comment\">//获取长度</span></span><br><span class=\"line\">        System.out.println(size);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArrayListeach</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ArrayList&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"string\">\"A\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"B\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"C\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"D\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class=\"line\">            System.out.println(list.get(i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>存储基本类型：使用包装类（大写）</strong></p>\n<p><strong>注意：</strong>  <code>Integer</code>  <code>character</code></p>\n<h2 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h2><p><strong>字符串是常量,效果上相当于 <code>char[]</code>字符数组，但是底层原理是<code>byte[]</code>字节数组。</strong></p>\n<h3 id=\"三种构造方法以及直接创建\"><a href=\"#三种构造方法以及直接创建\" class=\"headerlink\" title=\"三种构造方法以及直接创建\"></a>三种构造方法以及直接创建</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">String</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">String</span><span class=\"params\">(<span class=\"keyword\">char</span>[] array)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">String</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] array)</span></span></span><br><span class=\"line\"><span class=\"function\">String str1 </span>= <span class=\"string\">\"hello\"</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo14字符串;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoStr</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        String str1 = <span class=\"keyword\">new</span> String();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] charArray = &#123;<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>&#125;;</span><br><span class=\"line\">        String str2 = <span class=\"keyword\">new</span> String(charArray);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] byteArray = &#123;<span class=\"number\">97</span>,<span class=\"number\">98</span>,<span class=\"number\">99</span>&#125;;</span><br><span class=\"line\">        String str3 = <span class=\"keyword\">new</span> String(byteArray);</span><br><span class=\"line\"></span><br><span class=\"line\">        String str4 = <span class=\"string\">\"hello\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(str1 + str2 + str3 + str4);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>注意：</strong></p>\n<ul>\n<li><p><strong>使用 <code>==</code>比较的是对象的地址值，要用 <code>a.equals(b)</code> 比较字符串内容。</strong></p>\n</li>\n<li><p><strong>最好用 <code>常量.equals(变量)</code>，不然会报空指针异常错误</strong></p>\n</li>\n<li><p><strong>使用 <code>equalsIgnoreCase</code> 忽略大小写。</strong></p>\n</li>\n</ul>\n<h3 id=\"String-当中与获取相关的常用方法\"><a href=\"#String-当中与获取相关的常用方法\" class=\"headerlink\" title=\"String  当中与获取相关的常用方法\"></a><strong><code>String</code>  当中与获取相关的常用方法</strong></h3><table>\n<thead>\n<tr>\n<th align=\"left\">用法</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">public int length()</td>\n<td align=\"center\">获取字符串当中含有的字符个数，拿到字符串长度</td>\n</tr>\n<tr>\n<td align=\"left\">public String concat(String str)</td>\n<td align=\"center\">将当前字符串和参数字符串拼接成为返回值新的字符串</td>\n</tr>\n<tr>\n<td align=\"left\">public charAt(int index)</td>\n<td align=\"center\">获取指定索引位置的单个字符</td>\n</tr>\n<tr>\n<td align=\"left\">public int indexOf(string str)</td>\n<td align=\"center\">查找参数字符串在本字符串当中首次出现的索引位置，无返回-1值</td>\n</tr>\n</tbody></table>\n<h3 id=\"字符串截取\"><a href=\"#字符串截取\" class=\"headerlink\" title=\"字符串截取\"></a>字符串截取</h3><table>\n<thead>\n<tr>\n<th>截取参数</th>\n<th align=\"center\">效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>public String substring(int begin,int end)</td>\n<td align=\"center\">截取从begin 开始，一直到end结束，中间的字符串</td>\n</tr>\n<tr>\n<td>public String substring(int index)</td>\n<td align=\"center\">截取从参数位置一直到字符串末尾，返回新字符串</td>\n</tr>\n</tbody></table>\n<h3 id=\"字符串转换\"><a href=\"#字符串转换\" class=\"headerlink\" title=\"字符串转换\"></a>字符串转换</h3><table>\n<thead>\n<tr>\n<th align=\"center\">方法</th>\n<th align=\"center\">效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public char[] toCharArray()</td>\n<td align=\"center\">将当前字符串拆分成为字符数组作为返回值</td>\n</tr>\n<tr>\n<td align=\"center\">public byte[] getBytes()</td>\n<td align=\"center\">获得当前字符串底层的字节数组</td>\n</tr>\n<tr>\n<td align=\"center\">public String replace(CharSequence oldString,CharSequence newString)</td>\n<td align=\"center\">将所有出现的老字符串替换成为新的字符串，返回替换之后的结果新字符串</td>\n</tr>\n</tbody></table>\n<h3 id=\"字符串分割\"><a href=\"#字符串分割\" class=\"headerlink\" title=\"字符串分割\"></a>字符串分割</h3><p><strong>按照参数规则将字符串分成若干部分：</strong></p>\n<p><code>public String split(String regex)</code></p>\n<p><strong>注意事项： regex 为正则，要按原文句点 <code>.</code> 进行划分，必须写  <code>\\\\.</code> 。</strong></p>\n<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><p><strong>无论是成员变量还是成员方法，如果有了 <code>static</code>, 推荐使用类名称进行调用。</strong></p>\n<p><strong>注意： 静态不能访问非静态</strong></p>\n<p>原因：因为在内存当中是先有静态内容，后有非静态内容。</p>\n<p><strong>注意： 静态方法中不能使用 <code>this</code></strong></p>\n<p>原因： <code>this</code> 代表当前对象，通过谁调用的方法，谁就是当前对象。</p>\n<h3 id=\"静态代码块\"><a href=\"#静态代码块\" class=\"headerlink\" title=\"静态代码块\"></a>静态代码块</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> 类名称</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>特点：当第一次用到本类时，静态代码执行唯一的一次，比构造方法先执行。</strong></p>\n<h2 id=\"Arrays\"><a href=\"#Arrays\" class=\"headerlink\" title=\"Arrays\"></a>Arrays</h2><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>public static String toString(数组)</td>\n<td>将参数数组变成字符串</td>\n</tr>\n<tr>\n<td>public static void sort(数组)</td>\n<td>按照生序对数组的元素进行排序</td>\n</tr>\n</tbody></table>\n<p><strong>备注：</strong></p>\n<ul>\n<li><p>如果是数值，sort 默认按照升序从小到大。</p>\n</li>\n<li><p>如果是字符串，sort 默认按照字母升序。</p>\n</li>\n<li><p>如果是自定义的类型，那么这个自定义的类需要有Comparable 或者Comparator 接口的支持（今后学习）</p>\n</li>\n</ul>\n<h2 id=\"Math\"><a href=\"#Math\" class=\"headerlink\" title=\"Math\"></a>Math</h2><table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">public static double abs(double num)</td>\n<td>获取绝对值</td>\n</tr>\n<tr>\n<td align=\"left\">public static double ceil(double num)</td>\n<td>向上取整</td>\n</tr>\n<tr>\n<td align=\"left\">public static double floor(double num)</td>\n<td>向下取整</td>\n</tr>\n<tr>\n<td align=\"left\">public static double round(double num)</td>\n<td>四舍五入</td>\n</tr>\n</tbody></table>\n<p><strong>备注：</strong></p>\n<p>Math.PI 代表近似圆周率 （double)</p>\n<h3 id=\"Math-小练习\"><a href=\"#Math-小练习\" class=\"headerlink\" title=\"Math 小练习\"></a>Math 小练习</h3><p><strong>要求：</strong></p>\n<blockquote>\n<p>计算 -10.8 到 5.9 之间，绝对值大于 6 或者小于 2.1 的整数有多少个？</p>\n</blockquote>\n<p><strong>分析：</strong></p>\n<ol>\n<li><p>既然已经确定了范围，用 for 循环。</p>\n</li>\n<li><p>起点位置 -10.8 应该转换成为 -10，两种方法：</p>\n<p>2.1 可以使用 Math.ceil 方法，向上（向正方向）取整。</p>\n<p>2.2 强制转换为 int ,自动舍弃所有小数位。</p>\n</li>\n<li><p>每一个数字都是整数，所以步进表达式应该是 num ++,这样每次都是 +1的。</p>\n</li>\n<li><p>如何拿到绝对值，用 Math.abs 方法。</p>\n</li>\n<li><p>一旦发现了应该数字，需要让计数器 ++ 进行统计。</p>\n</li>\n</ol>\n<p><strong>备注：</strong></p>\n<p>如果使用 Math.ceil 方法， -10.8 可以变成 -10.0 . 注意 double 也是可以进行 ++ 的。</p>\n<p><strong>exp :</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoMath</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> min = -<span class=\"number\">10.8</span>;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> max = <span class=\"number\">5.9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = (<span class=\"keyword\">int</span>) min;i&lt;max;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> abs = Math.abs(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(abs&gt; <span class=\"number\">6</span>||abs&lt;<span class=\"number\">2.1</span>)&#123;</span><br><span class=\"line\">                System.out.println(i);</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"All:\"</span>+count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>常用 JAVA API(一) 学习</p>","more":"<h2 id=\"Scanner\"><a href=\"#Scanner\" class=\"headerlink\" title=\"Scanner\"></a>Scanner</h2><p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo09;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoScn</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = sc.nextInt();</span><br><span class=\"line\">        String str =  sc.next();</span><br><span class=\"line\">        System.out.println(num+str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"匿名对象\"><a href=\"#匿名对象\" class=\"headerlink\" title=\"匿名对象\"></a>匿名对象</h2><p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo09;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoNum</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        methodParam(<span class=\"keyword\">new</span> Scanner(System.in));</span><br><span class=\"line\">        </span><br><span class=\"line\">        Scanner sc = methodReturn();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = sc.nextInt();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"hhajfi\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 匿名对象作为方法参数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">methodParam</span><span class=\"params\">(Scanner sc)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = sc.nextInt();</span><br><span class=\"line\">        System.out.println(num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 匿名对象作为返回值</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  Scanner <span class=\"title\">methodReturn</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Random\"><a href=\"#Random\" class=\"headerlink\" title=\"Random\"></a>Random</h2><p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoRan</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Random r = <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num  = r.nextInt();</span><br><span class=\"line\">        System.out.println(num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：使用 <code>nextInt(n)</code> 为左闭右开区间。</strong></p>\n<h3 id=\"猜数字小游戏\"><a href=\"#猜数字小游戏\" class=\"headerlink\" title=\"猜数字小游戏\"></a>猜数字小游戏</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo10;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//猜数字游戏</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoGame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Random r = <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> randomNum = r.nextInt(<span class=\"number\">100</span>) + <span class=\"number\">1</span>;<span class=\"comment\">//[1,100]</span></span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"请输入：\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> guessNum = sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (guessNum &lt; randomNum) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"小了\"</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (guessNum &gt; randomNum) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"大了\"</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"中了\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Over!!!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ArrayList\"><a href=\"#ArrayList\" class=\"headerlink\" title=\"ArrayList\"></a>ArrayList</h2><p><strong><code>ArrayList(集合)</code> 的长度是可以随意变化的。</strong></p>\n<p><strong><code>ArrayList&lt;E&gt;</code>  其中 E 为泛型，只能是引用类型。</strong></p>\n<p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoARRM</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ArrayList&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"string\">\"李白\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"张飞\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"伽罗\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"干将\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\">        System.out.println(list.get(<span class=\"number\">1</span>));</span><br><span class=\"line\">        String whoRemoved = list.remove(<span class=\"number\">2</span>);</span><br><span class=\"line\">        System.out.println(whoRemoved);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> size = list.size(); <span class=\"comment\">//获取长度</span></span><br><span class=\"line\">        System.out.println(size);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArrayListeach</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ArrayList&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"string\">\"A\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"B\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"C\"</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">\"D\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class=\"line\">            System.out.println(list.get(i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>存储基本类型：使用包装类（大写）</strong></p>\n<p><strong>注意：</strong>  <code>Integer</code>  <code>character</code></p>\n<h2 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h2><p><strong>字符串是常量,效果上相当于 <code>char[]</code>字符数组，但是底层原理是<code>byte[]</code>字节数组。</strong></p>\n<h3 id=\"三种构造方法以及直接创建\"><a href=\"#三种构造方法以及直接创建\" class=\"headerlink\" title=\"三种构造方法以及直接创建\"></a>三种构造方法以及直接创建</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">String</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">String</span><span class=\"params\">(<span class=\"keyword\">char</span>[] array)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">String</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] array)</span></span></span><br><span class=\"line\"><span class=\"function\">String str1 </span>= <span class=\"string\">\"hello\"</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>exp:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo14字符串;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoStr</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        String str1 = <span class=\"keyword\">new</span> String();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] charArray = &#123;<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>&#125;;</span><br><span class=\"line\">        String str2 = <span class=\"keyword\">new</span> String(charArray);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] byteArray = &#123;<span class=\"number\">97</span>,<span class=\"number\">98</span>,<span class=\"number\">99</span>&#125;;</span><br><span class=\"line\">        String str3 = <span class=\"keyword\">new</span> String(byteArray);</span><br><span class=\"line\"></span><br><span class=\"line\">        String str4 = <span class=\"string\">\"hello\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(str1 + str2 + str3 + str4);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>注意：</strong></p>\n<ul>\n<li><p><strong>使用 <code>==</code>比较的是对象的地址值，要用 <code>a.equals(b)</code> 比较字符串内容。</strong></p>\n</li>\n<li><p><strong>最好用 <code>常量.equals(变量)</code>，不然会报空指针异常错误</strong></p>\n</li>\n<li><p><strong>使用 <code>equalsIgnoreCase</code> 忽略大小写。</strong></p>\n</li>\n</ul>\n<h3 id=\"String-当中与获取相关的常用方法\"><a href=\"#String-当中与获取相关的常用方法\" class=\"headerlink\" title=\"String  当中与获取相关的常用方法\"></a><strong><code>String</code>  当中与获取相关的常用方法</strong></h3><table>\n<thead>\n<tr>\n<th align=\"left\">用法</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">public int length()</td>\n<td align=\"center\">获取字符串当中含有的字符个数，拿到字符串长度</td>\n</tr>\n<tr>\n<td align=\"left\">public String concat(String str)</td>\n<td align=\"center\">将当前字符串和参数字符串拼接成为返回值新的字符串</td>\n</tr>\n<tr>\n<td align=\"left\">public charAt(int index)</td>\n<td align=\"center\">获取指定索引位置的单个字符</td>\n</tr>\n<tr>\n<td align=\"left\">public int indexOf(string str)</td>\n<td align=\"center\">查找参数字符串在本字符串当中首次出现的索引位置，无返回-1值</td>\n</tr>\n</tbody></table>\n<h3 id=\"字符串截取\"><a href=\"#字符串截取\" class=\"headerlink\" title=\"字符串截取\"></a>字符串截取</h3><table>\n<thead>\n<tr>\n<th>截取参数</th>\n<th align=\"center\">效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>public String substring(int begin,int end)</td>\n<td align=\"center\">截取从begin 开始，一直到end结束，中间的字符串</td>\n</tr>\n<tr>\n<td>public String substring(int index)</td>\n<td align=\"center\">截取从参数位置一直到字符串末尾，返回新字符串</td>\n</tr>\n</tbody></table>\n<h3 id=\"字符串转换\"><a href=\"#字符串转换\" class=\"headerlink\" title=\"字符串转换\"></a>字符串转换</h3><table>\n<thead>\n<tr>\n<th align=\"center\">方法</th>\n<th align=\"center\">效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public char[] toCharArray()</td>\n<td align=\"center\">将当前字符串拆分成为字符数组作为返回值</td>\n</tr>\n<tr>\n<td align=\"center\">public byte[] getBytes()</td>\n<td align=\"center\">获得当前字符串底层的字节数组</td>\n</tr>\n<tr>\n<td align=\"center\">public String replace(CharSequence oldString,CharSequence newString)</td>\n<td align=\"center\">将所有出现的老字符串替换成为新的字符串，返回替换之后的结果新字符串</td>\n</tr>\n</tbody></table>\n<h3 id=\"字符串分割\"><a href=\"#字符串分割\" class=\"headerlink\" title=\"字符串分割\"></a>字符串分割</h3><p><strong>按照参数规则将字符串分成若干部分：</strong></p>\n<p><code>public String split(String regex)</code></p>\n<p><strong>注意事项： regex 为正则，要按原文句点 <code>.</code> 进行划分，必须写  <code>\\\\.</code> 。</strong></p>\n<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><p><strong>无论是成员变量还是成员方法，如果有了 <code>static</code>, 推荐使用类名称进行调用。</strong></p>\n<p><strong>注意： 静态不能访问非静态</strong></p>\n<p>原因：因为在内存当中是先有静态内容，后有非静态内容。</p>\n<p><strong>注意： 静态方法中不能使用 <code>this</code></strong></p>\n<p>原因： <code>this</code> 代表当前对象，通过谁调用的方法，谁就是当前对象。</p>\n<h3 id=\"静态代码块\"><a href=\"#静态代码块\" class=\"headerlink\" title=\"静态代码块\"></a>静态代码块</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> 类名称</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>特点：当第一次用到本类时，静态代码执行唯一的一次，比构造方法先执行。</strong></p>\n<h2 id=\"Arrays\"><a href=\"#Arrays\" class=\"headerlink\" title=\"Arrays\"></a>Arrays</h2><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>public static String toString(数组)</td>\n<td>将参数数组变成字符串</td>\n</tr>\n<tr>\n<td>public static void sort(数组)</td>\n<td>按照生序对数组的元素进行排序</td>\n</tr>\n</tbody></table>\n<p><strong>备注：</strong></p>\n<ul>\n<li><p>如果是数值，sort 默认按照升序从小到大。</p>\n</li>\n<li><p>如果是字符串，sort 默认按照字母升序。</p>\n</li>\n<li><p>如果是自定义的类型，那么这个自定义的类需要有Comparable 或者Comparator 接口的支持（今后学习）</p>\n</li>\n</ul>\n<h2 id=\"Math\"><a href=\"#Math\" class=\"headerlink\" title=\"Math\"></a>Math</h2><table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">public static double abs(double num)</td>\n<td>获取绝对值</td>\n</tr>\n<tr>\n<td align=\"left\">public static double ceil(double num)</td>\n<td>向上取整</td>\n</tr>\n<tr>\n<td align=\"left\">public static double floor(double num)</td>\n<td>向下取整</td>\n</tr>\n<tr>\n<td align=\"left\">public static double round(double num)</td>\n<td>四舍五入</td>\n</tr>\n</tbody></table>\n<p><strong>备注：</strong></p>\n<p>Math.PI 代表近似圆周率 （double)</p>\n<h3 id=\"Math-小练习\"><a href=\"#Math-小练习\" class=\"headerlink\" title=\"Math 小练习\"></a>Math 小练习</h3><p><strong>要求：</strong></p>\n<blockquote>\n<p>计算 -10.8 到 5.9 之间，绝对值大于 6 或者小于 2.1 的整数有多少个？</p>\n</blockquote>\n<p><strong>分析：</strong></p>\n<ol>\n<li><p>既然已经确定了范围，用 for 循环。</p>\n</li>\n<li><p>起点位置 -10.8 应该转换成为 -10，两种方法：</p>\n<p>2.1 可以使用 Math.ceil 方法，向上（向正方向）取整。</p>\n<p>2.2 强制转换为 int ,自动舍弃所有小数位。</p>\n</li>\n<li><p>每一个数字都是整数，所以步进表达式应该是 num ++,这样每次都是 +1的。</p>\n</li>\n<li><p>如何拿到绝对值，用 Math.abs 方法。</p>\n</li>\n<li><p>一旦发现了应该数字，需要让计数器 ++ 进行统计。</p>\n</li>\n</ol>\n<p><strong>备注：</strong></p>\n<p>如果使用 Math.ceil 方法， -10.8 可以变成 -10.0 . 注意 double 也是可以进行 ++ 的。</p>\n<p><strong>exp :</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoMath</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> min = -<span class=\"number\">10.8</span>;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> max = <span class=\"number\">5.9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = (<span class=\"keyword\">int</span>) min;i&lt;max;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> abs = Math.abs(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(abs&gt; <span class=\"number\">6</span>||abs&lt;<span class=\"number\">2.1</span>)&#123;</span><br><span class=\"line\">                System.out.println(i);</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"All:\"</span>+count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java SE 基础系列笔记 (7)","article-thumbnail":false,"keywords":["JAVA"],"top":100,"toc":true,"date":"2020-03-09T13:19:02.000Z","thumbnail":null,"_content":"\n常用 JAVA API 学习 （二）\n<!-- more -->\n\n## Object类\n\n###  toString 重写\n\n打印对象中的属性值\n\n### equals 重写\n\n比较对象属性值\n\n**注意：**\n\n用对象工具类 objects.equals() 比较更加健壮。\n\n**exp**\n\n```java\npackage com.demo18;\nimport com.demo17.Student;\nimport java.util.Objects;\npublic class RT {\n    public static void main(String[] args) {\n        Student stu1 = new Student(\"lsk\",12);\n        Student stu2 = new Student(\"lsk\",12);\n        System.out.println(stu1.equals(stu2));// 重写 equals\n\n        String a = \"aaa\";\n        String b = null;\n//        System.out.println(b.equals(a));//空指针不能调用方法\n        System.out.println(Objects.equals(a,b));\n    }\n}\n\n```\n\n```java\npackage com.demo17;\nimport java.util.Objects;\npublic class Student {\n    private String name;\n    private  int  age;\n\n    public Student() {\n    }\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n// 覆写 toString\n    @Override\n    public String toString() {\n        return \"Student{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                '}';\n    }\n// 覆写 equals\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Student student = (Student) o;\n        return age == student.age &&\n                Objects.equals(name, student.name);\n    }\n}\n\n```\n\n## Date类\n\n* 使用 System.currentTimeMillis() 获取距离时间原点的毫秒值\n\n* 使用 .getTime() 效果同上\n\n* 使用 Date( 参数l ) 带参数构造使毫秒转为日期\n\n* 使用 toLocalString 根据本地格式转换日期对象\n\n* 空参\n\n  \n\n```java\nimport java.util.Date;\npublic class demoDate1 {\n    public static void main(String[] args) {\n        Date date = new Date();\n        System.out.println(date);\n\n        Date d1 = new Date(0l);\n        System.out.println(d1);\n\n        Date d2 = new Date();\n        System.out.println(d2.getTime());\n        System.out.println(System.currentTimeMillis());\n    }\n}\n```\n\n\n\n## DateFormat 类\n\nDateFormat 是日期/时间格式化子类的抽象类，不能直接使用，需要其子类   `SimpleDateFormat`  , 这个类需要一个模式（格式）来指定货解析的标准。\n\n构造方法如下：\n\n` public SimpleDateFormat(String pattern)`  \n\n其中 pattern为日期时间的自定义格式。\n\n**格式规则**:\n\n| 标识字母（区分大小写） | 含义 |\n| ---------------------- | ---- |\n| y                      | 年   |\n| M                      | 月   |\n| d                      | 日   |\n| H                      | 时   |\n| m                      | 分   |\n| s                      | 秒   |\n\n使用 SimpleDateFormat 的 format 方法按照指定模式，把日期格式化符合模式的字符串。\n\n使用其 parse 方法把符合模式的字符串，解析为 Date 日期。\n\n**exp:**\n\n```java\npackage com.demo20;\nimport sun.security.provider.Sun;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class demoD {\n    public static void main(String[] args) throws ParseException {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy年MM月dd日HH时mm分ss秒\");\n        Date date = new Date();\n        System.out.println(date);\n        System.out.println(sdf.format(date));\n\n        Date date1 = sdf.parse(\"2020年03月08日19时59分42秒\");\n        System.out.println(date1);\n    }\n}\n//结果如下\n/*      Sun Mar 08 20:40:03 CST 2020\n        2020年03月08日20时40分03秒\n        Sun Mar 08 19:59:42 CST 2020    \n */\n```\n\n### 小练习：粗略计算年龄 \n\n```java\npackage com.demo21;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Scanner;\n//粗略计算年龄\npublic class DemoMath {\n    public static void main(String[] args) throws ParseException {\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入您的出生日期:（格式为 yyyyMMdd)\");\n        String receiveDate = sc.next();\n        SimpleDateFormat sdf= new SimpleDateFormat(\"yyyyMMdd\");\n        Date birthdayDate = sdf.parse(receiveDate);\n        long brthdayDateTime = birthdayDate.getTime();\n        long todayTime = new Date().getTime();\n        System.out.println((todayTime - brthdayDateTime)/1000/60/60/24/365);\n    }\n}\n\n```\n\n## Calendar\n\nCalendar类为抽象类，提供了很多操作日历字段的方法，使用其静态方法 `getInstance()`返回子类对象。\n\n| 成员方法                  | 作用                             |\n| ------------------------- | -------------------------------- |\n| int get(int n)            | 获取指定日历字段信息             |\n| void set(int n,int value) | 将指定日历字段设置为指定的值     |\n| void add(int n,int value) | 将指定日历字段增加或减少指定的值 |\n| Date getTime()            | 转换为 Date 对象                           |\n\n## System\n\n- ` public  static long currentTimeMills()`： 返回以毫秒为单位的当前时间。\n\n-  ` public static void arraycopy(Object src,int srcPos,Object dest,int destPos,int length)`: 将数组中指定的数据拷贝到另一个数组中。\n\n  \n\n## StringBuilder（**字符串缓冲区**）\n\n\n\n### 构造方法\n\n- **public StringBuilder()**:构造一个空的容器。\n\n- **public StringBuilder(String str)**: 构造一个StringBuilder容器，并将字符串添加进去。\n\n\n\n### 成员方法\n- **public StringBuilder append()**:   添加容易类型的字符串形式，返回当前对象自身（可链式编程）。\n\n- **public StringBuilder reverse()**:   反转内容。\n\n- **public  String  toString()**:  将当前 StringBuilder 对下转换为 String 对象。\n\n  \n\n## 包装类\n\n### 装箱与拆箱\n\n**装箱：把基本类型的数据包装到包装类中（基本类型的数据- >包装类）**\n\n**拆箱：在包装类中取出基本类型的数据（包装类->基本数据类型）**\n\n**exp:**\n\n```java\npublic class demoBox {\n    public static void main(String[] args) {\n        //装箱\n        //构造方法\n        Integer in1 = new Integer(1);\n        System.out.println(in1);\n        Integer in2 = new Integer(\"1\");\n        System.out.println(in2);\n\n        // 静态方法\n        Integer in3 = Integer.valueOf(1);\n        System.out.println(in3);\n        Integer in4 = Integer.valueOf(\"1\");\n        System.out.println(in4);\n        \n        //拆箱\n        int i = in1.intValue();\n        System.out.println(i);\n    }\n}\n```\n\n##  自动装箱与自动拆箱（>JDK1.5)\n\n```java\nimport java.util.ArrayList;\n\npublic class demoBoo {\n    public static void main(String[] args) {\n        //自动装箱\n        Integer in = 1;//相当于 Integer in = new Integer(1)\n        //自动拆箱\n        in = in +2;\n\n        ArrayList<Integer> list = new ArrayList<>();\n        list.add(1);  //list.add(new Integer(1)\n        int a = list.get(0);//list.get(0).intValue\n    }\n}\n```\n\n\n\n## 基本类型与字符串之间的转换\n\n1. 直接 基本数据类型  +  \"\"（常用）\n2. 使用 toString(value)、parseInt等（注意格式）","source":"_posts/JavaSE07.md","raw":"---\ntitle: Java SE 基础系列笔记 (7)\narticle-thumbnail: false\nkeywords: [JAVA]\ntop: 100\ntoc: true\ntags: [api]\ndate: 2020-03-09 21:19:02\nthumbnail:\ncategories: Java\n---\n\n常用 JAVA API 学习 （二）\n<!-- more -->\n\n## Object类\n\n###  toString 重写\n\n打印对象中的属性值\n\n### equals 重写\n\n比较对象属性值\n\n**注意：**\n\n用对象工具类 objects.equals() 比较更加健壮。\n\n**exp**\n\n```java\npackage com.demo18;\nimport com.demo17.Student;\nimport java.util.Objects;\npublic class RT {\n    public static void main(String[] args) {\n        Student stu1 = new Student(\"lsk\",12);\n        Student stu2 = new Student(\"lsk\",12);\n        System.out.println(stu1.equals(stu2));// 重写 equals\n\n        String a = \"aaa\";\n        String b = null;\n//        System.out.println(b.equals(a));//空指针不能调用方法\n        System.out.println(Objects.equals(a,b));\n    }\n}\n\n```\n\n```java\npackage com.demo17;\nimport java.util.Objects;\npublic class Student {\n    private String name;\n    private  int  age;\n\n    public Student() {\n    }\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n// 覆写 toString\n    @Override\n    public String toString() {\n        return \"Student{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                '}';\n    }\n// 覆写 equals\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        Student student = (Student) o;\n        return age == student.age &&\n                Objects.equals(name, student.name);\n    }\n}\n\n```\n\n## Date类\n\n* 使用 System.currentTimeMillis() 获取距离时间原点的毫秒值\n\n* 使用 .getTime() 效果同上\n\n* 使用 Date( 参数l ) 带参数构造使毫秒转为日期\n\n* 使用 toLocalString 根据本地格式转换日期对象\n\n* 空参\n\n  \n\n```java\nimport java.util.Date;\npublic class demoDate1 {\n    public static void main(String[] args) {\n        Date date = new Date();\n        System.out.println(date);\n\n        Date d1 = new Date(0l);\n        System.out.println(d1);\n\n        Date d2 = new Date();\n        System.out.println(d2.getTime());\n        System.out.println(System.currentTimeMillis());\n    }\n}\n```\n\n\n\n## DateFormat 类\n\nDateFormat 是日期/时间格式化子类的抽象类，不能直接使用，需要其子类   `SimpleDateFormat`  , 这个类需要一个模式（格式）来指定货解析的标准。\n\n构造方法如下：\n\n` public SimpleDateFormat(String pattern)`  \n\n其中 pattern为日期时间的自定义格式。\n\n**格式规则**:\n\n| 标识字母（区分大小写） | 含义 |\n| ---------------------- | ---- |\n| y                      | 年   |\n| M                      | 月   |\n| d                      | 日   |\n| H                      | 时   |\n| m                      | 分   |\n| s                      | 秒   |\n\n使用 SimpleDateFormat 的 format 方法按照指定模式，把日期格式化符合模式的字符串。\n\n使用其 parse 方法把符合模式的字符串，解析为 Date 日期。\n\n**exp:**\n\n```java\npackage com.demo20;\nimport sun.security.provider.Sun;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class demoD {\n    public static void main(String[] args) throws ParseException {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy年MM月dd日HH时mm分ss秒\");\n        Date date = new Date();\n        System.out.println(date);\n        System.out.println(sdf.format(date));\n\n        Date date1 = sdf.parse(\"2020年03月08日19时59分42秒\");\n        System.out.println(date1);\n    }\n}\n//结果如下\n/*      Sun Mar 08 20:40:03 CST 2020\n        2020年03月08日20时40分03秒\n        Sun Mar 08 19:59:42 CST 2020    \n */\n```\n\n### 小练习：粗略计算年龄 \n\n```java\npackage com.demo21;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Scanner;\n//粗略计算年龄\npublic class DemoMath {\n    public static void main(String[] args) throws ParseException {\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入您的出生日期:（格式为 yyyyMMdd)\");\n        String receiveDate = sc.next();\n        SimpleDateFormat sdf= new SimpleDateFormat(\"yyyyMMdd\");\n        Date birthdayDate = sdf.parse(receiveDate);\n        long brthdayDateTime = birthdayDate.getTime();\n        long todayTime = new Date().getTime();\n        System.out.println((todayTime - brthdayDateTime)/1000/60/60/24/365);\n    }\n}\n\n```\n\n## Calendar\n\nCalendar类为抽象类，提供了很多操作日历字段的方法，使用其静态方法 `getInstance()`返回子类对象。\n\n| 成员方法                  | 作用                             |\n| ------------------------- | -------------------------------- |\n| int get(int n)            | 获取指定日历字段信息             |\n| void set(int n,int value) | 将指定日历字段设置为指定的值     |\n| void add(int n,int value) | 将指定日历字段增加或减少指定的值 |\n| Date getTime()            | 转换为 Date 对象                           |\n\n## System\n\n- ` public  static long currentTimeMills()`： 返回以毫秒为单位的当前时间。\n\n-  ` public static void arraycopy(Object src,int srcPos,Object dest,int destPos,int length)`: 将数组中指定的数据拷贝到另一个数组中。\n\n  \n\n## StringBuilder（**字符串缓冲区**）\n\n\n\n### 构造方法\n\n- **public StringBuilder()**:构造一个空的容器。\n\n- **public StringBuilder(String str)**: 构造一个StringBuilder容器，并将字符串添加进去。\n\n\n\n### 成员方法\n- **public StringBuilder append()**:   添加容易类型的字符串形式，返回当前对象自身（可链式编程）。\n\n- **public StringBuilder reverse()**:   反转内容。\n\n- **public  String  toString()**:  将当前 StringBuilder 对下转换为 String 对象。\n\n  \n\n## 包装类\n\n### 装箱与拆箱\n\n**装箱：把基本类型的数据包装到包装类中（基本类型的数据- >包装类）**\n\n**拆箱：在包装类中取出基本类型的数据（包装类->基本数据类型）**\n\n**exp:**\n\n```java\npublic class demoBox {\n    public static void main(String[] args) {\n        //装箱\n        //构造方法\n        Integer in1 = new Integer(1);\n        System.out.println(in1);\n        Integer in2 = new Integer(\"1\");\n        System.out.println(in2);\n\n        // 静态方法\n        Integer in3 = Integer.valueOf(1);\n        System.out.println(in3);\n        Integer in4 = Integer.valueOf(\"1\");\n        System.out.println(in4);\n        \n        //拆箱\n        int i = in1.intValue();\n        System.out.println(i);\n    }\n}\n```\n\n##  自动装箱与自动拆箱（>JDK1.5)\n\n```java\nimport java.util.ArrayList;\n\npublic class demoBoo {\n    public static void main(String[] args) {\n        //自动装箱\n        Integer in = 1;//相当于 Integer in = new Integer(1)\n        //自动拆箱\n        in = in +2;\n\n        ArrayList<Integer> list = new ArrayList<>();\n        list.add(1);  //list.add(new Integer(1)\n        int a = list.get(0);//list.get(0).intValue\n    }\n}\n```\n\n\n\n## 基本类型与字符串之间的转换\n\n1. 直接 基本数据类型  +  \"\"（常用）\n2. 使用 toString(value)、parseInt等（注意格式）","slug":"JavaSE07","published":1,"updated":"2020-03-11T13:42:19.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt15000jyssthnrd2eei","content":"<p>常用 JAVA API 学习 （二）</p>\n<a id=\"more\"></a>\n\n<h2 id=\"Object类\"><a href=\"#Object类\" class=\"headerlink\" title=\"Object类\"></a>Object类</h2><h3 id=\"toString-重写\"><a href=\"#toString-重写\" class=\"headerlink\" title=\"toString 重写\"></a>toString 重写</h3><p>打印对象中的属性值</p>\n<h3 id=\"equals-重写\"><a href=\"#equals-重写\" class=\"headerlink\" title=\"equals 重写\"></a>equals 重写</h3><p>比较对象属性值</p>\n<p><strong>注意：</strong></p>\n<p>用对象工具类 objects.equals() 比较更加健壮。</p>\n<p><strong>exp</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo18;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.demo17.Student;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RT</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Student stu1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">\"lsk\"</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">        Student stu2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">\"lsk\"</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">        System.out.println(stu1.equals(stu2));<span class=\"comment\">// 重写 equals</span></span><br><span class=\"line\"></span><br><span class=\"line\">        String a = <span class=\"string\">\"aaa\"</span>;</span><br><span class=\"line\">        String b = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(b.equals(a));//空指针不能调用方法</span></span><br><span class=\"line\">        System.out.println(Objects.equals(a,b));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo17;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"keyword\">int</span>  age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 覆写 toString</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Student&#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"name='\"</span> + name + <span class=\"string\">'\\''</span> +</span><br><span class=\"line\">                <span class=\"string\">\", age=\"</span> + age +</span><br><span class=\"line\">                <span class=\"string\">'&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 覆写 equals</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == o) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (o == <span class=\"keyword\">null</span> || getClass() != o.getClass()) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        Student student = (Student) o;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age == student.age &amp;&amp;</span><br><span class=\"line\">                Objects.equals(name, student.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Date类\"><a href=\"#Date类\" class=\"headerlink\" title=\"Date类\"></a>Date类</h2><ul>\n<li><p>使用 System.currentTimeMillis() 获取距离时间原点的毫秒值</p>\n</li>\n<li><p>使用 .getTime() 效果同上</p>\n</li>\n<li><p>使用 Date( 参数l ) 带参数构造使毫秒转为日期</p>\n</li>\n<li><p>使用 toLocalString 根据本地格式转换日期对象</p>\n</li>\n<li><p>空参</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoDate1</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Date date = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">        System.out.println(date);</span><br><span class=\"line\"></span><br><span class=\"line\">        Date d1 = <span class=\"keyword\">new</span> Date(<span class=\"number\">0l</span>);</span><br><span class=\"line\">        System.out.println(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">        Date d2 = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">        System.out.println(d2.getTime());</span><br><span class=\"line\">        System.out.println(System.currentTimeMillis());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"DateFormat-类\"><a href=\"#DateFormat-类\" class=\"headerlink\" title=\"DateFormat 类\"></a>DateFormat 类</h2><p>DateFormat 是日期/时间格式化子类的抽象类，不能直接使用，需要其子类   <code>SimpleDateFormat</code>  , 这个类需要一个模式（格式）来指定货解析的标准。</p>\n<p>构造方法如下：</p>\n<p><code>public SimpleDateFormat(String pattern)</code>  </p>\n<p>其中 pattern为日期时间的自定义格式。</p>\n<p><strong>格式规则</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>标识字母（区分大小写）</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>y</td>\n<td>年</td>\n</tr>\n<tr>\n<td>M</td>\n<td>月</td>\n</tr>\n<tr>\n<td>d</td>\n<td>日</td>\n</tr>\n<tr>\n<td>H</td>\n<td>时</td>\n</tr>\n<tr>\n<td>m</td>\n<td>分</td>\n</tr>\n<tr>\n<td>s</td>\n<td>秒</td>\n</tr>\n</tbody></table>\n<p>使用 SimpleDateFormat 的 format 方法按照指定模式，把日期格式化符合模式的字符串。</p>\n<p>使用其 parse 方法把符合模式的字符串，解析为 Date 日期。</p>\n<p><strong>exp:</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo20;</span><br><span class=\"line\"><span class=\"keyword\">import</span> sun.security.provider.Sun;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.ParseException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoD</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ParseException </span>&#123;</span><br><span class=\"line\">        SimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy年MM月dd日HH时mm分ss秒\"</span>);</span><br><span class=\"line\">        Date date = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">        System.out.println(date);</span><br><span class=\"line\">        System.out.println(sdf.format(date));</span><br><span class=\"line\"></span><br><span class=\"line\">        Date date1 = sdf.parse(<span class=\"string\">\"2020年03月08日19时59分42秒\"</span>);</span><br><span class=\"line\">        System.out.println(date1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//结果如下</span></span><br><span class=\"line\"><span class=\"comment\">/*      Sun Mar 08 20:40:03 CST 2020</span></span><br><span class=\"line\"><span class=\"comment\">        2020年03月08日20时40分03秒</span></span><br><span class=\"line\"><span class=\"comment\">        Sun Mar 08 19:59:42 CST 2020    </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"小练习：粗略计算年龄\"><a href=\"#小练习：粗略计算年龄\" class=\"headerlink\" title=\"小练习：粗略计算年龄\"></a>小练习：粗略计算年龄</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo21;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.ParseException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"comment\">//粗略计算年龄</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoMath</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ParseException </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"请输入您的出生日期:（格式为 yyyyMMdd)\"</span>);</span><br><span class=\"line\">        String receiveDate = sc.next();</span><br><span class=\"line\">        SimpleDateFormat sdf= <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyyMMdd\"</span>);</span><br><span class=\"line\">        Date birthdayDate = sdf.parse(receiveDate);</span><br><span class=\"line\">        <span class=\"keyword\">long</span> brthdayDateTime = birthdayDate.getTime();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> todayTime = <span class=\"keyword\">new</span> Date().getTime();</span><br><span class=\"line\">        System.out.println((todayTime - brthdayDateTime)/<span class=\"number\">1000</span>/<span class=\"number\">60</span>/<span class=\"number\">60</span>/<span class=\"number\">24</span>/<span class=\"number\">365</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Calendar\"><a href=\"#Calendar\" class=\"headerlink\" title=\"Calendar\"></a>Calendar</h2><p>Calendar类为抽象类，提供了很多操作日历字段的方法，使用其静态方法 <code>getInstance()</code>返回子类对象。</p>\n<table>\n<thead>\n<tr>\n<th>成员方法</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>int get(int n)</td>\n<td>获取指定日历字段信息</td>\n</tr>\n<tr>\n<td>void set(int n,int value)</td>\n<td>将指定日历字段设置为指定的值</td>\n</tr>\n<tr>\n<td>void add(int n,int value)</td>\n<td>将指定日历字段增加或减少指定的值</td>\n</tr>\n<tr>\n<td>Date getTime()</td>\n<td>转换为 Date 对象</td>\n</tr>\n</tbody></table>\n<h2 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h2><ul>\n<li><p><code>public  static long currentTimeMills()</code>： 返回以毫秒为单位的当前时间。</p>\n</li>\n<li><p><code>public static void arraycopy(Object src,int srcPos,Object dest,int destPos,int length)</code>: 将数组中指定的数据拷贝到另一个数组中。</p>\n</li>\n</ul>\n<h2 id=\"StringBuilder（字符串缓冲区）\"><a href=\"#StringBuilder（字符串缓冲区）\" class=\"headerlink\" title=\"StringBuilder（字符串缓冲区）\"></a>StringBuilder（<strong>字符串缓冲区</strong>）</h2><h3 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h3><ul>\n<li><p><strong>public StringBuilder()</strong>:构造一个空的容器。</p>\n</li>\n<li><p><strong>public StringBuilder(String str)</strong>: 构造一个StringBuilder容器，并将字符串添加进去。</p>\n</li>\n</ul>\n<h3 id=\"成员方法\"><a href=\"#成员方法\" class=\"headerlink\" title=\"成员方法\"></a>成员方法</h3><ul>\n<li><p><strong>public StringBuilder append()</strong>:   添加容易类型的字符串形式，返回当前对象自身（可链式编程）。</p>\n</li>\n<li><p><strong>public StringBuilder reverse()</strong>:   反转内容。</p>\n</li>\n<li><p><strong>public  String  toString()</strong>:  将当前 StringBuilder 对下转换为 String 对象。</p>\n</li>\n</ul>\n<h2 id=\"包装类\"><a href=\"#包装类\" class=\"headerlink\" title=\"包装类\"></a>包装类</h2><h3 id=\"装箱与拆箱\"><a href=\"#装箱与拆箱\" class=\"headerlink\" title=\"装箱与拆箱\"></a>装箱与拆箱</h3><p><strong>装箱：把基本类型的数据包装到包装类中（基本类型的数据- &gt;包装类）</strong></p>\n<p><strong>拆箱：在包装类中取出基本类型的数据（包装类-&gt;基本数据类型）</strong></p>\n<p><strong>exp:</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoBox</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//装箱</span></span><br><span class=\"line\">        <span class=\"comment\">//构造方法</span></span><br><span class=\"line\">        Integer in1 = <span class=\"keyword\">new</span> Integer(<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(in1);</span><br><span class=\"line\">        Integer in2 = <span class=\"keyword\">new</span> Integer(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">        System.out.println(in2);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 静态方法</span></span><br><span class=\"line\">        Integer in3 = Integer.valueOf(<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(in3);</span><br><span class=\"line\">        Integer in4 = Integer.valueOf(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">        System.out.println(in4);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//拆箱</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = in1.intValue();</span><br><span class=\"line\">        System.out.println(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自动装箱与自动拆箱（-gt-JDK1-5\"><a href=\"#自动装箱与自动拆箱（-gt-JDK1-5\" class=\"headerlink\" title=\"自动装箱与自动拆箱（&gt;JDK1.5)\"></a>自动装箱与自动拆箱（&gt;JDK1.5)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoBoo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//自动装箱</span></span><br><span class=\"line\">        Integer in = <span class=\"number\">1</span>;<span class=\"comment\">//相当于 Integer in = new Integer(1)</span></span><br><span class=\"line\">        <span class=\"comment\">//自动拆箱</span></span><br><span class=\"line\">        in = in +<span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        ArrayList&lt;Integer&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"number\">1</span>);  <span class=\"comment\">//list.add(new Integer(1)</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> a = list.get(<span class=\"number\">0</span>);<span class=\"comment\">//list.get(0).intValue</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"基本类型与字符串之间的转换\"><a href=\"#基本类型与字符串之间的转换\" class=\"headerlink\" title=\"基本类型与字符串之间的转换\"></a>基本类型与字符串之间的转换</h2><ol>\n<li>直接 基本数据类型  +  “”（常用）</li>\n<li>使用 toString(value)、parseInt等（注意格式）</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>常用 JAVA API 学习 （二）</p>","more":"<h2 id=\"Object类\"><a href=\"#Object类\" class=\"headerlink\" title=\"Object类\"></a>Object类</h2><h3 id=\"toString-重写\"><a href=\"#toString-重写\" class=\"headerlink\" title=\"toString 重写\"></a>toString 重写</h3><p>打印对象中的属性值</p>\n<h3 id=\"equals-重写\"><a href=\"#equals-重写\" class=\"headerlink\" title=\"equals 重写\"></a>equals 重写</h3><p>比较对象属性值</p>\n<p><strong>注意：</strong></p>\n<p>用对象工具类 objects.equals() 比较更加健壮。</p>\n<p><strong>exp</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo18;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.demo17.Student;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RT</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Student stu1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">\"lsk\"</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">        Student stu2 = <span class=\"keyword\">new</span> Student(<span class=\"string\">\"lsk\"</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">        System.out.println(stu1.equals(stu2));<span class=\"comment\">// 重写 equals</span></span><br><span class=\"line\"></span><br><span class=\"line\">        String a = <span class=\"string\">\"aaa\"</span>;</span><br><span class=\"line\">        String b = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(b.equals(a));//空指针不能调用方法</span></span><br><span class=\"line\">        System.out.println(Objects.equals(a,b));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo17;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"keyword\">int</span>  age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 覆写 toString</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Student&#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"name='\"</span> + name + <span class=\"string\">'\\''</span> +</span><br><span class=\"line\">                <span class=\"string\">\", age=\"</span> + age +</span><br><span class=\"line\">                <span class=\"string\">'&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">// 覆写 equals</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == o) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (o == <span class=\"keyword\">null</span> || getClass() != o.getClass()) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        Student student = (Student) o;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age == student.age &amp;&amp;</span><br><span class=\"line\">                Objects.equals(name, student.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Date类\"><a href=\"#Date类\" class=\"headerlink\" title=\"Date类\"></a>Date类</h2><ul>\n<li><p>使用 System.currentTimeMillis() 获取距离时间原点的毫秒值</p>\n</li>\n<li><p>使用 .getTime() 效果同上</p>\n</li>\n<li><p>使用 Date( 参数l ) 带参数构造使毫秒转为日期</p>\n</li>\n<li><p>使用 toLocalString 根据本地格式转换日期对象</p>\n</li>\n<li><p>空参</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoDate1</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Date date = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">        System.out.println(date);</span><br><span class=\"line\"></span><br><span class=\"line\">        Date d1 = <span class=\"keyword\">new</span> Date(<span class=\"number\">0l</span>);</span><br><span class=\"line\">        System.out.println(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">        Date d2 = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">        System.out.println(d2.getTime());</span><br><span class=\"line\">        System.out.println(System.currentTimeMillis());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"DateFormat-类\"><a href=\"#DateFormat-类\" class=\"headerlink\" title=\"DateFormat 类\"></a>DateFormat 类</h2><p>DateFormat 是日期/时间格式化子类的抽象类，不能直接使用，需要其子类   <code>SimpleDateFormat</code>  , 这个类需要一个模式（格式）来指定货解析的标准。</p>\n<p>构造方法如下：</p>\n<p><code>public SimpleDateFormat(String pattern)</code>  </p>\n<p>其中 pattern为日期时间的自定义格式。</p>\n<p><strong>格式规则</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>标识字母（区分大小写）</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>y</td>\n<td>年</td>\n</tr>\n<tr>\n<td>M</td>\n<td>月</td>\n</tr>\n<tr>\n<td>d</td>\n<td>日</td>\n</tr>\n<tr>\n<td>H</td>\n<td>时</td>\n</tr>\n<tr>\n<td>m</td>\n<td>分</td>\n</tr>\n<tr>\n<td>s</td>\n<td>秒</td>\n</tr>\n</tbody></table>\n<p>使用 SimpleDateFormat 的 format 方法按照指定模式，把日期格式化符合模式的字符串。</p>\n<p>使用其 parse 方法把符合模式的字符串，解析为 Date 日期。</p>\n<p><strong>exp:</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo20;</span><br><span class=\"line\"><span class=\"keyword\">import</span> sun.security.provider.Sun;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.ParseException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoD</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ParseException </span>&#123;</span><br><span class=\"line\">        SimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy年MM月dd日HH时mm分ss秒\"</span>);</span><br><span class=\"line\">        Date date = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">        System.out.println(date);</span><br><span class=\"line\">        System.out.println(sdf.format(date));</span><br><span class=\"line\"></span><br><span class=\"line\">        Date date1 = sdf.parse(<span class=\"string\">\"2020年03月08日19时59分42秒\"</span>);</span><br><span class=\"line\">        System.out.println(date1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//结果如下</span></span><br><span class=\"line\"><span class=\"comment\">/*      Sun Mar 08 20:40:03 CST 2020</span></span><br><span class=\"line\"><span class=\"comment\">        2020年03月08日20时40分03秒</span></span><br><span class=\"line\"><span class=\"comment\">        Sun Mar 08 19:59:42 CST 2020    </span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"小练习：粗略计算年龄\"><a href=\"#小练习：粗略计算年龄\" class=\"headerlink\" title=\"小练习：粗略计算年龄\"></a>小练习：粗略计算年龄</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo21;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.ParseException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"comment\">//粗略计算年龄</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoMath</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ParseException </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"请输入您的出生日期:（格式为 yyyyMMdd)\"</span>);</span><br><span class=\"line\">        String receiveDate = sc.next();</span><br><span class=\"line\">        SimpleDateFormat sdf= <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyyMMdd\"</span>);</span><br><span class=\"line\">        Date birthdayDate = sdf.parse(receiveDate);</span><br><span class=\"line\">        <span class=\"keyword\">long</span> brthdayDateTime = birthdayDate.getTime();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> todayTime = <span class=\"keyword\">new</span> Date().getTime();</span><br><span class=\"line\">        System.out.println((todayTime - brthdayDateTime)/<span class=\"number\">1000</span>/<span class=\"number\">60</span>/<span class=\"number\">60</span>/<span class=\"number\">24</span>/<span class=\"number\">365</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Calendar\"><a href=\"#Calendar\" class=\"headerlink\" title=\"Calendar\"></a>Calendar</h2><p>Calendar类为抽象类，提供了很多操作日历字段的方法，使用其静态方法 <code>getInstance()</code>返回子类对象。</p>\n<table>\n<thead>\n<tr>\n<th>成员方法</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>int get(int n)</td>\n<td>获取指定日历字段信息</td>\n</tr>\n<tr>\n<td>void set(int n,int value)</td>\n<td>将指定日历字段设置为指定的值</td>\n</tr>\n<tr>\n<td>void add(int n,int value)</td>\n<td>将指定日历字段增加或减少指定的值</td>\n</tr>\n<tr>\n<td>Date getTime()</td>\n<td>转换为 Date 对象</td>\n</tr>\n</tbody></table>\n<h2 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h2><ul>\n<li><p><code>public  static long currentTimeMills()</code>： 返回以毫秒为单位的当前时间。</p>\n</li>\n<li><p><code>public static void arraycopy(Object src,int srcPos,Object dest,int destPos,int length)</code>: 将数组中指定的数据拷贝到另一个数组中。</p>\n</li>\n</ul>\n<h2 id=\"StringBuilder（字符串缓冲区）\"><a href=\"#StringBuilder（字符串缓冲区）\" class=\"headerlink\" title=\"StringBuilder（字符串缓冲区）\"></a>StringBuilder（<strong>字符串缓冲区</strong>）</h2><h3 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h3><ul>\n<li><p><strong>public StringBuilder()</strong>:构造一个空的容器。</p>\n</li>\n<li><p><strong>public StringBuilder(String str)</strong>: 构造一个StringBuilder容器，并将字符串添加进去。</p>\n</li>\n</ul>\n<h3 id=\"成员方法\"><a href=\"#成员方法\" class=\"headerlink\" title=\"成员方法\"></a>成员方法</h3><ul>\n<li><p><strong>public StringBuilder append()</strong>:   添加容易类型的字符串形式，返回当前对象自身（可链式编程）。</p>\n</li>\n<li><p><strong>public StringBuilder reverse()</strong>:   反转内容。</p>\n</li>\n<li><p><strong>public  String  toString()</strong>:  将当前 StringBuilder 对下转换为 String 对象。</p>\n</li>\n</ul>\n<h2 id=\"包装类\"><a href=\"#包装类\" class=\"headerlink\" title=\"包装类\"></a>包装类</h2><h3 id=\"装箱与拆箱\"><a href=\"#装箱与拆箱\" class=\"headerlink\" title=\"装箱与拆箱\"></a>装箱与拆箱</h3><p><strong>装箱：把基本类型的数据包装到包装类中（基本类型的数据- &gt;包装类）</strong></p>\n<p><strong>拆箱：在包装类中取出基本类型的数据（包装类-&gt;基本数据类型）</strong></p>\n<p><strong>exp:</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoBox</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//装箱</span></span><br><span class=\"line\">        <span class=\"comment\">//构造方法</span></span><br><span class=\"line\">        Integer in1 = <span class=\"keyword\">new</span> Integer(<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(in1);</span><br><span class=\"line\">        Integer in2 = <span class=\"keyword\">new</span> Integer(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">        System.out.println(in2);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 静态方法</span></span><br><span class=\"line\">        Integer in3 = Integer.valueOf(<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(in3);</span><br><span class=\"line\">        Integer in4 = Integer.valueOf(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">        System.out.println(in4);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//拆箱</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = in1.intValue();</span><br><span class=\"line\">        System.out.println(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自动装箱与自动拆箱（-gt-JDK1-5\"><a href=\"#自动装箱与自动拆箱（-gt-JDK1-5\" class=\"headerlink\" title=\"自动装箱与自动拆箱（&gt;JDK1.5)\"></a>自动装箱与自动拆箱（&gt;JDK1.5)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoBoo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//自动装箱</span></span><br><span class=\"line\">        Integer in = <span class=\"number\">1</span>;<span class=\"comment\">//相当于 Integer in = new Integer(1)</span></span><br><span class=\"line\">        <span class=\"comment\">//自动拆箱</span></span><br><span class=\"line\">        in = in +<span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        ArrayList&lt;Integer&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(<span class=\"number\">1</span>);  <span class=\"comment\">//list.add(new Integer(1)</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> a = list.get(<span class=\"number\">0</span>);<span class=\"comment\">//list.get(0).intValue</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"基本类型与字符串之间的转换\"><a href=\"#基本类型与字符串之间的转换\" class=\"headerlink\" title=\"基本类型与字符串之间的转换\"></a>基本类型与字符串之间的转换</h2><ol>\n<li>直接 基本数据类型  +  “”（常用）</li>\n<li>使用 toString(value)、parseInt等（注意格式）</li>\n</ol>"},{"title":"Java SE 基础系列笔记 (8)","article-thumbnail":false,"keywords":["Java","Collection"],"top":100,"toc":true,"date":"2020-03-12T10:07:14.000Z","thumbnail":null,"_content":"Java 集合（Collection）学习\n<!-- more -->\n\n## Collection 概述\n\nCollection 单列集合类的跟接口，用于存储一系列符合某种规则的元素，包括 java.util.List 与 java.util.Set。\n\n其中，list 特点是元素有序、元素可重复、存储有序，而set 特点是元素无序，不可重复，存储无序。\n\n下面前三为 List 接口实现类，后三是 Set 接口实现类。\n\n### Vector\n\n略\n\n### ArrayList （重点）\n\n底层数组实现，查询块、增删慢\n\n### LinkedList \n\n底层链表实现，查询慢，增删块\n\n###  TreeSet \n\n底层二叉树实现，一般用于排序\n\n### HashSet （重点）\n\n底层哈希表+（红黑树）实现的，无索引、不可以存储重复元素、存取无序\n\n### LinkedHashSet\n\n底层哈希表+链表实现的，无索引、不可以存储重复元素、可以保存存取顺序\n\n## Collection 常用方法\n\n| 方法                   | 功能             |\n| ---------------------- | ---------------- |\n| boolean add(E e)       | 添加元素         |\n| boolean remove(E e)    | 删除元素         |\n| void clear()           | 清空元素         |\n| boolean contains(E e)  | 判断是否包含元素 |\n| boolean isEmpty()      | 判断是否为空     |\n| int size()             | 集合长度         |\n| Object [ ] toArray（） | 集合转数组       |\n\n**exp**\n\n```java\npackage com.demo24;\nimport java.util.ArrayList;\nimport java.util.Collection;\npublic class demo23 {\n    public static void main(String[] args) {\n        Collection<String> coll = new ArrayList<>();\n        coll.add(\"hello\");\n        coll.add(\"hello\");\n        coll.add(\"sb\");\n        coll.add(\"sb\");\n        coll.add(\"sb\");\n        System.out.println(coll); //[hello, hello, sb, sb, sb]\n        coll.remove(\"sb\");\n        coll.remove(\"sb\");\n        System.out.println(coll);\n        boolean result = coll.remove(\"sb\");\n        System.out.println(result);\n        coll.clear();\n        System.out.println(coll);\n        coll.add(\"hero\");\n        coll.add(\"hero\");\n        coll.add(\"hero\");\n        System.out.println(coll.contains(\"her\"));\n        System.out.println(coll.isEmpty());\n        System.out.println(coll.size());\n        Object[] arr = coll.toArray();\n        for (Object o : arr) { //jdk1.5新特性\n            System.out.println(o);\n        }\n    }\n}\n//   [hello, hello, sb, sb, sb]\n//        [hello, hello, sb]\n//        true\n//        []\n//        false\n//        false\n//        3\n//        hero\n//        hero\n//        hero\n\n\n```\n\n\n\n\n\n## Iterator 迭代器\n\n   - boolean hasNext() 如果仍有元素可以迭代，则返回 true，没有返回 false。\n\n   - E next() 返回迭代的下一个元素。\n\n   - Collection 接口中 iterator()方法返回迭代器的实现类对象。\n\n**exp**\n\n```java\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Iterator;\npublic class demoIterator {\n    public static void main(String[] args) {\n        Collection<String> coll = new ArrayList<>();\n        coll.add(\"刘亦菲\");\n        coll.add(\"刘诗诗\");\n        coll.add(\"刘德华\");\n        coll.add(\"刘德华\");\n        coll.add(\"admin\");\n        for (String s : coll) {\n            System.out.println(s);\n        }\n        Iterator<String> it = coll.iterator();\n        while (it.hasNext()){\n            System.out.println(it.next());\n        }\n        System.out.println(\"--------\");\n        for(String s: coll){//增强for循环\n            System.out.println(s);\n        }\n    }\n}\n/*\n刘亦菲\n刘诗诗\n刘德华\n刘德华\nadmin\n刘亦菲\n刘诗诗\n刘德华\n刘德华\nadmin\n--------\n刘亦菲\n刘诗诗\n刘德华\n刘德华\nadmin\n*/\n\n```\n\n","source":"_posts/JavaSE08.md","raw":"---\ntitle: Java SE 基础系列笔记 (8)\narticle-thumbnail: false\nkeywords: [Java,Collection]\ntop: 100\ntoc: true\ntags: [collection]\ndate: 2020-03-12 18:07:14\nthumbnail:\ncategories: Java\n---\nJava 集合（Collection）学习\n<!-- more -->\n\n## Collection 概述\n\nCollection 单列集合类的跟接口，用于存储一系列符合某种规则的元素，包括 java.util.List 与 java.util.Set。\n\n其中，list 特点是元素有序、元素可重复、存储有序，而set 特点是元素无序，不可重复，存储无序。\n\n下面前三为 List 接口实现类，后三是 Set 接口实现类。\n\n### Vector\n\n略\n\n### ArrayList （重点）\n\n底层数组实现，查询块、增删慢\n\n### LinkedList \n\n底层链表实现，查询慢，增删块\n\n###  TreeSet \n\n底层二叉树实现，一般用于排序\n\n### HashSet （重点）\n\n底层哈希表+（红黑树）实现的，无索引、不可以存储重复元素、存取无序\n\n### LinkedHashSet\n\n底层哈希表+链表实现的，无索引、不可以存储重复元素、可以保存存取顺序\n\n## Collection 常用方法\n\n| 方法                   | 功能             |\n| ---------------------- | ---------------- |\n| boolean add(E e)       | 添加元素         |\n| boolean remove(E e)    | 删除元素         |\n| void clear()           | 清空元素         |\n| boolean contains(E e)  | 判断是否包含元素 |\n| boolean isEmpty()      | 判断是否为空     |\n| int size()             | 集合长度         |\n| Object [ ] toArray（） | 集合转数组       |\n\n**exp**\n\n```java\npackage com.demo24;\nimport java.util.ArrayList;\nimport java.util.Collection;\npublic class demo23 {\n    public static void main(String[] args) {\n        Collection<String> coll = new ArrayList<>();\n        coll.add(\"hello\");\n        coll.add(\"hello\");\n        coll.add(\"sb\");\n        coll.add(\"sb\");\n        coll.add(\"sb\");\n        System.out.println(coll); //[hello, hello, sb, sb, sb]\n        coll.remove(\"sb\");\n        coll.remove(\"sb\");\n        System.out.println(coll);\n        boolean result = coll.remove(\"sb\");\n        System.out.println(result);\n        coll.clear();\n        System.out.println(coll);\n        coll.add(\"hero\");\n        coll.add(\"hero\");\n        coll.add(\"hero\");\n        System.out.println(coll.contains(\"her\"));\n        System.out.println(coll.isEmpty());\n        System.out.println(coll.size());\n        Object[] arr = coll.toArray();\n        for (Object o : arr) { //jdk1.5新特性\n            System.out.println(o);\n        }\n    }\n}\n//   [hello, hello, sb, sb, sb]\n//        [hello, hello, sb]\n//        true\n//        []\n//        false\n//        false\n//        3\n//        hero\n//        hero\n//        hero\n\n\n```\n\n\n\n\n\n## Iterator 迭代器\n\n   - boolean hasNext() 如果仍有元素可以迭代，则返回 true，没有返回 false。\n\n   - E next() 返回迭代的下一个元素。\n\n   - Collection 接口中 iterator()方法返回迭代器的实现类对象。\n\n**exp**\n\n```java\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Iterator;\npublic class demoIterator {\n    public static void main(String[] args) {\n        Collection<String> coll = new ArrayList<>();\n        coll.add(\"刘亦菲\");\n        coll.add(\"刘诗诗\");\n        coll.add(\"刘德华\");\n        coll.add(\"刘德华\");\n        coll.add(\"admin\");\n        for (String s : coll) {\n            System.out.println(s);\n        }\n        Iterator<String> it = coll.iterator();\n        while (it.hasNext()){\n            System.out.println(it.next());\n        }\n        System.out.println(\"--------\");\n        for(String s: coll){//增强for循环\n            System.out.println(s);\n        }\n    }\n}\n/*\n刘亦菲\n刘诗诗\n刘德华\n刘德华\nadmin\n刘亦菲\n刘诗诗\n刘德华\n刘德华\nadmin\n--------\n刘亦菲\n刘诗诗\n刘德华\n刘德华\nadmin\n*/\n\n```\n\n","slug":"JavaSE08","published":1,"updated":"2020-03-16T13:26:26.570Z","_id":"ck7uezt19000oysstf9hnhbo6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Java 集合（Collection）学习</p>\n<a id=\"more\"></a>\n\n<h2 id=\"Collection-概述\"><a href=\"#Collection-概述\" class=\"headerlink\" title=\"Collection 概述\"></a>Collection 概述</h2><p>Collection 单列集合类的跟接口，用于存储一系列符合某种规则的元素，包括 java.util.List 与 java.util.Set。</p>\n<p>其中，list 特点是元素有序、元素可重复、存储有序，而set 特点是元素无序，不可重复，存储无序。</p>\n<p>下面前三为 List 接口实现类，后三是 Set 接口实现类。</p>\n<h3 id=\"Vector\"><a href=\"#Vector\" class=\"headerlink\" title=\"Vector\"></a>Vector</h3><p>略</p>\n<h3 id=\"ArrayList-（重点）\"><a href=\"#ArrayList-（重点）\" class=\"headerlink\" title=\"ArrayList （重点）\"></a>ArrayList （重点）</h3><p>底层数组实现，查询块、增删慢</p>\n<h3 id=\"LinkedList\"><a href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h3><p>底层链表实现，查询慢，增删块</p>\n<h3 id=\"TreeSet\"><a href=\"#TreeSet\" class=\"headerlink\" title=\"TreeSet\"></a>TreeSet</h3><p>底层二叉树实现，一般用于排序</p>\n<h3 id=\"HashSet-（重点）\"><a href=\"#HashSet-（重点）\" class=\"headerlink\" title=\"HashSet （重点）\"></a>HashSet （重点）</h3><p>底层哈希表+（红黑树）实现的，无索引、不可以存储重复元素、存取无序</p>\n<h3 id=\"LinkedHashSet\"><a href=\"#LinkedHashSet\" class=\"headerlink\" title=\"LinkedHashSet\"></a>LinkedHashSet</h3><p>底层哈希表+链表实现的，无索引、不可以存储重复元素、可以保存存取顺序</p>\n<h2 id=\"Collection-常用方法\"><a href=\"#Collection-常用方法\" class=\"headerlink\" title=\"Collection 常用方法\"></a>Collection 常用方法</h2><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>boolean add(E e)</td>\n<td>添加元素</td>\n</tr>\n<tr>\n<td>boolean remove(E e)</td>\n<td>删除元素</td>\n</tr>\n<tr>\n<td>void clear()</td>\n<td>清空元素</td>\n</tr>\n<tr>\n<td>boolean contains(E e)</td>\n<td>判断是否包含元素</td>\n</tr>\n<tr>\n<td>boolean isEmpty()</td>\n<td>判断是否为空</td>\n</tr>\n<tr>\n<td>int size()</td>\n<td>集合长度</td>\n</tr>\n<tr>\n<td>Object [ ] toArray（）</td>\n<td>集合转数组</td>\n</tr>\n</tbody></table>\n<p><strong>exp</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo24;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collection;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demo23</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Collection&lt;String&gt; coll = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        System.out.println(coll); <span class=\"comment\">//[hello, hello, sb, sb, sb]</span></span><br><span class=\"line\">        coll.remove(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        coll.remove(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        System.out.println(coll);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> result = coll.remove(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\">        coll.clear();</span><br><span class=\"line\">        System.out.println(coll);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hero\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hero\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hero\"</span>);</span><br><span class=\"line\">        System.out.println(coll.contains(<span class=\"string\">\"her\"</span>));</span><br><span class=\"line\">        System.out.println(coll.isEmpty());</span><br><span class=\"line\">        System.out.println(coll.size());</span><br><span class=\"line\">        Object[] arr = coll.toArray();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Object o : arr) &#123; <span class=\"comment\">//jdk1.5新特性</span></span><br><span class=\"line\">            System.out.println(o);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//   [hello, hello, sb, sb, sb]</span></span><br><span class=\"line\"><span class=\"comment\">//        [hello, hello, sb]</span></span><br><span class=\"line\"><span class=\"comment\">//        true</span></span><br><span class=\"line\"><span class=\"comment\">//        []</span></span><br><span class=\"line\"><span class=\"comment\">//        false</span></span><br><span class=\"line\"><span class=\"comment\">//        false</span></span><br><span class=\"line\"><span class=\"comment\">//        3</span></span><br><span class=\"line\"><span class=\"comment\">//        hero</span></span><br><span class=\"line\"><span class=\"comment\">//        hero</span></span><br><span class=\"line\"><span class=\"comment\">//        hero</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"Iterator-迭代器\"><a href=\"#Iterator-迭代器\" class=\"headerlink\" title=\"Iterator 迭代器\"></a>Iterator 迭代器</h2><ul>\n<li><p>boolean hasNext() 如果仍有元素可以迭代，则返回 true，没有返回 false。</p>\n</li>\n<li><p>E next() 返回迭代的下一个元素。</p>\n</li>\n<li><p>Collection 接口中 iterator()方法返回迭代器的实现类对象。</p>\n</li>\n</ul>\n<p><strong>exp</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoIterator</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Collection&lt;String&gt; coll = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"刘亦菲\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"刘诗诗\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"刘德华\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"刘德华\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"admin\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String s : coll) &#123;</span><br><span class=\"line\">            System.out.println(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Iterator&lt;String&gt; it = coll.iterator();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"--------\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String s: coll)&#123;<span class=\"comment\">//增强for循环</span></span><br><span class=\"line\">            System.out.println(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">刘亦菲</span></span><br><span class=\"line\"><span class=\"comment\">刘诗诗</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">admin</span></span><br><span class=\"line\"><span class=\"comment\">刘亦菲</span></span><br><span class=\"line\"><span class=\"comment\">刘诗诗</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">admin</span></span><br><span class=\"line\"><span class=\"comment\">--------</span></span><br><span class=\"line\"><span class=\"comment\">刘亦菲</span></span><br><span class=\"line\"><span class=\"comment\">刘诗诗</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">admin</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>Java 集合（Collection）学习</p>","more":"<h2 id=\"Collection-概述\"><a href=\"#Collection-概述\" class=\"headerlink\" title=\"Collection 概述\"></a>Collection 概述</h2><p>Collection 单列集合类的跟接口，用于存储一系列符合某种规则的元素，包括 java.util.List 与 java.util.Set。</p>\n<p>其中，list 特点是元素有序、元素可重复、存储有序，而set 特点是元素无序，不可重复，存储无序。</p>\n<p>下面前三为 List 接口实现类，后三是 Set 接口实现类。</p>\n<h3 id=\"Vector\"><a href=\"#Vector\" class=\"headerlink\" title=\"Vector\"></a>Vector</h3><p>略</p>\n<h3 id=\"ArrayList-（重点）\"><a href=\"#ArrayList-（重点）\" class=\"headerlink\" title=\"ArrayList （重点）\"></a>ArrayList （重点）</h3><p>底层数组实现，查询块、增删慢</p>\n<h3 id=\"LinkedList\"><a href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h3><p>底层链表实现，查询慢，增删块</p>\n<h3 id=\"TreeSet\"><a href=\"#TreeSet\" class=\"headerlink\" title=\"TreeSet\"></a>TreeSet</h3><p>底层二叉树实现，一般用于排序</p>\n<h3 id=\"HashSet-（重点）\"><a href=\"#HashSet-（重点）\" class=\"headerlink\" title=\"HashSet （重点）\"></a>HashSet （重点）</h3><p>底层哈希表+（红黑树）实现的，无索引、不可以存储重复元素、存取无序</p>\n<h3 id=\"LinkedHashSet\"><a href=\"#LinkedHashSet\" class=\"headerlink\" title=\"LinkedHashSet\"></a>LinkedHashSet</h3><p>底层哈希表+链表实现的，无索引、不可以存储重复元素、可以保存存取顺序</p>\n<h2 id=\"Collection-常用方法\"><a href=\"#Collection-常用方法\" class=\"headerlink\" title=\"Collection 常用方法\"></a>Collection 常用方法</h2><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>boolean add(E e)</td>\n<td>添加元素</td>\n</tr>\n<tr>\n<td>boolean remove(E e)</td>\n<td>删除元素</td>\n</tr>\n<tr>\n<td>void clear()</td>\n<td>清空元素</td>\n</tr>\n<tr>\n<td>boolean contains(E e)</td>\n<td>判断是否包含元素</td>\n</tr>\n<tr>\n<td>boolean isEmpty()</td>\n<td>判断是否为空</td>\n</tr>\n<tr>\n<td>int size()</td>\n<td>集合长度</td>\n</tr>\n<tr>\n<td>Object [ ] toArray（）</td>\n<td>集合转数组</td>\n</tr>\n</tbody></table>\n<p><strong>exp</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.demo24;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collection;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demo23</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Collection&lt;String&gt; coll = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        System.out.println(coll); <span class=\"comment\">//[hello, hello, sb, sb, sb]</span></span><br><span class=\"line\">        coll.remove(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        coll.remove(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        System.out.println(coll);</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> result = coll.remove(<span class=\"string\">\"sb\"</span>);</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\">        coll.clear();</span><br><span class=\"line\">        System.out.println(coll);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hero\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hero\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"hero\"</span>);</span><br><span class=\"line\">        System.out.println(coll.contains(<span class=\"string\">\"her\"</span>));</span><br><span class=\"line\">        System.out.println(coll.isEmpty());</span><br><span class=\"line\">        System.out.println(coll.size());</span><br><span class=\"line\">        Object[] arr = coll.toArray();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Object o : arr) &#123; <span class=\"comment\">//jdk1.5新特性</span></span><br><span class=\"line\">            System.out.println(o);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//   [hello, hello, sb, sb, sb]</span></span><br><span class=\"line\"><span class=\"comment\">//        [hello, hello, sb]</span></span><br><span class=\"line\"><span class=\"comment\">//        true</span></span><br><span class=\"line\"><span class=\"comment\">//        []</span></span><br><span class=\"line\"><span class=\"comment\">//        false</span></span><br><span class=\"line\"><span class=\"comment\">//        false</span></span><br><span class=\"line\"><span class=\"comment\">//        3</span></span><br><span class=\"line\"><span class=\"comment\">//        hero</span></span><br><span class=\"line\"><span class=\"comment\">//        hero</span></span><br><span class=\"line\"><span class=\"comment\">//        hero</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"Iterator-迭代器\"><a href=\"#Iterator-迭代器\" class=\"headerlink\" title=\"Iterator 迭代器\"></a>Iterator 迭代器</h2><ul>\n<li><p>boolean hasNext() 如果仍有元素可以迭代，则返回 true，没有返回 false。</p>\n</li>\n<li><p>E next() 返回迭代的下一个元素。</p>\n</li>\n<li><p>Collection 接口中 iterator()方法返回迭代器的实现类对象。</p>\n</li>\n</ul>\n<p><strong>exp</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demoIterator</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Collection&lt;String&gt; coll = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"刘亦菲\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"刘诗诗\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"刘德华\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"刘德华\"</span>);</span><br><span class=\"line\">        coll.add(<span class=\"string\">\"admin\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String s : coll) &#123;</span><br><span class=\"line\">            System.out.println(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Iterator&lt;String&gt; it = coll.iterator();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (it.hasNext())&#123;</span><br><span class=\"line\">            System.out.println(it.next());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"--------\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String s: coll)&#123;<span class=\"comment\">//增强for循环</span></span><br><span class=\"line\">            System.out.println(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">刘亦菲</span></span><br><span class=\"line\"><span class=\"comment\">刘诗诗</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">admin</span></span><br><span class=\"line\"><span class=\"comment\">刘亦菲</span></span><br><span class=\"line\"><span class=\"comment\">刘诗诗</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">admin</span></span><br><span class=\"line\"><span class=\"comment\">--------</span></span><br><span class=\"line\"><span class=\"comment\">刘亦菲</span></span><br><span class=\"line\"><span class=\"comment\">刘诗诗</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">刘德华</span></span><br><span class=\"line\"><span class=\"comment\">admin</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>"},{"title":"Hello World","toc":true,"thumbnail":"https://cdn.jsdelivr.net/gh/Aimerence/picBed/images/avatar.jpg","article-thumbnail":false,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!-- more -->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n## Test\n## Test\n## Test\n## Test\n## Test\n## Test\n## Test\n## Test\n\n## Test\n\n## Test\n\n## Test\n## Test\n\n## Test\n## Test\n\n## Test\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntoc: true\nthumbnail: https://cdn.jsdelivr.net/gh/Aimerence/picBed/images/avatar.jpg\narticle-thumbnail: false\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!-- more -->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n## Test\n## Test\n## Test\n## Test\n## Test\n## Test\n## Test\n## Test\n\n## Test\n\n## Test\n\n## Test\n## Test\n\n## Test\n## Test\n\n## Test\n","slug":"hello-world","published":1,"date":"2020-02-19T02:16:11.563Z","updated":"2020-03-06T13:46:28.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt1b000qysst1hf31ae2","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<a id=\"more\"></a>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-1\"><a href=\"#Test-1\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-2\"><a href=\"#Test-2\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-3\"><a href=\"#Test-3\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-4\"><a href=\"#Test-4\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-5\"><a href=\"#Test-5\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-6\"><a href=\"#Test-6\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-7\"><a href=\"#Test-7\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-8\"><a href=\"#Test-8\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-9\"><a href=\"#Test-9\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-10\"><a href=\"#Test-10\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-11\"><a href=\"#Test-11\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-12\"><a href=\"#Test-12\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-13\"><a href=\"#Test-13\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-14\"><a href=\"#Test-14\" class=\"headerlink\" title=\"Test\"></a>Test</h2>","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<h2 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-1\"><a href=\"#Test-1\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-2\"><a href=\"#Test-2\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-3\"><a href=\"#Test-3\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-4\"><a href=\"#Test-4\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-5\"><a href=\"#Test-5\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-6\"><a href=\"#Test-6\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-7\"><a href=\"#Test-7\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-8\"><a href=\"#Test-8\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-9\"><a href=\"#Test-9\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-10\"><a href=\"#Test-10\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-11\"><a href=\"#Test-11\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-12\"><a href=\"#Test-12\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-13\"><a href=\"#Test-13\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h2 id=\"Test-14\"><a href=\"#Test-14\" class=\"headerlink\" title=\"Test\"></a>Test</h2>"},{"title":"计算机网络基础","article-thumbnail":false,"keywords":["计算机网络，网络协议"],"top":100,"toc":true,"date":"2020-03-09T02:17:12.000Z","thumbnail":null,"_content":"\n计算机网络知识\n<!-- more -->\n\n## 计算机网络组成\n\n1. 组成：软件、硬件、协议。\n\n2. 工作方式：边缘部分和核心部分。边缘部分由各主机构成，边缘部分利用核心部分提供的服务，使众多主机之间能够互相通信并交换信息或共享信息；核心部分由许多路由器实现互连，向网络边缘中的主机提供连通性，使边缘部分中的任何一个主机都能够向其他主机通信。\n\n3. 功能组成：通信子网和资源子网。资源子网由主机，终端，和终端控制器组成，提供访问网络和处理数据；通信子网由网络通信设备和通信链路组成，提供数据传输通信。\n\n\n\n## 计算机网络体系结构\n\n###  OSI参考模型（七层模型）\n\n\n\n**OSI（Open System Interconnect）：开放式系统互联**\n\n| OSI 参考模型  |                功能及相关协议                                                     |\n| --------------------------- | ---------------------------------------------------------- |\n| 应用层（Application Layer） | 提供为应用软件而设的接口，以设置与另一应用软件之间的通信。协议例如: HTTP、HTTPS、FTP、TELNET、SSH、SMTP、POP3、DNS、DHCP等。 |\n| 表示层（Presentation Layer） | 主要是进行对接收的数据进行解释、加密与解密、压缩与解压缩等操作，也就是把计算机能识别的东西转换成人类能识别的定西。格式例如：JPEG、ASCll、DECOIC、加密格式等。 |\n| 会话层（Session Layer） | 通过传输层建立数据传输的通路，在系统间发起会话或接受会话的请求。 |\n| 传输层（Transport Layer） | 定义了一些传输数据的协议和端口号，主要将从网络层接受的数据进行分段传输，到达目的地后进行重组，也负责向两台主机进程之间的通信提供通用的数据传输服务。这一层的数据叫段。协议例如 TCP 、UDP等。 |\n| 网络层（Network Layer） | 主要将从数据链路层接受的数据进行IP地址的封装和解封装。这一层工作的设备为路由器，这层的数据叫数据报。协议例如：IP、RIP、ICMP、BGP等。 |\n| 数据链路层（Data Link Layer） | 主要将从物理层接受的数据进行mac地址(网卡的地址)的封装与解封装。在这一层工作的设备为交换机，这层的数据叫帧。协议例如 Wi-Fi 、ARP、IEEE802.3、ATM、PPP、CSMA/CD等。 |\n| 物理层（Physical Layer） | 主要定义物理设备标准。如网线的接口类型、光纤的接口类型、各种传输介质的传输速率等，这层的数据叫比特。还包括例如数据线、调制解调器等。 |\n| | |\n\n###  TCP/IP 四层模型\n\n与 OSI 对比如下表：\n\n| OSI 七层模型 | TCP/IP 四层模型 |\n| ------------ | --------------- |\n| 应用层       | 应用层          |\n| 表示层       | 应用层          |\n| 会话层       | 应用层          |\n| 传输层       | 运输层          |\n| 网络层       | 网络层          |\n| 数据链路层   | 网络接口层      |\n| 物理层       | 网络接口层      |\n\n\n\n### 网络体系图\n\n![network-protocol-map](/postImg/network-protocol-map.gif)\n\n##  TCP 三次握手\n\n### TCP 报文结构\n\n","source":"_posts/computer-network-basic.md","raw":"---\ntitle: 计算机网络基础\narticle-thumbnail: false\nkeywords: [计算机网络，网络协议]\ntop: 100\ntoc: true\ntags: [network]\ndate: 2020-03-09 10:17:12\nthumbnail:\ncategories: Network\n---\n\n计算机网络知识\n<!-- more -->\n\n## 计算机网络组成\n\n1. 组成：软件、硬件、协议。\n\n2. 工作方式：边缘部分和核心部分。边缘部分由各主机构成，边缘部分利用核心部分提供的服务，使众多主机之间能够互相通信并交换信息或共享信息；核心部分由许多路由器实现互连，向网络边缘中的主机提供连通性，使边缘部分中的任何一个主机都能够向其他主机通信。\n\n3. 功能组成：通信子网和资源子网。资源子网由主机，终端，和终端控制器组成，提供访问网络和处理数据；通信子网由网络通信设备和通信链路组成，提供数据传输通信。\n\n\n\n## 计算机网络体系结构\n\n###  OSI参考模型（七层模型）\n\n\n\n**OSI（Open System Interconnect）：开放式系统互联**\n\n| OSI 参考模型  |                功能及相关协议                                                     |\n| --------------------------- | ---------------------------------------------------------- |\n| 应用层（Application Layer） | 提供为应用软件而设的接口，以设置与另一应用软件之间的通信。协议例如: HTTP、HTTPS、FTP、TELNET、SSH、SMTP、POP3、DNS、DHCP等。 |\n| 表示层（Presentation Layer） | 主要是进行对接收的数据进行解释、加密与解密、压缩与解压缩等操作，也就是把计算机能识别的东西转换成人类能识别的定西。格式例如：JPEG、ASCll、DECOIC、加密格式等。 |\n| 会话层（Session Layer） | 通过传输层建立数据传输的通路，在系统间发起会话或接受会话的请求。 |\n| 传输层（Transport Layer） | 定义了一些传输数据的协议和端口号，主要将从网络层接受的数据进行分段传输，到达目的地后进行重组，也负责向两台主机进程之间的通信提供通用的数据传输服务。这一层的数据叫段。协议例如 TCP 、UDP等。 |\n| 网络层（Network Layer） | 主要将从数据链路层接受的数据进行IP地址的封装和解封装。这一层工作的设备为路由器，这层的数据叫数据报。协议例如：IP、RIP、ICMP、BGP等。 |\n| 数据链路层（Data Link Layer） | 主要将从物理层接受的数据进行mac地址(网卡的地址)的封装与解封装。在这一层工作的设备为交换机，这层的数据叫帧。协议例如 Wi-Fi 、ARP、IEEE802.3、ATM、PPP、CSMA/CD等。 |\n| 物理层（Physical Layer） | 主要定义物理设备标准。如网线的接口类型、光纤的接口类型、各种传输介质的传输速率等，这层的数据叫比特。还包括例如数据线、调制解调器等。 |\n| | |\n\n###  TCP/IP 四层模型\n\n与 OSI 对比如下表：\n\n| OSI 七层模型 | TCP/IP 四层模型 |\n| ------------ | --------------- |\n| 应用层       | 应用层          |\n| 表示层       | 应用层          |\n| 会话层       | 应用层          |\n| 传输层       | 运输层          |\n| 网络层       | 网络层          |\n| 数据链路层   | 网络接口层      |\n| 物理层       | 网络接口层      |\n\n\n\n### 网络体系图\n\n![network-protocol-map](/postImg/network-protocol-map.gif)\n\n##  TCP 三次握手\n\n### TCP 报文结构\n\n","slug":"computer-network-basic","published":1,"updated":"2020-03-10T13:04:47.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt1e000uysst3tp1317z","content":"<p>计算机网络知识</p>\n<a id=\"more\"></a>\n\n<h2 id=\"计算机网络组成\"><a href=\"#计算机网络组成\" class=\"headerlink\" title=\"计算机网络组成\"></a>计算机网络组成</h2><ol>\n<li><p>组成：软件、硬件、协议。</p>\n</li>\n<li><p>工作方式：边缘部分和核心部分。边缘部分由各主机构成，边缘部分利用核心部分提供的服务，使众多主机之间能够互相通信并交换信息或共享信息；核心部分由许多路由器实现互连，向网络边缘中的主机提供连通性，使边缘部分中的任何一个主机都能够向其他主机通信。</p>\n</li>\n<li><p>功能组成：通信子网和资源子网。资源子网由主机，终端，和终端控制器组成，提供访问网络和处理数据；通信子网由网络通信设备和通信链路组成，提供数据传输通信。</p>\n</li>\n</ol>\n<h2 id=\"计算机网络体系结构\"><a href=\"#计算机网络体系结构\" class=\"headerlink\" title=\"计算机网络体系结构\"></a>计算机网络体系结构</h2><h3 id=\"OSI参考模型（七层模型）\"><a href=\"#OSI参考模型（七层模型）\" class=\"headerlink\" title=\"OSI参考模型（七层模型）\"></a>OSI参考模型（七层模型）</h3><p><strong>OSI（Open System Interconnect）：开放式系统互联</strong></p>\n<table>\n<thead>\n<tr>\n<th>OSI 参考模型</th>\n<th>功能及相关协议</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>应用层（Application Layer）</td>\n<td>提供为应用软件而设的接口，以设置与另一应用软件之间的通信。协议例如: HTTP、HTTPS、FTP、TELNET、SSH、SMTP、POP3、DNS、DHCP等。</td>\n</tr>\n<tr>\n<td>表示层（Presentation Layer）</td>\n<td>主要是进行对接收的数据进行解释、加密与解密、压缩与解压缩等操作，也就是把计算机能识别的东西转换成人类能识别的定西。格式例如：JPEG、ASCll、DECOIC、加密格式等。</td>\n</tr>\n<tr>\n<td>会话层（Session Layer）</td>\n<td>通过传输层建立数据传输的通路，在系统间发起会话或接受会话的请求。</td>\n</tr>\n<tr>\n<td>传输层（Transport Layer）</td>\n<td>定义了一些传输数据的协议和端口号，主要将从网络层接受的数据进行分段传输，到达目的地后进行重组，也负责向两台主机进程之间的通信提供通用的数据传输服务。这一层的数据叫段。协议例如 TCP 、UDP等。</td>\n</tr>\n<tr>\n<td>网络层（Network Layer）</td>\n<td>主要将从数据链路层接受的数据进行IP地址的封装和解封装。这一层工作的设备为路由器，这层的数据叫数据报。协议例如：IP、RIP、ICMP、BGP等。</td>\n</tr>\n<tr>\n<td>数据链路层（Data Link Layer）</td>\n<td>主要将从物理层接受的数据进行mac地址(网卡的地址)的封装与解封装。在这一层工作的设备为交换机，这层的数据叫帧。协议例如 Wi-Fi 、ARP、IEEE802.3、ATM、PPP、CSMA/CD等。</td>\n</tr>\n<tr>\n<td>物理层（Physical Layer）</td>\n<td>主要定义物理设备标准。如网线的接口类型、光纤的接口类型、各种传输介质的传输速率等，这层的数据叫比特。还包括例如数据线、调制解调器等。</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"TCP-IP-四层模型\"><a href=\"#TCP-IP-四层模型\" class=\"headerlink\" title=\"TCP/IP 四层模型\"></a>TCP/IP 四层模型</h3><p>与 OSI 对比如下表：</p>\n<table>\n<thead>\n<tr>\n<th>OSI 七层模型</th>\n<th>TCP/IP 四层模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>应用层</td>\n<td>应用层</td>\n</tr>\n<tr>\n<td>表示层</td>\n<td>应用层</td>\n</tr>\n<tr>\n<td>会话层</td>\n<td>应用层</td>\n</tr>\n<tr>\n<td>传输层</td>\n<td>运输层</td>\n</tr>\n<tr>\n<td>网络层</td>\n<td>网络层</td>\n</tr>\n<tr>\n<td>数据链路层</td>\n<td>网络接口层</td>\n</tr>\n<tr>\n<td>物理层</td>\n<td>网络接口层</td>\n</tr>\n</tbody></table>\n<h3 id=\"网络体系图\"><a href=\"#网络体系图\" class=\"headerlink\" title=\"网络体系图\"></a>网络体系图</h3><p><img src=\"/postImg/network-protocol-map.gif\" alt=\"network-protocol-map\"></p>\n<h2 id=\"TCP-三次握手\"><a href=\"#TCP-三次握手\" class=\"headerlink\" title=\"TCP 三次握手\"></a>TCP 三次握手</h2><h3 id=\"TCP-报文结构\"><a href=\"#TCP-报文结构\" class=\"headerlink\" title=\"TCP 报文结构\"></a>TCP 报文结构</h3>","site":{"data":{}},"excerpt":"<p>计算机网络知识</p>","more":"<h2 id=\"计算机网络组成\"><a href=\"#计算机网络组成\" class=\"headerlink\" title=\"计算机网络组成\"></a>计算机网络组成</h2><ol>\n<li><p>组成：软件、硬件、协议。</p>\n</li>\n<li><p>工作方式：边缘部分和核心部分。边缘部分由各主机构成，边缘部分利用核心部分提供的服务，使众多主机之间能够互相通信并交换信息或共享信息；核心部分由许多路由器实现互连，向网络边缘中的主机提供连通性，使边缘部分中的任何一个主机都能够向其他主机通信。</p>\n</li>\n<li><p>功能组成：通信子网和资源子网。资源子网由主机，终端，和终端控制器组成，提供访问网络和处理数据；通信子网由网络通信设备和通信链路组成，提供数据传输通信。</p>\n</li>\n</ol>\n<h2 id=\"计算机网络体系结构\"><a href=\"#计算机网络体系结构\" class=\"headerlink\" title=\"计算机网络体系结构\"></a>计算机网络体系结构</h2><h3 id=\"OSI参考模型（七层模型）\"><a href=\"#OSI参考模型（七层模型）\" class=\"headerlink\" title=\"OSI参考模型（七层模型）\"></a>OSI参考模型（七层模型）</h3><p><strong>OSI（Open System Interconnect）：开放式系统互联</strong></p>\n<table>\n<thead>\n<tr>\n<th>OSI 参考模型</th>\n<th>功能及相关协议</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>应用层（Application Layer）</td>\n<td>提供为应用软件而设的接口，以设置与另一应用软件之间的通信。协议例如: HTTP、HTTPS、FTP、TELNET、SSH、SMTP、POP3、DNS、DHCP等。</td>\n</tr>\n<tr>\n<td>表示层（Presentation Layer）</td>\n<td>主要是进行对接收的数据进行解释、加密与解密、压缩与解压缩等操作，也就是把计算机能识别的东西转换成人类能识别的定西。格式例如：JPEG、ASCll、DECOIC、加密格式等。</td>\n</tr>\n<tr>\n<td>会话层（Session Layer）</td>\n<td>通过传输层建立数据传输的通路，在系统间发起会话或接受会话的请求。</td>\n</tr>\n<tr>\n<td>传输层（Transport Layer）</td>\n<td>定义了一些传输数据的协议和端口号，主要将从网络层接受的数据进行分段传输，到达目的地后进行重组，也负责向两台主机进程之间的通信提供通用的数据传输服务。这一层的数据叫段。协议例如 TCP 、UDP等。</td>\n</tr>\n<tr>\n<td>网络层（Network Layer）</td>\n<td>主要将从数据链路层接受的数据进行IP地址的封装和解封装。这一层工作的设备为路由器，这层的数据叫数据报。协议例如：IP、RIP、ICMP、BGP等。</td>\n</tr>\n<tr>\n<td>数据链路层（Data Link Layer）</td>\n<td>主要将从物理层接受的数据进行mac地址(网卡的地址)的封装与解封装。在这一层工作的设备为交换机，这层的数据叫帧。协议例如 Wi-Fi 、ARP、IEEE802.3、ATM、PPP、CSMA/CD等。</td>\n</tr>\n<tr>\n<td>物理层（Physical Layer）</td>\n<td>主要定义物理设备标准。如网线的接口类型、光纤的接口类型、各种传输介质的传输速率等，这层的数据叫比特。还包括例如数据线、调制解调器等。</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"TCP-IP-四层模型\"><a href=\"#TCP-IP-四层模型\" class=\"headerlink\" title=\"TCP/IP 四层模型\"></a>TCP/IP 四层模型</h3><p>与 OSI 对比如下表：</p>\n<table>\n<thead>\n<tr>\n<th>OSI 七层模型</th>\n<th>TCP/IP 四层模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>应用层</td>\n<td>应用层</td>\n</tr>\n<tr>\n<td>表示层</td>\n<td>应用层</td>\n</tr>\n<tr>\n<td>会话层</td>\n<td>应用层</td>\n</tr>\n<tr>\n<td>传输层</td>\n<td>运输层</td>\n</tr>\n<tr>\n<td>网络层</td>\n<td>网络层</td>\n</tr>\n<tr>\n<td>数据链路层</td>\n<td>网络接口层</td>\n</tr>\n<tr>\n<td>物理层</td>\n<td>网络接口层</td>\n</tr>\n</tbody></table>\n<h3 id=\"网络体系图\"><a href=\"#网络体系图\" class=\"headerlink\" title=\"网络体系图\"></a>网络体系图</h3><p><img src=\"/postImg/network-protocol-map.gif\" alt=\"network-protocol-map\"></p>\n<h2 id=\"TCP-三次握手\"><a href=\"#TCP-三次握手\" class=\"headerlink\" title=\"TCP 三次握手\"></a>TCP 三次握手</h2><h3 id=\"TCP-报文结构\"><a href=\"#TCP-报文结构\" class=\"headerlink\" title=\"TCP 报文结构\"></a>TCP 报文结构</h3>"},{"title":"《念念手记》观后感","date":"2020-02-28T14:29:44.000Z","_content":"\n**Typecho 站还在时写的一篇电影水文。**\n\n<!-- more -->\n\n趁着周末，跟朋友去看了《念念手纪》。初看海报，还以为是散发着青春恋爱主题的影片，观后它更像是部纯爱片，纯的成分占了多数，而正是这种日式纯爱吸引了我。而这部影片传达的主题，不仅仅展现了青春时会有青涩爱恋，更多的是对生命的思考，对人与人之间建立纽带的期盼，纯爱的主题在爱情的映衬下而显得更加感人。正如影片所说的那样，“谁都不知道明天会发生什么，所以，才要珍惜过每一天，每一刻。“没有人能够随随便便的经过过你身旁，而那些能过走到你心房里的那些人，我们应该倍加珍惜，你的出现，拯救了自己，也拯救了他们。我想说的是，无论是什么人，是亲人也好，恋人也好，朋友也好，只要那个人在你的生命里划过痕迹，就请爱他们，做出你的决定与行动，哪怕是最后的陪伴。记住，也要爱你自己，珍惜当下的一切，在有限的人生里爱上一些人，爱上自己，这是件多么令人欣慰的事。\n\n  看完影片，心里还是有点不舒服。对于男主的表现，不满意。女生生前以她的方式在拯救男主，希望男主春树能够脱离自己的小世界，然而女生不在了，男生工作了却要辞职，当老师还是那副精神萎靡的样子，她是希望男主能够多与别人交流，希望他能结交一些朋友，而他还是这副样子，算什么男人?影片最后，男主似乎是醒悟了，有所改变，但我总觉得不够，他还有很长的路要走，不然对不起她对他的期望。我就来以我的观点来先评价下男主的性格，一个在班上没有存在感的男生，哦吼，好像有那么一点点我以前的影子，不过他真的很胆小、不敢与别人有过多交流，不想麻烦别人，也不接受别人的好意，这是有多么的“不食人间烟火”，他唯一的爱好，估计是呆在图书馆一个人看书，不想有人打扰。永远也叫不醒一个装睡的人，没有她的出现，很难想象他以后的情况。男生终究是太傻，或者我干脆说他太笨，还有些冷漠。一个女生，强颜欢笑，想方设法想让男生明白些重要的事，而他，由拒绝到被动接受，到被动感动，到被动做出些改变，没有自己的想法，没有想为她做些什么的行动。她是病人，你也是病人，没有爱是理所当然的，所以请将你的爱及时传达给她。或许，人无完人，人总是在经历了种种，才会有些许改变，些许改变，或许也已足够。\n\n  很难想象一个即将因胰脏坏了要死去的活泼女生在得知情况后还能坦然微笑面对，她想了很多，不告诉最好的朋友她活不了多久的消息，为了是不让朋友伤心难过，早早的写了遗书；与志贺春树成为关系好同学，希望他能有所改变，喜欢她；安排好了在生命的最后日子要做完的事，对生命的热爱，可见一斑。女主樱木很是聪明，又善解人意，活泼可爱，坚强乐观，可上天总是爱开玩笑，越是美的，就越不公平，连最后的几个月的生命，也被突如其来的一场意外提前结束了年轻的生命，留下了男主的难过与懊悔。若是遇上这样一个性格基本完美的女生，你的生命就不应该平庸，要活出你的意义。\n\n  “我死了的话，我的胰脏都给你吃哦”，这句话很让人触动，女主樱良听说过，如果能吃掉某人的胰脏，就能够永远活在那个吃的人身体里。她是多么的希望男主能够永远记得她。她知道他无法把她这个将死之人当作女朋友，她在她的信中说道：“我知道你不想把任何一个恋人或者朋友的位置，留给我这个快要死掉的人”，她内心一定是很难过的，而她却表现的很自然，这其中的心疼只有她一个人能够体会得到。伴随着痛苦，伴随这快乐，她也决意要挺过去，为了她所要完成的事。两个人是不是恋人，是不是朋友，已经都不重要了，有种感情比平常的爱情更加的迷人，更感人。她安排好了自己的遗书，却没能想到自己死的比预期还早，没能进行第二次旅行。生命不易，且行且珍惜。爱惜自己，爱你所爱的人，这很容易，也真的很难。\n\n  全片最煽情的那段，男主问樱良母亲，他能哭吗，那一刻，他嚎啕大哭，从一点点哭泣，到最后情不自禁的大哭，能感受的，有他的失落、难过、伤心、懊悔。。。我也禁不住哭了，这么好的一个女孩，说走就走了，真的不忍心啊。\n\n  可能我自己对男主有些期望过高了，以为他在后半段能为女生创造喜悦，然而他还没开始做，一切戛然而止，令人唏嘘。男生的性格有缺陷，若没有她，他将何去何从？当然，一切仍有变数。拯救，或许是电影反映的一个主题，但我想让大家明白，这也是我想对我自己说的：生命之中，并不是总有那个人会来拯救你的，更多的时候，你要自救，不让自己沉迷过往，退一万步来说，为那个生命中可能会来拯救你的人也好，还是没人来拯救你也好，就算为了你自己，为了生命本身，你也应该积极进取，离开自己的小岛。为你，可以千千万万遍。\n\n  樱花很美，美的让人害怕。日本的小清新作品中，有种人文关怀，有种超越男欢女爱的纯爱，很温暖，很治愈。没有亲吻，没有牵过手，跟激情无关，这与欧美片有很大不同，却能够通过人物内心感情的流露，来展示这一切的事物，这或许是我喜欢看日本人写的小说缘故吧。\n\n<div class = \"lightGallery\"> \n\n","source":"_posts/pancreas.md","raw":"---\ntitle: 《念念手记》观后感\ndate: 2020-02-28 22:29:44\ncategories: Movie\ntags: review\n---\n\n**Typecho 站还在时写的一篇电影水文。**\n\n<!-- more -->\n\n趁着周末，跟朋友去看了《念念手纪》。初看海报，还以为是散发着青春恋爱主题的影片，观后它更像是部纯爱片，纯的成分占了多数，而正是这种日式纯爱吸引了我。而这部影片传达的主题，不仅仅展现了青春时会有青涩爱恋，更多的是对生命的思考，对人与人之间建立纽带的期盼，纯爱的主题在爱情的映衬下而显得更加感人。正如影片所说的那样，“谁都不知道明天会发生什么，所以，才要珍惜过每一天，每一刻。“没有人能够随随便便的经过过你身旁，而那些能过走到你心房里的那些人，我们应该倍加珍惜，你的出现，拯救了自己，也拯救了他们。我想说的是，无论是什么人，是亲人也好，恋人也好，朋友也好，只要那个人在你的生命里划过痕迹，就请爱他们，做出你的决定与行动，哪怕是最后的陪伴。记住，也要爱你自己，珍惜当下的一切，在有限的人生里爱上一些人，爱上自己，这是件多么令人欣慰的事。\n\n  看完影片，心里还是有点不舒服。对于男主的表现，不满意。女生生前以她的方式在拯救男主，希望男主春树能够脱离自己的小世界，然而女生不在了，男生工作了却要辞职，当老师还是那副精神萎靡的样子，她是希望男主能够多与别人交流，希望他能结交一些朋友，而他还是这副样子，算什么男人?影片最后，男主似乎是醒悟了，有所改变，但我总觉得不够，他还有很长的路要走，不然对不起她对他的期望。我就来以我的观点来先评价下男主的性格，一个在班上没有存在感的男生，哦吼，好像有那么一点点我以前的影子，不过他真的很胆小、不敢与别人有过多交流，不想麻烦别人，也不接受别人的好意，这是有多么的“不食人间烟火”，他唯一的爱好，估计是呆在图书馆一个人看书，不想有人打扰。永远也叫不醒一个装睡的人，没有她的出现，很难想象他以后的情况。男生终究是太傻，或者我干脆说他太笨，还有些冷漠。一个女生，强颜欢笑，想方设法想让男生明白些重要的事，而他，由拒绝到被动接受，到被动感动，到被动做出些改变，没有自己的想法，没有想为她做些什么的行动。她是病人，你也是病人，没有爱是理所当然的，所以请将你的爱及时传达给她。或许，人无完人，人总是在经历了种种，才会有些许改变，些许改变，或许也已足够。\n\n  很难想象一个即将因胰脏坏了要死去的活泼女生在得知情况后还能坦然微笑面对，她想了很多，不告诉最好的朋友她活不了多久的消息，为了是不让朋友伤心难过，早早的写了遗书；与志贺春树成为关系好同学，希望他能有所改变，喜欢她；安排好了在生命的最后日子要做完的事，对生命的热爱，可见一斑。女主樱木很是聪明，又善解人意，活泼可爱，坚强乐观，可上天总是爱开玩笑，越是美的，就越不公平，连最后的几个月的生命，也被突如其来的一场意外提前结束了年轻的生命，留下了男主的难过与懊悔。若是遇上这样一个性格基本完美的女生，你的生命就不应该平庸，要活出你的意义。\n\n  “我死了的话，我的胰脏都给你吃哦”，这句话很让人触动，女主樱良听说过，如果能吃掉某人的胰脏，就能够永远活在那个吃的人身体里。她是多么的希望男主能够永远记得她。她知道他无法把她这个将死之人当作女朋友，她在她的信中说道：“我知道你不想把任何一个恋人或者朋友的位置，留给我这个快要死掉的人”，她内心一定是很难过的，而她却表现的很自然，这其中的心疼只有她一个人能够体会得到。伴随着痛苦，伴随这快乐，她也决意要挺过去，为了她所要完成的事。两个人是不是恋人，是不是朋友，已经都不重要了，有种感情比平常的爱情更加的迷人，更感人。她安排好了自己的遗书，却没能想到自己死的比预期还早，没能进行第二次旅行。生命不易，且行且珍惜。爱惜自己，爱你所爱的人，这很容易，也真的很难。\n\n  全片最煽情的那段，男主问樱良母亲，他能哭吗，那一刻，他嚎啕大哭，从一点点哭泣，到最后情不自禁的大哭，能感受的，有他的失落、难过、伤心、懊悔。。。我也禁不住哭了，这么好的一个女孩，说走就走了，真的不忍心啊。\n\n  可能我自己对男主有些期望过高了，以为他在后半段能为女生创造喜悦，然而他还没开始做，一切戛然而止，令人唏嘘。男生的性格有缺陷，若没有她，他将何去何从？当然，一切仍有变数。拯救，或许是电影反映的一个主题，但我想让大家明白，这也是我想对我自己说的：生命之中，并不是总有那个人会来拯救你的，更多的时候，你要自救，不让自己沉迷过往，退一万步来说，为那个生命中可能会来拯救你的人也好，还是没人来拯救你也好，就算为了你自己，为了生命本身，你也应该积极进取，离开自己的小岛。为你，可以千千万万遍。\n\n  樱花很美，美的让人害怕。日本的小清新作品中，有种人文关怀，有种超越男欢女爱的纯爱，很温暖，很治愈。没有亲吻，没有牵过手，跟激情无关，这与欧美片有很大不同，却能够通过人物内心感情的流露，来展示这一切的事物，这或许是我喜欢看日本人写的小说缘故吧。\n\n<div class = \"lightGallery\"> \n\n","slug":"pancreas","published":1,"updated":"2020-03-10T01:37:10.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7uezt1g000xysstgzwd3p1b","content":"<p><strong>Typecho 站还在时写的一篇电影水文。</strong></p>\n<a id=\"more\"></a>\n\n<p>趁着周末，跟朋友去看了《念念手纪》。初看海报，还以为是散发着青春恋爱主题的影片，观后它更像是部纯爱片，纯的成分占了多数，而正是这种日式纯爱吸引了我。而这部影片传达的主题，不仅仅展现了青春时会有青涩爱恋，更多的是对生命的思考，对人与人之间建立纽带的期盼，纯爱的主题在爱情的映衬下而显得更加感人。正如影片所说的那样，“谁都不知道明天会发生什么，所以，才要珍惜过每一天，每一刻。“没有人能够随随便便的经过过你身旁，而那些能过走到你心房里的那些人，我们应该倍加珍惜，你的出现，拯救了自己，也拯救了他们。我想说的是，无论是什么人，是亲人也好，恋人也好，朋友也好，只要那个人在你的生命里划过痕迹，就请爱他们，做出你的决定与行动，哪怕是最后的陪伴。记住，也要爱你自己，珍惜当下的一切，在有限的人生里爱上一些人，爱上自己，这是件多么令人欣慰的事。</p>\n<p>  看完影片，心里还是有点不舒服。对于男主的表现，不满意。女生生前以她的方式在拯救男主，希望男主春树能够脱离自己的小世界，然而女生不在了，男生工作了却要辞职，当老师还是那副精神萎靡的样子，她是希望男主能够多与别人交流，希望他能结交一些朋友，而他还是这副样子，算什么男人?影片最后，男主似乎是醒悟了，有所改变，但我总觉得不够，他还有很长的路要走，不然对不起她对他的期望。我就来以我的观点来先评价下男主的性格，一个在班上没有存在感的男生，哦吼，好像有那么一点点我以前的影子，不过他真的很胆小、不敢与别人有过多交流，不想麻烦别人，也不接受别人的好意，这是有多么的“不食人间烟火”，他唯一的爱好，估计是呆在图书馆一个人看书，不想有人打扰。永远也叫不醒一个装睡的人，没有她的出现，很难想象他以后的情况。男生终究是太傻，或者我干脆说他太笨，还有些冷漠。一个女生，强颜欢笑，想方设法想让男生明白些重要的事，而他，由拒绝到被动接受，到被动感动，到被动做出些改变，没有自己的想法，没有想为她做些什么的行动。她是病人，你也是病人，没有爱是理所当然的，所以请将你的爱及时传达给她。或许，人无完人，人总是在经历了种种，才会有些许改变，些许改变，或许也已足够。</p>\n<p>  很难想象一个即将因胰脏坏了要死去的活泼女生在得知情况后还能坦然微笑面对，她想了很多，不告诉最好的朋友她活不了多久的消息，为了是不让朋友伤心难过，早早的写了遗书；与志贺春树成为关系好同学，希望他能有所改变，喜欢她；安排好了在生命的最后日子要做完的事，对生命的热爱，可见一斑。女主樱木很是聪明，又善解人意，活泼可爱，坚强乐观，可上天总是爱开玩笑，越是美的，就越不公平，连最后的几个月的生命，也被突如其来的一场意外提前结束了年轻的生命，留下了男主的难过与懊悔。若是遇上这样一个性格基本完美的女生，你的生命就不应该平庸，要活出你的意义。</p>\n<p>  “我死了的话，我的胰脏都给你吃哦”，这句话很让人触动，女主樱良听说过，如果能吃掉某人的胰脏，就能够永远活在那个吃的人身体里。她是多么的希望男主能够永远记得她。她知道他无法把她这个将死之人当作女朋友，她在她的信中说道：“我知道你不想把任何一个恋人或者朋友的位置，留给我这个快要死掉的人”，她内心一定是很难过的，而她却表现的很自然，这其中的心疼只有她一个人能够体会得到。伴随着痛苦，伴随这快乐，她也决意要挺过去，为了她所要完成的事。两个人是不是恋人，是不是朋友，已经都不重要了，有种感情比平常的爱情更加的迷人，更感人。她安排好了自己的遗书，却没能想到自己死的比预期还早，没能进行第二次旅行。生命不易，且行且珍惜。爱惜自己，爱你所爱的人，这很容易，也真的很难。</p>\n<p>  全片最煽情的那段，男主问樱良母亲，他能哭吗，那一刻，他嚎啕大哭，从一点点哭泣，到最后情不自禁的大哭，能感受的，有他的失落、难过、伤心、懊悔。。。我也禁不住哭了，这么好的一个女孩，说走就走了，真的不忍心啊。</p>\n<p>  可能我自己对男主有些期望过高了，以为他在后半段能为女生创造喜悦，然而他还没开始做，一切戛然而止，令人唏嘘。男生的性格有缺陷，若没有她，他将何去何从？当然，一切仍有变数。拯救，或许是电影反映的一个主题，但我想让大家明白，这也是我想对我自己说的：生命之中，并不是总有那个人会来拯救你的，更多的时候，你要自救，不让自己沉迷过往，退一万步来说，为那个生命中可能会来拯救你的人也好，还是没人来拯救你也好，就算为了你自己，为了生命本身，你也应该积极进取，离开自己的小岛。为你，可以千千万万遍。</p>\n<p>  樱花很美，美的让人害怕。日本的小清新作品中，有种人文关怀，有种超越男欢女爱的纯爱，很温暖，很治愈。没有亲吻，没有牵过手，跟激情无关，这与欧美片有很大不同，却能够通过人物内心感情的流露，来展示这一切的事物，这或许是我喜欢看日本人写的小说缘故吧。</p>\n<div class = \"lightGallery\"> \n\n","site":{"data":{}},"excerpt":"<p><strong>Typecho 站还在时写的一篇电影水文。</strong></p>","more":"<p>趁着周末，跟朋友去看了《念念手纪》。初看海报，还以为是散发着青春恋爱主题的影片，观后它更像是部纯爱片，纯的成分占了多数，而正是这种日式纯爱吸引了我。而这部影片传达的主题，不仅仅展现了青春时会有青涩爱恋，更多的是对生命的思考，对人与人之间建立纽带的期盼，纯爱的主题在爱情的映衬下而显得更加感人。正如影片所说的那样，“谁都不知道明天会发生什么，所以，才要珍惜过每一天，每一刻。“没有人能够随随便便的经过过你身旁，而那些能过走到你心房里的那些人，我们应该倍加珍惜，你的出现，拯救了自己，也拯救了他们。我想说的是，无论是什么人，是亲人也好，恋人也好，朋友也好，只要那个人在你的生命里划过痕迹，就请爱他们，做出你的决定与行动，哪怕是最后的陪伴。记住，也要爱你自己，珍惜当下的一切，在有限的人生里爱上一些人，爱上自己，这是件多么令人欣慰的事。</p>\n<p>  看完影片，心里还是有点不舒服。对于男主的表现，不满意。女生生前以她的方式在拯救男主，希望男主春树能够脱离自己的小世界，然而女生不在了，男生工作了却要辞职，当老师还是那副精神萎靡的样子，她是希望男主能够多与别人交流，希望他能结交一些朋友，而他还是这副样子，算什么男人?影片最后，男主似乎是醒悟了，有所改变，但我总觉得不够，他还有很长的路要走，不然对不起她对他的期望。我就来以我的观点来先评价下男主的性格，一个在班上没有存在感的男生，哦吼，好像有那么一点点我以前的影子，不过他真的很胆小、不敢与别人有过多交流，不想麻烦别人，也不接受别人的好意，这是有多么的“不食人间烟火”，他唯一的爱好，估计是呆在图书馆一个人看书，不想有人打扰。永远也叫不醒一个装睡的人，没有她的出现，很难想象他以后的情况。男生终究是太傻，或者我干脆说他太笨，还有些冷漠。一个女生，强颜欢笑，想方设法想让男生明白些重要的事，而他，由拒绝到被动接受，到被动感动，到被动做出些改变，没有自己的想法，没有想为她做些什么的行动。她是病人，你也是病人，没有爱是理所当然的，所以请将你的爱及时传达给她。或许，人无完人，人总是在经历了种种，才会有些许改变，些许改变，或许也已足够。</p>\n<p>  很难想象一个即将因胰脏坏了要死去的活泼女生在得知情况后还能坦然微笑面对，她想了很多，不告诉最好的朋友她活不了多久的消息，为了是不让朋友伤心难过，早早的写了遗书；与志贺春树成为关系好同学，希望他能有所改变，喜欢她；安排好了在生命的最后日子要做完的事，对生命的热爱，可见一斑。女主樱木很是聪明，又善解人意，活泼可爱，坚强乐观，可上天总是爱开玩笑，越是美的，就越不公平，连最后的几个月的生命，也被突如其来的一场意外提前结束了年轻的生命，留下了男主的难过与懊悔。若是遇上这样一个性格基本完美的女生，你的生命就不应该平庸，要活出你的意义。</p>\n<p>  “我死了的话，我的胰脏都给你吃哦”，这句话很让人触动，女主樱良听说过，如果能吃掉某人的胰脏，就能够永远活在那个吃的人身体里。她是多么的希望男主能够永远记得她。她知道他无法把她这个将死之人当作女朋友，她在她的信中说道：“我知道你不想把任何一个恋人或者朋友的位置，留给我这个快要死掉的人”，她内心一定是很难过的，而她却表现的很自然，这其中的心疼只有她一个人能够体会得到。伴随着痛苦，伴随这快乐，她也决意要挺过去，为了她所要完成的事。两个人是不是恋人，是不是朋友，已经都不重要了，有种感情比平常的爱情更加的迷人，更感人。她安排好了自己的遗书，却没能想到自己死的比预期还早，没能进行第二次旅行。生命不易，且行且珍惜。爱惜自己，爱你所爱的人，这很容易，也真的很难。</p>\n<p>  全片最煽情的那段，男主问樱良母亲，他能哭吗，那一刻，他嚎啕大哭，从一点点哭泣，到最后情不自禁的大哭，能感受的，有他的失落、难过、伤心、懊悔。。。我也禁不住哭了，这么好的一个女孩，说走就走了，真的不忍心啊。</p>\n<p>  可能我自己对男主有些期望过高了，以为他在后半段能为女生创造喜悦，然而他还没开始做，一切戛然而止，令人唏嘘。男生的性格有缺陷，若没有她，他将何去何从？当然，一切仍有变数。拯救，或许是电影反映的一个主题，但我想让大家明白，这也是我想对我自己说的：生命之中，并不是总有那个人会来拯救你的，更多的时候，你要自救，不让自己沉迷过往，退一万步来说，为那个生命中可能会来拯救你的人也好，还是没人来拯救你也好，就算为了你自己，为了生命本身，你也应该积极进取，离开自己的小岛。为你，可以千千万万遍。</p>\n<p>  樱花很美，美的让人害怕。日本的小清新作品中，有种人文关怀，有种超越男欢女爱的纯爱，很温暖，很治愈。没有亲吻，没有牵过手，跟激情无关，这与欧美片有很大不同，却能够通过人物内心感情的流露，来展示这一切的事物，这或许是我喜欢看日本人写的小说缘故吧。</p>\n<div class = \"lightGallery\">"},{"title":"MySQL 学习笔记","article-thumbnail":false,"keywords":["MySQL"],"top":100,"toc":true,"date":"2020-03-23T14:48:58.000Z","thumbnail":null,"_content":"\n开始学习 MySQL 数据库\n<!-- more -->\n\n# 启动/关闭\n\n**管理员权限下运行cmd  :**\n`net start mysql`\n`net stop mysql`\n\n# 连接\n\n`mysql -uroot -proot`\n\n**`root` 为个人设置的用户名和密码**\n\n\n\n","source":"_posts/MySQL-Study.md","raw":"---\ntitle: MySQL 学习笔记\narticle-thumbnail: false\nkeywords: [MySQL]\ntop: 100\ntoc: true\ntags: [mysql]\ndate: 2020-03-23 22:48:58\nthumbnail:\ncategories: MySQL\n---\n\n开始学习 MySQL 数据库\n<!-- more -->\n\n# 启动/关闭\n\n**管理员权限下运行cmd  :**\n`net start mysql`\n`net stop mysql`\n\n# 连接\n\n`mysql -uroot -proot`\n\n**`root` 为个人设置的用户名和密码**\n\n\n\n","slug":"MySQL-Study","published":1,"updated":"2020-03-24T03:00:08.948Z","_id":"ck84lcxja0000zouc50zvhfyr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>开始学习 MySQL 数据库</p>\n<a id=\"more\"></a>\n\n<h1 id=\"启动-关闭\"><a href=\"#启动-关闭\" class=\"headerlink\" title=\"启动/关闭\"></a>启动/关闭</h1><p><strong>管理员权限下运行cmd  :</strong><br><code>net start mysql</code><br><code>net stop mysql</code></p>\n<h1 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h1><p><code>mysql -uroot -proot</code></p>\n<p><strong><code>root</code> 为个人设置的用户名和密码</strong></p>\n","site":{"data":{}},"excerpt":"<p>开始学习 MySQL 数据库</p>","more":"<h1 id=\"启动-关闭\"><a href=\"#启动-关闭\" class=\"headerlink\" title=\"启动/关闭\"></a>启动/关闭</h1><p><strong>管理员权限下运行cmd  :</strong><br><code>net start mysql</code><br><code>net stop mysql</code></p>\n<h1 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h1><p><code>mysql -uroot -proot</code></p>\n<p><strong><code>root</code> 为个人设置的用户名和密码</strong></p>"},{"title":"一些自用软件推荐","article-thumbnail":false,"keywords":["software","tools","efficiency"],"top":100,"toc":true,"date":"2020-03-07T06:07:42.000Z","thumbnail":null,"_content":"\n一些自用软件（Win）\n\n<!-- more -->\n\n* **Typora(Markdown编辑器，美而易用)**\n* **FinalShell(SSH 客户端工具，支持文件管理，评价不一)**\n* **向日葵(远程控制软件，好像比 tv 好用)**\n* **Chrome（浏览器，还是开发工具)**\n* **Adobe After Effects（视觉效果和动态图形处理软件，没用过）**\n* **IDLE (Python 开发工具，小白版，好用还是选 pycharm)**\n* **Word (文字处理软件，不多说)**\n* **火绒（安全软件，很安静）**\n* **网易有道词典（支持截屏翻译，其它功能我好像不需要）**\n* **Codeblocks(C/C++开发工具，小巧)**\n* **IDM(多线程下载工具，配合chrome很舒服)**\n* **Vs Code(代码编辑器/开发工具，内置Git，多扩展)**\n* **VM VirtualBox(虚拟机)**\n* **VMware Workstation(虚拟机)**\n* **网易云音乐(音乐云盘好评)**\n* **Camtasia 9(专业录屏软件，非常好用)**\n* **CPLEX(规划/优化软件)**\n* **Adobe Photoshop (ps)**\n* **百度网盘**\n* **PotPlayer(本地视频播放器)**\n* **IDEA (Java 开发工具)**\n* **爱思助手（苹果助手，可以用于ipad管理）**\n* **Snipaste （截图工具）**\n* **PicGo (图片上传工具)**\n* **冰点文库（百度文库下载器）**\n* **石墨/幕布/Xmind(思维导图及团队合作)**\n* **Irfanview(图片浏览/管理)**\n* **Bandzip(压缩工具)**\n* **Disgenius(硬盘分区工具)**\n* **Git(代码版本同步)**\n* **未完待续...**","source":"_posts/self-use-software.md","raw":"---\ntitle: 一些自用软件推荐\narticle-thumbnail: false\nkeywords: [software,tools,efficiency]\ntop: 100\ntoc: true\ntags: [software]\ndate: 2020-03-07 14:07:42\nthumbnail:\ncategories: Tools\n---\n\n一些自用软件（Win）\n\n<!-- more -->\n\n* **Typora(Markdown编辑器，美而易用)**\n* **FinalShell(SSH 客户端工具，支持文件管理，评价不一)**\n* **向日葵(远程控制软件，好像比 tv 好用)**\n* **Chrome（浏览器，还是开发工具)**\n* **Adobe After Effects（视觉效果和动态图形处理软件，没用过）**\n* **IDLE (Python 开发工具，小白版，好用还是选 pycharm)**\n* **Word (文字处理软件，不多说)**\n* **火绒（安全软件，很安静）**\n* **网易有道词典（支持截屏翻译，其它功能我好像不需要）**\n* **Codeblocks(C/C++开发工具，小巧)**\n* **IDM(多线程下载工具，配合chrome很舒服)**\n* **Vs Code(代码编辑器/开发工具，内置Git，多扩展)**\n* **VM VirtualBox(虚拟机)**\n* **VMware Workstation(虚拟机)**\n* **网易云音乐(音乐云盘好评)**\n* **Camtasia 9(专业录屏软件，非常好用)**\n* **CPLEX(规划/优化软件)**\n* **Adobe Photoshop (ps)**\n* **百度网盘**\n* **PotPlayer(本地视频播放器)**\n* **IDEA (Java 开发工具)**\n* **爱思助手（苹果助手，可以用于ipad管理）**\n* **Snipaste （截图工具）**\n* **PicGo (图片上传工具)**\n* **冰点文库（百度文库下载器）**\n* **石墨/幕布/Xmind(思维导图及团队合作)**\n* **Irfanview(图片浏览/管理)**\n* **Bandzip(压缩工具)**\n* **Disgenius(硬盘分区工具)**\n* **Git(代码版本同步)**\n* **未完待续...**","slug":"self-use-software","published":1,"updated":"2020-03-07T07:35:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck84lgb40000000uceewo5z7d","content":"<p>一些自用软件（Win）</p>\n<a id=\"more\"></a>\n\n<ul>\n<li><strong>Typora(Markdown编辑器，美而易用)</strong></li>\n<li><strong>FinalShell(SSH 客户端工具，支持文件管理，评价不一)</strong></li>\n<li><strong>向日葵(远程控制软件，好像比 tv 好用)</strong></li>\n<li><strong>Chrome（浏览器，还是开发工具)</strong></li>\n<li><strong>Adobe After Effects（视觉效果和动态图形处理软件，没用过）</strong></li>\n<li><strong>IDLE (Python 开发工具，小白版，好用还是选 pycharm)</strong></li>\n<li><strong>Word (文字处理软件，不多说)</strong></li>\n<li><strong>火绒（安全软件，很安静）</strong></li>\n<li><strong>网易有道词典（支持截屏翻译，其它功能我好像不需要）</strong></li>\n<li><strong>Codeblocks(C/C++开发工具，小巧)</strong></li>\n<li><strong>IDM(多线程下载工具，配合chrome很舒服)</strong></li>\n<li><strong>Vs Code(代码编辑器/开发工具，内置Git，多扩展)</strong></li>\n<li><strong>VM VirtualBox(虚拟机)</strong></li>\n<li><strong>VMware Workstation(虚拟机)</strong></li>\n<li><strong>网易云音乐(音乐云盘好评)</strong></li>\n<li><strong>Camtasia 9(专业录屏软件，非常好用)</strong></li>\n<li><strong>CPLEX(规划/优化软件)</strong></li>\n<li><strong>Adobe Photoshop (ps)</strong></li>\n<li><strong>百度网盘</strong></li>\n<li><strong>PotPlayer(本地视频播放器)</strong></li>\n<li><strong>IDEA (Java 开发工具)</strong></li>\n<li><strong>爱思助手（苹果助手，可以用于ipad管理）</strong></li>\n<li><strong>Snipaste （截图工具）</strong></li>\n<li><strong>PicGo (图片上传工具)</strong></li>\n<li><strong>冰点文库（百度文库下载器）</strong></li>\n<li><strong>石墨/幕布/Xmind(思维导图及团队合作)</strong></li>\n<li><strong>Irfanview(图片浏览/管理)</strong></li>\n<li><strong>Bandzip(压缩工具)</strong></li>\n<li><strong>Disgenius(硬盘分区工具)</strong></li>\n<li><strong>Git(代码版本同步)</strong></li>\n<li><strong>未完待续…</strong></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>一些自用软件（Win）</p>","more":"<ul>\n<li><strong>Typora(Markdown编辑器，美而易用)</strong></li>\n<li><strong>FinalShell(SSH 客户端工具，支持文件管理，评价不一)</strong></li>\n<li><strong>向日葵(远程控制软件，好像比 tv 好用)</strong></li>\n<li><strong>Chrome（浏览器，还是开发工具)</strong></li>\n<li><strong>Adobe After Effects（视觉效果和动态图形处理软件，没用过）</strong></li>\n<li><strong>IDLE (Python 开发工具，小白版，好用还是选 pycharm)</strong></li>\n<li><strong>Word (文字处理软件，不多说)</strong></li>\n<li><strong>火绒（安全软件，很安静）</strong></li>\n<li><strong>网易有道词典（支持截屏翻译，其它功能我好像不需要）</strong></li>\n<li><strong>Codeblocks(C/C++开发工具，小巧)</strong></li>\n<li><strong>IDM(多线程下载工具，配合chrome很舒服)</strong></li>\n<li><strong>Vs Code(代码编辑器/开发工具，内置Git，多扩展)</strong></li>\n<li><strong>VM VirtualBox(虚拟机)</strong></li>\n<li><strong>VMware Workstation(虚拟机)</strong></li>\n<li><strong>网易云音乐(音乐云盘好评)</strong></li>\n<li><strong>Camtasia 9(专业录屏软件，非常好用)</strong></li>\n<li><strong>CPLEX(规划/优化软件)</strong></li>\n<li><strong>Adobe Photoshop (ps)</strong></li>\n<li><strong>百度网盘</strong></li>\n<li><strong>PotPlayer(本地视频播放器)</strong></li>\n<li><strong>IDEA (Java 开发工具)</strong></li>\n<li><strong>爱思助手（苹果助手，可以用于ipad管理）</strong></li>\n<li><strong>Snipaste （截图工具）</strong></li>\n<li><strong>PicGo (图片上传工具)</strong></li>\n<li><strong>冰点文库（百度文库下载器）</strong></li>\n<li><strong>石墨/幕布/Xmind(思维导图及团队合作)</strong></li>\n<li><strong>Irfanview(图片浏览/管理)</strong></li>\n<li><strong>Bandzip(压缩工具)</strong></li>\n<li><strong>Disgenius(硬盘分区工具)</strong></li>\n<li><strong>Git(代码版本同步)</strong></li>\n<li><strong>未完待续…</strong></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck7uezt0f0000ysstd93n5fst","category_id":"ck7uezt0s0004ysst4ed5h1ts","_id":"ck7uezt13000eysst6chmd63v"},{"post_id":"ck7uezt0p0002ysste02d2zse","category_id":"ck7uezt0z000aysst3qw73dme","_id":"ck7uezt17000lysstatgb4loa"},{"post_id":"ck7uezt14000hysstfwyefx3s","category_id":"ck7uezt13000fysstatinf3ia","_id":"ck7uezt1c000rysstdxa7bgwu"},{"post_id":"ck7uezt0v0006ysst5vs8205m","category_id":"ck7uezt13000fysstatinf3ia","_id":"ck7uezt1f000vysst61swgn3u"},{"post_id":"ck7uezt15000jyssthnrd2eei","category_id":"ck7uezt13000fysstatinf3ia","_id":"ck7uezt1h000yysst17gzbzk3"},{"post_id":"ck7uezt19000oysstf9hnhbo6","category_id":"ck7uezt13000fysstatinf3ia","_id":"ck7uezt1i0011ysstc2z21g9t"},{"post_id":"ck7uezt0x0008ysst2ios5jg4","category_id":"ck7uezt13000fysstatinf3ia","_id":"ck7uezt1k0015ysst41faaq2n"},{"post_id":"ck7uezt0y0009ysst7php8r75","category_id":"ck7uezt13000fysstatinf3ia","_id":"ck7uezt1m0017ysst9ga1alga"},{"post_id":"ck7uezt11000cysstexe2997b","category_id":"ck7uezt13000fysstatinf3ia","_id":"ck7uezt1n001bysst9l5f2fe3"},{"post_id":"ck7uezt12000dysstcv8h3bu4","category_id":"ck7uezt13000fysstatinf3ia","_id":"ck7uezt1o001eysste62i6mgc"},{"post_id":"ck7uezt1e000uysst3tp1317z","category_id":"ck7uezt1n001aysstfdys2ved","_id":"ck7uezt1p001iysstcns9003c"},{"post_id":"ck7uezt1g000xysstgzwd3p1b","category_id":"ck7uezt1o001fyssthaqvb37h","_id":"ck7uezt1q001mysst3cw7677u"},{"post_id":"ck84lgb40000000uceewo5z7d","category_id":"ck7uezt1p001jysst0fwxev5d","_id":"ck84lgb54000200uc8zct3wvq"},{"post_id":"ck84lcxja0000zouc50zvhfyr","category_id":"ck84lhl3y000300uc5y05514k","_id":"ck84lhl41000600uc1glu8bwd"}],"PostTag":[{"post_id":"ck7uezt0f0000ysstd93n5fst","tag_id":"ck7uezt0u0005ysstftg6dtkq","_id":"ck7uezt15000iysst1tms9vbz"},{"post_id":"ck7uezt0f0000ysstd93n5fst","tag_id":"ck7uezt10000bysst8wcx9mnz","_id":"ck7uezt17000kysst13dg1tf9"},{"post_id":"ck7uezt0p0002ysste02d2zse","tag_id":"ck7uezt13000gysst5kitcbjv","_id":"ck7uezt1b000pysst52e1exgr"},{"post_id":"ck7uezt0v0006ysst5vs8205m","tag_id":"ck7uezt17000nysst6p4a6c8k","_id":"ck7uezt1g000wysst91p00lfv"},{"post_id":"ck7uezt0x0008ysst2ios5jg4","tag_id":"ck7uezt1d000tysste0mj5ook","_id":"ck7uezt1j0013ysst4wk378tu"},{"post_id":"ck7uezt0y0009ysst7php8r75","tag_id":"ck7uezt1i0012ysst97h6foup","_id":"ck7uezt1n0019ysstb0bx3zo2"},{"post_id":"ck7uezt11000cysstexe2997b","tag_id":"ck7uezt1m0018ysstdqgn32ry","_id":"ck7uezt1o001dysst3daw6fq1"},{"post_id":"ck7uezt12000dysstcv8h3bu4","tag_id":"ck7uezt1n001cysst6cvt8raj","_id":"ck7uezt1p001hysst0tdnglcq"},{"post_id":"ck7uezt14000hysstfwyefx3s","tag_id":"ck7uezt1o001gyssth6us8dn6","_id":"ck7uezt1q001lysst8p6p5mzg"},{"post_id":"ck7uezt15000jyssthnrd2eei","tag_id":"ck7uezt1o001gyssth6us8dn6","_id":"ck7uezt1r001oysstet717sg9"},{"post_id":"ck7uezt19000oysstf9hnhbo6","tag_id":"ck7uezt1r001nysst83dy0nxt","_id":"ck7uezt1s001rysst444j41gf"},{"post_id":"ck7uezt1e000uysst3tp1317z","tag_id":"ck7uezt1s001qysst8qts7fu4","_id":"ck7uezt1u001tysst0pun1aar"},{"post_id":"ck7uezt1g000xysstgzwd3p1b","tag_id":"ck7uezt1s001sysst2glf2nag","_id":"ck7uezt1y001vysst0ndo6w96"},{"post_id":"ck84lgb40000000uceewo5z7d","tag_id":"ck7uezt1u001uysst3fv556af","_id":"ck84lgb53000100uc0oz43o1a"},{"post_id":"ck84lcxja0000zouc50zvhfyr","tag_id":"ck84lhl3z000400uc3q7qf56a","_id":"ck84lhl41000500ucco0o7f51"}],"Tag":[{"name":"icarus","_id":"ck7uezt0u0005ysstftg6dtkq"},{"name":"hexo","_id":"ck7uezt10000bysst8wcx9mnz"},{"name":"cplex","_id":"ck7uezt13000gysst5kitcbjv"},{"name":"inherit","_id":"ck7uezt17000nysst6p4a6c8k"},{"name":"basic","_id":"ck7uezt1d000tysste0mj5ook"},{"name":"interface","_id":"ck7uezt1i0012ysst97h6foup"},{"name":"polymorphism","_id":"ck7uezt1m0018ysstdqgn32ry"},{"name":"inner","_id":"ck7uezt1n001cysst6cvt8raj"},{"name":"api","_id":"ck7uezt1o001gyssth6us8dn6"},{"name":"collection","_id":"ck7uezt1r001nysst83dy0nxt"},{"name":"network","_id":"ck7uezt1s001qysst8qts7fu4"},{"name":"review","_id":"ck7uezt1s001sysst2glf2nag"},{"name":"software","_id":"ck7uezt1u001uysst3fv556af"},{"name":"halo","_id":"ck803z35t0002csstayzt3o5a"},{"name":"mysql","_id":"ck84lhl3z000400uc3q7qf56a"}]}}